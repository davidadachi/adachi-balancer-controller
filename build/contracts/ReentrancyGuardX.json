{
  "contractName": "ReentrancyGuardX",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ReentrancyGuard.sol\":\"ReentrancyGuardX\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\":{\"keccak256\":\"0xf8eeb6c6ad4a8a5a0b72eec1fcae67df37b4682be1fa87ab41dc9ce09f02a7f8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fe6d060b6d4c8b237a55c33fb6d5cd959491bd815e92e7d9c15c03c3a9a6a064\",\"dweb:/ipfs/QmRAMquirua4mrTYSXFHquMJmgD35Dri5XFjHdpT2ny8bN\"]},\"project:/contracts/ReentrancyGuard.sol\":{\"keccak256\":\"0x9fd03d08794925dd336a6ea4d2afdfb5e4987adf8ffcf58f7825d4385cbc7eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff2baf68c6f8bbf9c7b67b24a862db662b56a4ec82c455c8e39edce3d9c00379\",\"dweb:/ipfs/QmdP7523HM9G1bwLAvbTg2Ju26eXZwdvSYAWMaz2YMSJbo\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\n// Based on the ReentrancyGuard library from OpenZeppelin Contracts, altered to reduce bytecode size.\n// Modifier code is inlined by the compiler, which causes its code to appear multiple times in the codebase. By using\n// private functions, we achieve the same end result with slightly higher runtime gas costs, but reduced bytecode size.\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardX {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _enterNonReentrant();\n        _;\n        _exitNonReentrant();\n    }\n\n    function _enterNonReentrant() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        _require(_status != _ENTERED, Errors.REENTRANCY);\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _exitNonReentrant() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n",
  "sourcePath": "/home/eagle/Source/BalancerControllerRestored/Balancer.Controller/contracts/ReentrancyGuard.sol",
  "ast": {
    "absolutePath": "project:/contracts/ReentrancyGuard.sol",
    "exportedSymbols": {
      "Errors": [
        851
      ],
      "ReentrancyGuardX": [
        2018
      ],
      "_require": [
        295,
        314
      ],
      "_revert": [
        326,
        346
      ]
    },
    "id": 2019,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1964,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "374:31:18"
      },
      {
        "absolutePath": "@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol",
        "file": "@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol",
        "id": 1965,
        "nodeType": "ImportDirective",
        "scope": 2019,
        "sourceUnit": 852,
        "src": "407:90:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1966,
          "nodeType": "StructuredDocumentation",
          "src": "499:750:18",
          "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
        },
        "fullyImplemented": true,
        "id": 2018,
        "linearizedBaseContracts": [
          2018
        ],
        "name": "ReentrancyGuardX",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1969,
            "mutability": "constant",
            "name": "_NOT_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "2039:41:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1967,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2039:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1968,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2079:1:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1972,
            "mutability": "constant",
            "name": "_ENTERED",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "2086:37:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1970,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2086:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 1971,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2122:1:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1974,
            "mutability": "mutable",
            "name": "_status",
            "nodeType": "VariableDeclaration",
            "scope": 2018,
            "src": "2130:23:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1973,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2130:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1981,
              "nodeType": "Block",
              "src": "2174:39:18",
              "statements": [
                {
                  "expression": {
                    "id": 1979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1977,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "2184:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1978,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "2194:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2184:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1980,
                  "nodeType": "ExpressionStatement",
                  "src": "2184:22:18"
                }
              ]
            },
            "id": 1982,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2171:2:18"
            },
            "returnParameters": {
              "id": 1976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2174:0:18"
            },
            "scope": 2018,
            "src": "2160:53:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1992,
              "nodeType": "Block",
              "src": "2612:77:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1985,
                      "name": "_enterNonReentrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2009,
                      "src": "2622:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:20:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1987,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:20:18"
                },
                {
                  "id": 1988,
                  "nodeType": "PlaceholderStatement",
                  "src": "2652:1:18"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1989,
                      "name": "_exitNonReentrant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2017,
                      "src": "2663:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2663:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "2663:19:18"
                }
              ]
            },
            "documentation": {
              "id": 1983,
              "nodeType": "StructuredDocumentation",
              "src": "2219:364:18",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
            },
            "id": 1993,
            "name": "nonReentrant",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:2:18"
            },
            "src": "2588:101:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2008,
              "nodeType": "Block",
              "src": "2733:233:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1997,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1974,
                          "src": "2827:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1998,
                          "name": "_ENTERED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1972,
                          "src": "2838:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2827:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 2000,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 851,
                          "src": "2848:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$851_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 2001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "REENTRANCY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 610,
                        "src": "2848:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1996,
                      "name": "_require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        295,
                        314
                      ],
                      "referencedDeclaration": 295,
                      "src": "2818:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bool,uint256) pure"
                      }
                    },
                    "id": 2002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2818:48:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2003,
                  "nodeType": "ExpressionStatement",
                  "src": "2818:48:18"
                },
                {
                  "expression": {
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2004,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "2941:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2005,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1972,
                      "src": "2951:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2941:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2007,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:18:18"
                }
              ]
            },
            "id": 2009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enterNonReentrant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2722:2:18"
            },
            "returnParameters": {
              "id": 1995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2733:0:18"
            },
            "scope": 2018,
            "src": "2695:271:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2016,
              "nodeType": "Block",
              "src": "3009:171:18",
              "statements": [
                {
                  "expression": {
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2012,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "3151:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2013,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "3161:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3151:22:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2015,
                  "nodeType": "ExpressionStatement",
                  "src": "3151:22:18"
                }
              ]
            },
            "id": 2017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exitNonReentrant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2998:2:18"
            },
            "returnParameters": {
              "id": 2011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3009:0:18"
            },
            "scope": 2018,
            "src": "2972:208:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 2019,
        "src": "1250:1932:18"
      }
    ],
    "src": "374:2809:18"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/ReentrancyGuard.sol",
      "exportedSymbols": {
        "Errors": [
          851
        ],
        "ReentrancyGuardX": [
          2018
        ],
        "_require": [
          295,
          314
        ],
        "_revert": [
          326,
          346
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".0",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 1964,
        "name": "PragmaDirective",
        "src": "374:31:18"
      },
      {
        "attributes": {
          "SourceUnit": 852,
          "absolutePath": "@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol",
          "file": "@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/BalancerErrors.sol",
          "scope": 2019,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1965,
        "name": "ImportDirective",
        "src": "407:90:18"
      },
      {
        "attributes": {
          "abstract": true,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2018
          ],
          "name": "ReentrancyGuardX",
          "scope": 2019
        },
        "children": [
          {
            "attributes": {
              "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
            },
            "id": 1966,
            "name": "StructuredDocumentation",
            "src": "499:750:18"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_NOT_ENTERED",
              "scope": 2018,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1967,
                "name": "ElementaryTypeName",
                "src": "2039:7:18"
              },
              {
                "attributes": {
                  "hexvalue": "31",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 1",
                  "value": "1"
                },
                "id": 1968,
                "name": "Literal",
                "src": "2079:1:18"
              }
            ],
            "id": 1969,
            "name": "VariableDeclaration",
            "src": "2039:41:18"
          },
          {
            "attributes": {
              "constant": true,
              "mutability": "constant",
              "name": "_ENTERED",
              "scope": 2018,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1970,
                "name": "ElementaryTypeName",
                "src": "2086:7:18"
              },
              {
                "attributes": {
                  "hexvalue": "32",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 2",
                  "value": "2"
                },
                "id": 1971,
                "name": "Literal",
                "src": "2122:1:18"
              }
            ],
            "id": 1972,
            "name": "VariableDeclaration",
            "src": "2086:37:18"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_status",
              "scope": 2018,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1973,
                "name": "ElementaryTypeName",
                "src": "2130:7:18"
              }
            ],
            "id": 1974,
            "name": "VariableDeclaration",
            "src": "2130:23:18"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 2018,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1975,
                "name": "ParameterList",
                "src": "2171:2:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1976,
                "name": "ParameterList",
                "src": "2174:0:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1974,
                              "type": "uint256",
                              "value": "_status"
                            },
                            "id": 1977,
                            "name": "Identifier",
                            "src": "2184:7:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1969,
                              "type": "uint256",
                              "value": "_NOT_ENTERED"
                            },
                            "id": 1978,
                            "name": "Identifier",
                            "src": "2194:12:18"
                          }
                        ],
                        "id": 1979,
                        "name": "Assignment",
                        "src": "2184:22:18"
                      }
                    ],
                    "id": 1980,
                    "name": "ExpressionStatement",
                    "src": "2184:22:18"
                  }
                ],
                "id": 1981,
                "name": "Block",
                "src": "2174:39:18"
              }
            ],
            "id": 1982,
            "name": "FunctionDefinition",
            "src": "2160:53:18"
          },
          {
            "attributes": {
              "name": "nonReentrant",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
                },
                "id": 1983,
                "name": "StructuredDocumentation",
                "src": "2219:364:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1984,
                "name": "ParameterList",
                "src": "2609:2:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2009,
                              "type": "function ()",
                              "value": "_enterNonReentrant"
                            },
                            "id": 1985,
                            "name": "Identifier",
                            "src": "2622:18:18"
                          }
                        ],
                        "id": 1986,
                        "name": "FunctionCall",
                        "src": "2622:20:18"
                      }
                    ],
                    "id": 1987,
                    "name": "ExpressionStatement",
                    "src": "2622:20:18"
                  },
                  {
                    "id": 1988,
                    "name": "PlaceholderStatement",
                    "src": "2652:1:18"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2017,
                              "type": "function ()",
                              "value": "_exitNonReentrant"
                            },
                            "id": 1989,
                            "name": "Identifier",
                            "src": "2663:17:18"
                          }
                        ],
                        "id": 1990,
                        "name": "FunctionCall",
                        "src": "2663:19:18"
                      }
                    ],
                    "id": 1991,
                    "name": "ExpressionStatement",
                    "src": "2663:19:18"
                  }
                ],
                "id": 1992,
                "name": "Block",
                "src": "2612:77:18"
              }
            ],
            "id": 1993,
            "name": "ModifierDefinition",
            "src": "2588:101:18"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_enterNonReentrant",
              "scope": 2018,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1994,
                "name": "ParameterList",
                "src": "2722:2:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1995,
                "name": "ParameterList",
                "src": "2733:0:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                295,
                                314
                              ],
                              "referencedDeclaration": 295,
                              "type": "function (bool,uint256) pure",
                              "value": "_require"
                            },
                            "id": 1996,
                            "name": "Identifier",
                            "src": "2818:8:18"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1974,
                                  "type": "uint256",
                                  "value": "_status"
                                },
                                "id": 1997,
                                "name": "Identifier",
                                "src": "2827:7:18"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1972,
                                  "type": "uint256",
                                  "value": "_ENTERED"
                                },
                                "id": 1998,
                                "name": "Identifier",
                                "src": "2838:8:18"
                              }
                            ],
                            "id": 1999,
                            "name": "BinaryOperation",
                            "src": "2827:19:18"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "REENTRANCY",
                              "referencedDeclaration": 610,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 851,
                                  "type": "type(library Errors)",
                                  "value": "Errors"
                                },
                                "id": 2000,
                                "name": "Identifier",
                                "src": "2848:6:18"
                              }
                            ],
                            "id": 2001,
                            "name": "MemberAccess",
                            "src": "2848:17:18"
                          }
                        ],
                        "id": 2002,
                        "name": "FunctionCall",
                        "src": "2818:48:18"
                      }
                    ],
                    "id": 2003,
                    "name": "ExpressionStatement",
                    "src": "2818:48:18"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1974,
                              "type": "uint256",
                              "value": "_status"
                            },
                            "id": 2004,
                            "name": "Identifier",
                            "src": "2941:7:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1972,
                              "type": "uint256",
                              "value": "_ENTERED"
                            },
                            "id": 2005,
                            "name": "Identifier",
                            "src": "2951:8:18"
                          }
                        ],
                        "id": 2006,
                        "name": "Assignment",
                        "src": "2941:18:18"
                      }
                    ],
                    "id": 2007,
                    "name": "ExpressionStatement",
                    "src": "2941:18:18"
                  }
                ],
                "id": 2008,
                "name": "Block",
                "src": "2733:233:18"
              }
            ],
            "id": 2009,
            "name": "FunctionDefinition",
            "src": "2695:271:18"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_exitNonReentrant",
              "scope": 2018,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2010,
                "name": "ParameterList",
                "src": "2998:2:18"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2011,
                "name": "ParameterList",
                "src": "3009:0:18"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1974,
                              "type": "uint256",
                              "value": "_status"
                            },
                            "id": 2012,
                            "name": "Identifier",
                            "src": "3151:7:18"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1969,
                              "type": "uint256",
                              "value": "_NOT_ENTERED"
                            },
                            "id": 2013,
                            "name": "Identifier",
                            "src": "3161:12:18"
                          }
                        ],
                        "id": 2014,
                        "name": "Assignment",
                        "src": "3151:22:18"
                      }
                    ],
                    "id": 2015,
                    "name": "ExpressionStatement",
                    "src": "3151:22:18"
                  }
                ],
                "id": 2016,
                "name": "Block",
                "src": "3009:171:18"
              }
            ],
            "id": 2017,
            "name": "FunctionDefinition",
            "src": "2972:208:18"
          }
        ],
        "id": 2018,
        "name": "ContractDefinition",
        "src": "1250:1932:18"
      }
    ],
    "id": 2019,
    "name": "SourceUnit",
    "src": "374:2809:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-20T11:30:23.759Z",
  "devdoc": {
    "details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}