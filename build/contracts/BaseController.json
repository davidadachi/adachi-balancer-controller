{
  "contractName": "BaseController",
  "abi": [
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_normalizedWeights",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_assetManagers",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_swapEnabledOnStart",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_mustAllowlistLPs",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_managementAumFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_aumFeeId",
          "type": "uint256"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_prices",
          "type": "uint256[]"
        }
      ],
      "name": "setTargetPoolPrices",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "transferManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startSwapFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endSwapFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "updateSwapFeeGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_endWeights",
          "type": "uint256[]"
        }
      ],
      "name": "updateWeightsGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_joinExitEnabled",
          "type": "bool"
        }
      ],
      "name": "setJoinExitEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_swapEnabled",
          "type": "bool"
        }
      ],
      "name": "setSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_mustAllowlistLPs",
          "type": "bool"
        }
      ],
      "name": "setMustAllowlistLPs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "addAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "removeAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "collectAumManagementFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_managementAumFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "setManagementAumFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_bptPrices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lowerBoundPercentages",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_upperBoundPercentages",
          "type": "uint256[]"
        }
      ],
      "name": "setCircuitBreakers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_tokenToAdd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_assetManager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenToAddNormalizedWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_tokenToRemove",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_burnAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipientAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"addAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenToAdd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_assetManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenToAddNormalizedWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"collectAumManagementFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_normalizedWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_assetManagers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_swapEnabledOnStart\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_mustAllowlistLPs\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_managementAumFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_aumFeeId\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"removeAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenToRemove\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_burnAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bptPrices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_lowerBoundPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_upperBoundPercentages\",\"type\":\"uint256[]\"}],\"name\":\"setCircuitBreakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_joinExitEnabled\",\"type\":\"bool\"}],\"name\":\"setJoinExitEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_managementAumFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setManagementAumFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_mustAllowlistLPs\",\"type\":\"bool\"}],\"name\":\"setMustAllowlistLPs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_swapEnabled\",\"type\":\"bool\"}],\"name\":\"setSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"}],\"name\":\"setTargetPoolPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"transferManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateSwapFeeGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_endWeights\",\"type\":\"uint256[]\"}],\"name\":\"updateWeightsGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAllowedAddress(address,address)\":{\"details\":\"Will fail if the address is already allowlisted. Emits the AllowlistAddressAdded event. This is a permissioned function.\",\"params\":{\"_member\":\"- The address to be added to the allowlist.\",\"_poolAddress\":\"- Address of pool being worked on.\"}},\"addToken(address,address,address,uint256,uint256,address)\":{\"details\":\"By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new token will have no balance - it is up to the owner to provide some immediately after calling this function. Note however that regular join functions will not work while the new token has no balance: the only way to deposit an initial amount is by using an Asset Manager. Token addition is forbidden during a weight change, or if one is scheduled to happen in the future. The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be useful in some scenarios to account for the fact that the Pool will have more tokens. Emits the TokenAdded event.\",\"params\":{\"_assetManager\":\"- The Asset Manager for the token.\",\"_mintAmount\":\"- The amount of BPT to be minted as a result of adding `token` to the Pool.\",\"_poolAddress\":\"- Address of pool being worked on.\",\"_recipient\":\"- The address to receive the BPT minted by the Pool.\",\"_tokenToAdd\":\"- The ERC20 token to be added to the Pool.\",\"_tokenToAddNormalizedWeight\":\"- The normalized weight of `token` relative to the other tokens in the Pool.\"}},\"collectAumManagementFees(address)\":{\"details\":\"This can be called by anyone to collect accrued AUM fees - and will be called automatically whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee percentage is changed by the manager, to prevent fees from being applied retroactively.\",\"params\":{\"_poolAddress\":\"- Address of pool being worked on.\"}},\"constructor\":{\"params\":{\"_managedPoolFactory\":\"- Managed pool contract address\",\"_vaultAddress\":\"- Vault contract address\"}},\"createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256)\":{\"params\":{\"_assetManagers\":\"- Asset manager for the pool\",\"_aumFeeId\":\"- Aum Fee Id\",\"_managementAumFeePercentage\":\"- Management Aum fee to apply\",\"_mustAllowlistLPs\":\"- List of LP's allowed in the pool\",\"_name\":\"- Pool name\",\"_normalizedWeights\":\"- Normalized weights in the pool\",\"_swapEnabledOnStart\":\"- Whether swaps are enabled straight away\",\"_swapFeePercentage\":\"- Fee applied to swaps\",\"_symbol\":\"- Symbol representing the pool\",\"_tokens\":\"- Tokens in the pool\"}},\"depositTokens(uint256,address)\":{\"details\":\"Transfers an amount of an ERC20 token\",\"params\":{\"_amount\":\"- Amount to deposit.\",\"_tokenAddress\":\"- Address of token to be deposited.\"}},\"removeAllowedAddress(address,address)\":{\"params\":{\"_member\":\"- The address to be removed from the allowlist.\",\"_poolAddress\":\"- Pool address being worked on\"}},\"removeToken(address,address,uint256,address)\":{\"details\":\"Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in the future. Emits the TokenRemoved event. This is a permissioned function. The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\",\"params\":{\"_burnAmount\":\"- The amount of BPT to be burned after removing `token` from the Pool.\",\"_poolAddress\":\"- Address of pool being worked on.\",\"_sender\":\"- The address to burn BPT from.\",\"_tokenToRemove\":\"- The ERC20 token to be removed from the Pool.\"}},\"setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])\":{\"details\":\"This is a permissioned function. The lower and upper bounds are percentages, corresponding to a relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\",\"params\":{\"_bptPrices\":\"- Token prices to for the circuit breaker\",\"_lowerBoundPercentages\":\"- The lower limit to trigger the circuit breaker\",\"_poolAddress\":\"- Pool to have a circruit breaker set\",\"_tokens\":\"- Tokens in the pool\",\"_upperBoundPercentages\":\"- The upper limit to trigger the circuit breaker\"}},\"setJoinExitEnabled(address,bool)\":{\"details\":\"Emits the JoinExitEnabledSet event. This is a permissioned function.\",\"params\":{\"_joinExitEnabled\":\"- The new value of the join/exit enabled flag.\",\"_poolAddress\":\"- Address of pool being worked on.\"}},\"setManagementAumFeePercentage(address,uint256)\":{\"details\":\"Attempting to collect AUM fees in excess of the maximum permitted percentage will revert. To avoid retroactive fee increases, we force collection at the current fee percentage before processing the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\",\"params\":{\"_managementAumFeePercentage\":\"- The new management AUM fee percentage.\",\"_poolAddress\":\"- Address of pool being worked on.\"}},\"setMustAllowlistLPs(address,bool)\":{\"details\":\"Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and back on again, because this action does not affect the list of LP addresses. Emits the MustAllowlistLPsSet event. This is a permissioned function.\",\"params\":{\"_mustAllowlistLPs\":\"- The new value of the mustAllowlistLPs flag.\",\"_poolAddress\":\"- Address of pool being worked on.\"}},\"setSwapEnabled(address,bool)\":{\"details\":\"Emits the SwapEnabledSet event. This is a permissioned function.\",\"params\":{\"_poolAddress\":\"- Address of pool being worked on.\",\"_swapEnabled\":\"- The new value of the swap enabled flag.\"}},\"setTargetPoolPrices(address,address[],uint256[])\":{\"params\":{\"_pool\":\"- Pool to have prices set.\",\"_prices\":\"- The collection of prices to set\",\"_tokens\":\"- The collection of tokens to have prices set\"}},\"transferManagement(address)\":{\"details\":\"Only one manager can presently be set\",\"params\":{\"_manager\":\"- New manager.\"}},\"updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)\":{\"details\":\"The swap fee will change from the given starting value (which may or may not be the current value) to the given ending fee percentage, over startTime to endTime. Note that calling this with a starting swap fee different from the current value will immediately change the current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`. Emits the GradualSwapFeeUpdateScheduled event. This is a permissioned function.\",\"params\":{\"_endSwapFeePercentage\":\"- The ending value for the swap fee change. If the current timestamp >= endTime, `getSwapFeePercentage()` will return this value.\",\"_endTime\":\"- The timestamp when the swap fee change will end (must be >= startTime).\",\"_poolAddress\":\"- Address of pool being worked on.\",\"_startSwapFeePercentage\":\"- The starting value for the swap fee change.\",\"_startTime\":\"- The timestamp when the swap fee change will begin.\"}},\"updateWeightsGradually(address,uint256,uint256,address[],uint256[])\":{\"details\":\"The weights will change from their current values to the given endWeights, over startTime to endTime. This is a permissioned function. Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes, the weights always start from their current values. This also guarantees a smooth transition when updateWeightsGradually is called during an ongoing weight change.\",\"params\":{\"_endTime\":\"- The timestamp when the weight change will end (can be >= startTime).\",\"_endWeights\":\"- The target weights. If the current timestamp >= endTime, `getNormalizedWeights()` will return these values.\",\"_poolAddress\":\"- Address of pool being worked on.\",\"_startTime\":\"- The timestamp when the weight change will begin.\",\"_tokens\":\"- The tokens associated with the target weights (must match the current pool tokens).\"}},\"withdrawFunds(address,address,uint256)\":{\"details\":\"Transfers an amount of an ERC20 token\",\"params\":{\"_amount\":\"- Amount to withdraw.\",\"_recipientAddress\":\"- Address of wallet receiving funds.\",\"_tokenAddress\":\"- Address of token to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedAddress(address,address)\":{\"notice\":\"Adds an address to the LP allowlist.\"},\"addToken(address,address,address,uint256,uint256,address)\":{\"notice\":\"Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\"},\"collectAumManagementFees(address)\":{\"notice\":\"Collect any accrued AUM fees and send them to the pool manager.\"},\"constructor\":{\"notice\":\"Constructor for the controller base class\"},\"createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256)\":{\"notice\":\"Create a new managed pool\"},\"depositTokens(uint256,address)\":{\"notice\":\"Deposit tokens to controller\"},\"removeAllowedAddress(address,address)\":{\"notice\":\"Removes an address from the _poolAddress - Address of pool being worked on.\"},\"removeToken(address,address,uint256,address)\":{\"notice\":\"Removes a token from the Pool's list of tradeable tokens.\"},\"setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])\":{\"notice\":\"Set a circuit breaker for one or more tokens.\"},\"setJoinExitEnabled(address,bool)\":{\"notice\":\"Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\"},\"setManagementAumFeePercentage(address,uint256)\":{\"notice\":\"Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\"},\"setMustAllowlistLPs(address,bool)\":{\"notice\":\"Enable or disable the LP allowlist.\"},\"setSwapEnabled(address,bool)\":{\"notice\":\"Enable or disable trading.\"},\"setTargetPoolPrices(address,address[],uint256[])\":{\"notice\":\"Set target prices used for balancing\"},\"transferManagement(address)\":{\"notice\":\"Transfer the manager to a new address\"},\"updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Schedule a gradual swap fee update.\"},\"updateWeightsGradually(address,uint256,uint256,address[],uint256[])\":{\"notice\":\"Schedule a gradual weight change.\"},\"withdrawFunds(address,address,uint256)\":{\"notice\":\"Withdraw tokens from controller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/base/BaseController.sol\":\"BaseController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/pool-utils/IManagedPool.sol\":{\"keccak256\":\"0xa7adc4534d070386e0944d6f4f7162e83e265c2694e8fd142379433e654b3ade\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://91623516e0733af77187b804cab725ee20ae6d9a03d85108a7a48ce47a846425\",\"dweb:/ipfs/QmQMGhtkjdxC6EkMxyQdvKEK8cGAKGoGSMbVcnrPWcV9b9\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IBasePool.sol\":{\"keccak256\":\"0x4673e08f6b8e76ffa89155d704a0682a6a98e3c60ca5f28e0c4b964f26b65dbe\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://eef030243d480fb6e84943d88c19cfc2b7e17bee800ece7b7be840061f3cc4bb\",\"dweb:/ipfs/QmYCLn4pspMRBdKAhtjc7EjnHQURHrzp844M5722LEbL8D\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IPoolSwapStructs.sol\":{\"keccak256\":\"0xbe4815478a942261e6e2416632342b0e55ff2b0f75c2551ffd79ad9b2326be38\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ccc137d00935cace955e552f238130a01a9468c2d80c725e4625a25debc5c54b\",\"dweb:/ipfs/QmexvRpcaeERPyZt9BzHZViFb8GevhhhoUBQ3wgDqFUwJx\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"project:/contracts/ManagedPoolFactory.sol\":{\"keccak256\":\"0xac11edd542b71c0cd551d7947bbb487e79e2ac1331d08d619abc0f119ffad540\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51392609b0ff500ce92a5bfa4b257b1da6acdfa3e299ada2beac503c0243d3f6\",\"dweb:/ipfs/QmTE57fRNMjAd3DuQfooeThgFGCAGm9R6xndMRn9jQBKTX\"]},\"project:/contracts/base/BaseController.sol\":{\"keccak256\":\"0x3d0477d1edfae3ffaead0aae8145ac91a28d29ac120aaf4d4e720ff01fe0ad4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aed80a47b4b3afc9a824c8774cfeb328b6663a57420068c58e3c6c93da8a8769\",\"dweb:/ipfs/QmTktg7Sfp1sBPd4tuDuAf5SWwQitNVcqhY9x7nqKMKwGz\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.17;\n\npragma experimental ABIEncoderV2;\n\nimport \"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\";\nimport \"@balancer-labs/v2-interfaces/contracts/pool-utils/IManagedPool.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"../ManagedPoolFactory.sol\";\n\nstruct PoolPrice {\n    address token;\n    uint256 price;\n}\n\nstruct PoolSettings {\n    bool activelyManaged;\n    mapping(address => PoolPrice) prices;\n}\n\nabstract contract BaseController is ReentrancyGuard {\n    address public manager;\n    IVault internal immutable vault;\n    ManagedPoolFactory internal immutable managedPoolFactory;\n    mapping(address => PoolSettings) internal managedPools; // Pools and their prices\n\n     /**\n     * @notice Constructor for the controller base class\n     *\n     * @param _vaultAddress - Vault contract address\n     * @param _managedPoolFactory - Managed pool contract address\n     */\n    constructor(address _vaultAddress, \n                address _managedPoolFactory) {\n        manager = msg.sender;\n        vault = IVault(_vaultAddress);\n        managedPoolFactory = ManagedPoolFactory(_managedPoolFactory);\n    }\n\n     /**\n     * @notice Create a new managed pool\n     *\n     * @param _name - Pool name\n     * @param _symbol - Symbol representing the pool\n     * @param _tokens - Tokens in the pool\n     * @param _normalizedWeights - Normalized weights in the pool\n     * @param _assetManagers - Asset manager for the pool\n     * @param _swapFeePercentage - Fee applied to swaps\n     * @param _swapEnabledOnStart - Whether swaps are enabled straight away\n     * @param _mustAllowlistLPs - List of LP's allowed in the pool\n     * @param _managementAumFeePercentage - Management Aum fee to apply\n     * @param _aumFeeId - Aum Fee Id\n     */\n    function createPool(string memory _name,\n                        string memory _symbol,\n                        address[] memory _tokens,\n                        uint256[] memory _normalizedWeights,\n                        address[] memory _assetManagers,\n                        uint256 _swapFeePercentage,\n                        bool _swapEnabledOnStart,\n                        bool _mustAllowlistLPs,\n                        uint256 _managementAumFeePercentage,\n                        uint256 _aumFeeId) public restricted nonReentrant {\n\n        ManagedPoolSettings.NewPoolParams memory poolParams;\n        poolParams.name = _name;\n        poolParams.symbol = _symbol;\n        poolParams.tokens = _tokens;\n        poolParams.normalizedWeights = _normalizedWeights;\n        poolParams.assetManagers = _assetManagers;\n        poolParams.swapFeePercentage = _swapFeePercentage;\n        poolParams.swapEnabledOnStart = _swapEnabledOnStart;\n        poolParams.mustAllowlistLPs = _mustAllowlistLPs;\n        poolParams.managementAumFeePercentage = _managementAumFeePercentage;\n        poolParams.aumFeeId = _aumFeeId;\n\n        address _poolAddress = managedPoolFactory.create(poolParams, address(this));\n        managedPools[_poolAddress].activelyManaged = true;\n    }\n\n    /**\n     * @notice Set target prices used for balancing\n     *\n     * @param _pool - Pool to have prices set.\n     * @param _tokens - The collection of tokens to have prices set\n     * @param _prices - The collection of prices to set\n     */\n    function setTargetPoolPrices(address _pool,\n                                 address[] memory _tokens,\n                                 uint256[] memory _prices) public restricted {\n        for (uint256 count = 0; count < _tokens.length; count++) {\n\n            managedPools[_pool].prices[_tokens[count]].token = _tokens[count];\n            managedPools[_pool].prices[_tokens[count]].price = _prices[count];\n        }\n    }\n\n    /**\n     * @notice Transfer the manager to a new address\n     * @dev Only one manager can presently be set\n     *\n     * @param _manager - New manager.\n     */\n    function transferManagement(address _manager) public restricted {\n        manager = _manager;\n    }\n    \n    /**\n     * @notice Schedule a gradual swap fee update.\n     * @dev The swap fee will change from the given starting value (which may or may not be the current\n     * value) to the given ending fee percentage, over startTime to endTime.\n     *\n     * Note that calling this with a starting swap fee different from the current value will immediately change the\n     * current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`.\n     * Emits the GradualSwapFeeUpdateScheduled event.\n     * This is a permissioned function.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _startTime - The timestamp when the swap fee change will begin.\n     * @param _endTime - The timestamp when the swap fee change will end (must be >= startTime).\n     * @param _startSwapFeePercentage - The starting value for the swap fee change.\n     * @param _endSwapFeePercentage - The ending value for the swap fee change. If the current timestamp >= endTime,\n     * `getSwapFeePercentage()` will return this value.\n     */\n    function updateSwapFeeGradually(\n        address _poolAddress,\n        uint256 _startTime,\n        uint256 _endTime,\n        uint256 _startSwapFeePercentage,\n        uint256 _endSwapFeePercentage) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.updateSwapFeeGradually(_startTime, _endTime, _startSwapFeePercentage, _endSwapFeePercentage);\n    }\n\n    /**\n     * @notice Schedule a gradual weight change.\n     * @dev The weights will change from their current values to the given endWeights, over startTime to endTime.\n     * This is a permissioned function.\n     *\n     * Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes,\n     * the weights always start from their current values. This also guarantees a smooth transition when\n     * updateWeightsGradually is called during an ongoing weight change.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _startTime - The timestamp when the weight change will begin.\n     * @param _endTime - The timestamp when the weight change will end (can be >= startTime).\n     * @param _tokens - The tokens associated with the target weights (must match the current pool tokens).\n     * @param _endWeights - The target weights. If the current timestamp >= endTime, `getNormalizedWeights()`\n     * will return these values.\n     */\n    function updateWeightsGradually(\n        address _poolAddress,\n        uint256 _startTime,\n        uint256 _endTime,\n        IERC20[] memory _tokens,\n        uint256[] memory _endWeights) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.updateWeightsGradually(_startTime, _endTime, _tokens, _endWeights);\n    }\n\n    /**\n     * @notice Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\n     * @dev Emits the JoinExitEnabledSet event. This is a permissioned function.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _joinExitEnabled - The new value of the join/exit enabled flag.\n     */\n    function setJoinExitEnabled(\n        address _poolAddress,\n        bool _joinExitEnabled) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.setJoinExitEnabled(_joinExitEnabled);\n    }\n\n    /**\n     * @notice Enable or disable trading.\n     * @dev Emits the SwapEnabledSet event. This is a permissioned function.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _swapEnabled - The new value of the swap enabled flag.\n     */\n    function setSwapEnabled(\n        address _poolAddress,\n        bool _swapEnabled) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.setSwapEnabled(_swapEnabled);\n    }\n\n    /**\n     * @notice Enable or disable the LP allowlist.\n     * @dev Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and\n     * back on again, because this action does not affect the list of LP addresses.\n     * Emits the MustAllowlistLPsSet event. This is a permissioned function.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _mustAllowlistLPs - The new value of the mustAllowlistLPs flag.\n     */\n    function setMustAllowlistLPs(\n        address _poolAddress,\n        bool _mustAllowlistLPs) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.setMustAllowlistLPs(_mustAllowlistLPs);\n    }\n\n    /**\n     * @notice Adds an address to the LP allowlist.\n     * @dev Will fail if the address is already allowlisted.\n     * Emits the AllowlistAddressAdded event. This is a permissioned function.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _member - The address to be added to the allowlist.\n     */\n    function addAllowedAddress(\n        address _poolAddress,\n        address _member) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.addAllowedAddress(_member);\n    }\n\n    /**\n     * @notice Removes an address from the _poolAddress - Address of pool being worked on.\n     *\n     * @param _poolAddress - Pool address being worked on\n     * @param _member - The address to be removed from the allowlist.\n     */\n    function removeAllowedAddress(\n        address _poolAddress,\n        address _member) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.removeAllowedAddress(_member);\n    }\n\n    /**\n     * @notice Collect any accrued AUM fees and send them to the pool manager.\n     * @dev This can be called by anyone to collect accrued AUM fees - and will be called automatically\n     * whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee\n     * percentage is changed by the manager, to prevent fees from being applied retroactively.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     */\n    function collectAumManagementFees(\n        address _poolAddress) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.collectAumManagementFees();\n    }\n    \n    /**\n     * @notice Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\n     * @dev Attempting to collect AUM fees in excess of the maximum permitted percentage will revert.\n     * To avoid retroactive fee increases, we force collection at the current fee percentage before processing\n     * the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _managementAumFeePercentage - The new management AUM fee percentage.\n     */\n    function setManagementAumFeePercentage(\n        address _poolAddress,\n        uint256 _managementAumFeePercentage) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.setManagementAumFeePercentage(_managementAumFeePercentage);\n    }\n\n    /**\n     * @notice Set a circuit breaker for one or more tokens.\n     * @dev This is a permissioned function. The lower and upper bounds are percentages, corresponding to a\n     * relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent\n     * trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\n     *\n     * @param _poolAddress - Pool to have a circruit breaker set\n     * @param _tokens - Tokens in the pool\n     * @param _bptPrices - Token prices to for the circuit breaker\n     * @param _lowerBoundPercentages - The lower limit to trigger the circuit breaker\n     * @param _upperBoundPercentages - The upper limit to trigger the circuit breaker\n     */\n    function setCircuitBreakers(\n        address _poolAddress,\n        IERC20[] memory _tokens,\n        uint256[] memory _bptPrices,\n        uint256[] memory _lowerBoundPercentages,\n        uint256[] memory _upperBoundPercentages) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.setCircuitBreakers(_tokens, _bptPrices, _lowerBoundPercentages, _upperBoundPercentages);\n    }\n\n    /**\n     * @notice Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\n     *\n     * @dev By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new\n     * token will have no balance - it is up to the owner to provide some immediately after calling this function.\n     * Note however that regular join functions will not work while the new token has no balance: the only way to\n     * deposit an initial amount is by using an Asset Manager.\n     *\n     * Token addition is forbidden during a weight change, or if one is scheduled to happen in the future.\n     *\n     * The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be\n     * useful in some scenarios to account for the fact that the Pool will have more tokens.\n     *\n     * Emits the TokenAdded event.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _tokenToAdd - The ERC20 token to be added to the Pool.\n     * @param _assetManager - The Asset Manager for the token.\n     * @param _tokenToAddNormalizedWeight - The normalized weight of `token` relative to the other tokens in the Pool.\n     * @param _mintAmount - The amount of BPT to be minted as a result of adding `token` to the Pool.\n     * @param _recipient - The address to receive the BPT minted by the Pool.\n     */\n    function addToken(\n        address _poolAddress,\n        IERC20 _tokenToAdd,\n        address _assetManager,\n        uint256 _tokenToAddNormalizedWeight,\n        uint256 _mintAmount,\n        address _recipient) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.addToken(_tokenToAdd, _assetManager, _tokenToAddNormalizedWeight, _mintAmount, _recipient);\n    }\n\n    /**\n     * @notice Removes a token from the Pool's list of tradeable tokens.\n     * @dev Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not\n     * including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in\n     * the future.\n     *\n     * Emits the TokenRemoved event. This is a permissioned function.\n     *\n     * The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful\n     * in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     * @param _tokenToRemove - The ERC20 token to be removed from the Pool.\n     * @param _burnAmount - The amount of BPT to be burned after removing `token` from the Pool.\n     * @param _sender - The address to burn BPT from.\n     */\n    function removeToken(\n        address _poolAddress,\n        IERC20 _tokenToRemove,\n        uint256 _burnAmount,\n        address _sender) public restricted nonReentrant {\n\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        managedPool.removeToken(_tokenToRemove, _burnAmount, _sender);\n    }\n\n    /**\n     * @notice Withdraw tokens from controller\n     * @dev Transfers an amount of an ERC20 token\n     *\n     * @param _recipientAddress - Address of wallet receiving funds.\n     * @param _tokenAddress - Address of token to be withdrawn.\n     * @param _amount - Amount to withdraw.\n     */\n    function withdrawFunds(\n        address _recipientAddress,\n        address _tokenAddress,\n        uint256 _amount) public restricted nonReentrant {\n\n        IERC20 _token = IERC20(_tokenAddress);\n        _token.transferFrom(address(this), _recipientAddress, _amount);\n    }\n\n    /**\n     * @notice Deposit tokens to controller\n     * @dev Transfers an amount of an ERC20 token\n     *\n     * @param _amount - Amount to deposit.\n     * @param _tokenAddress - Address of token to be deposited.\n     */\n    function depositTokens(\n        uint _amount,\n        address _tokenAddress) public restricted nonReentrant checkAllowance(_amount, _tokenAddress) {\n        IERC20 token = IERC20(_tokenAddress);\n        token.transferFrom(msg.sender, address(this), _amount);\n    }\n\n    /**\n     * @dev This helper function is a fast and cheap way to convert between IERC20 and IAsset types\n     *\n     * @param _tokens - Tokens to convert to assets\n     */\n    function _convertERC20sToAssets(IERC20[] memory _tokens) internal pure returns (IAsset[] memory assets) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            assets := _tokens\n        }\n    }\n\n    /**\n     * @dev Modifier to restrict access to the set manager\n     */\n    modifier restricted() {\n        require(msg.sender == manager);\n        _;\n    }\n\n    /**\n     * @dev Modifier to check token allowance\n     */\n    modifier checkAllowance(uint _amount,\n                            address _tokenAddress) {\n        IERC20 token = IERC20(_tokenAddress);\n        require(token.allowance(msg.sender, address(this)) >= _amount, \"Error\");\n        _;\n    }\n}\n",
  "sourcePath": "/home/eagle/Source/CeloTruffleTest/contracts/base/BaseController.sol",
  "ast": {
    "absolutePath": "project:/contracts/base/BaseController.sol",
    "exportedSymbols": {
      "BaseController": [
        3230
      ],
      "IAsset": [
        430
      ],
      "IAuthentication": [
        296
      ],
      "IAuthorizer": [
        445
      ],
      "IBasePool": [
        569
      ],
      "IERC20": [
        426
      ],
      "IFlashLoanRecipient": [
        589
      ],
      "IManagedPool": [
        285
      ],
      "IPoolSwapStructs": [
        617
      ],
      "IProtocolFeesCollector": [
        686
      ],
      "ISignaturesValidator": [
        314
      ],
      "ITemporarilyPausable": [
        333
      ],
      "IVault": [
        1199
      ],
      "IWETH": [
        348
      ],
      "ManagedPoolFactory": [
        2432
      ],
      "ManagedPoolSettings": [
        2457
      ],
      "PoolPrice": [
        2469
      ],
      "PoolSettings": [
        2477
      ],
      "ReentrancyGuard": [
        1253
      ]
    },
    "id": 3231,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2459,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:17"
      },
      {
        "id": 2460,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:17"
      },
      {
        "absolutePath": "@balancer-labs/v2-interfaces/contracts/vault/IVault.sol",
        "file": "@balancer-labs/v2-interfaces/contracts/vault/IVault.sol",
        "id": 2461,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3231,
        "sourceUnit": 1200,
        "src": "94:65:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@balancer-labs/v2-interfaces/contracts/pool-utils/IManagedPool.sol",
        "file": "@balancer-labs/v2-interfaces/contracts/pool-utils/IManagedPool.sol",
        "id": 2462,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3231,
        "sourceUnit": 286,
        "src": "160:76:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 2463,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3231,
        "sourceUnit": 1254,
        "src": "237:62:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ManagedPoolFactory.sol",
        "file": "../ManagedPoolFactory.sol",
        "id": 2464,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3231,
        "sourceUnit": 2458,
        "src": "300:35:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "canonicalName": "PoolPrice",
        "id": 2469,
        "members": [
          {
            "constant": false,
            "id": 2466,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "368:5:17",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "360:13:17",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2465,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "360:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2468,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "387:5:17",
            "nodeType": "VariableDeclaration",
            "scope": 2469,
            "src": "379:13:17",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2467,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "379:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "PoolPrice",
        "nameLocation": "344:9:17",
        "nodeType": "StructDefinition",
        "scope": 3231,
        "src": "337:58:17",
        "visibility": "public"
      },
      {
        "canonicalName": "PoolSettings",
        "id": 2477,
        "members": [
          {
            "constant": false,
            "id": 2471,
            "mutability": "mutable",
            "name": "activelyManaged",
            "nameLocation": "428:15:17",
            "nodeType": "VariableDeclaration",
            "scope": 2477,
            "src": "423:20:17",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 2470,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "423:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2476,
            "mutability": "mutable",
            "name": "prices",
            "nameLocation": "479:6:17",
            "nodeType": "VariableDeclaration",
            "scope": 2477,
            "src": "449:36:17",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
              "typeString": "mapping(address => struct PoolPrice)"
            },
            "typeName": {
              "id": 2475,
              "keyType": {
                "id": 2472,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "457:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "449:29:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                "typeString": "mapping(address => struct PoolPrice)"
              },
              "valueType": {
                "id": 2474,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2473,
                  "name": "PoolPrice",
                  "nameLocations": [
                    "468:9:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2469,
                  "src": "468:9:17"
                },
                "referencedDeclaration": 2469,
                "src": "468:9:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolPrice_$2469_storage_ptr",
                  "typeString": "struct PoolPrice"
                }
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "PoolSettings",
        "nameLocation": "404:12:17",
        "nodeType": "StructDefinition",
        "scope": 3231,
        "src": "397:91:17",
        "visibility": "public"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2478,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "526:15:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1253,
              "src": "526:15:17"
            },
            "id": 2479,
            "nodeType": "InheritanceSpecifier",
            "src": "526:15:17"
          }
        ],
        "canonicalName": "BaseController",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3230,
        "linearizedBaseContracts": [
          3230,
          1253
        ],
        "name": "BaseController",
        "nameLocation": "508:14:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "481c6a75",
            "id": 2481,
            "mutability": "mutable",
            "name": "manager",
            "nameLocation": "563:7:17",
            "nodeType": "VariableDeclaration",
            "scope": 3230,
            "src": "548:22:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2480,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "548:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2484,
            "mutability": "immutable",
            "name": "vault",
            "nameLocation": "602:5:17",
            "nodeType": "VariableDeclaration",
            "scope": 3230,
            "src": "576:31:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVault_$1199",
              "typeString": "contract IVault"
            },
            "typeName": {
              "id": 2483,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2482,
                "name": "IVault",
                "nameLocations": [
                  "576:6:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1199,
                "src": "576:6:17"
              },
              "referencedDeclaration": 1199,
              "src": "576:6:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$1199",
                "typeString": "contract IVault"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2487,
            "mutability": "immutable",
            "name": "managedPoolFactory",
            "nameLocation": "651:18:17",
            "nodeType": "VariableDeclaration",
            "scope": 3230,
            "src": "613:56:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ManagedPoolFactory_$2432",
              "typeString": "contract ManagedPoolFactory"
            },
            "typeName": {
              "id": 2486,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2485,
                "name": "ManagedPoolFactory",
                "nameLocations": [
                  "613:18:17"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2432,
                "src": "613:18:17"
              },
              "referencedDeclaration": 2432,
              "src": "613:18:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ManagedPoolFactory_$2432",
                "typeString": "contract ManagedPoolFactory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2492,
            "mutability": "mutable",
            "name": "managedPools",
            "nameLocation": "717:12:17",
            "nodeType": "VariableDeclaration",
            "scope": 3230,
            "src": "675:54:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
              "typeString": "mapping(address => struct PoolSettings)"
            },
            "typeName": {
              "id": 2491,
              "keyType": {
                "id": 2488,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "683:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "675:32:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                "typeString": "mapping(address => struct PoolSettings)"
              },
              "valueType": {
                "id": 2490,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2489,
                  "name": "PoolSettings",
                  "nameLocations": [
                    "694:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2477,
                  "src": "694:12:17"
                },
                "referencedDeclaration": 2477,
                "src": "694:12:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolSettings_$2477_storage_ptr",
                  "typeString": "struct PoolSettings"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2517,
              "nodeType": "Block",
              "src": "1043:146:17",
              "statements": [
                {
                  "expression": {
                    "id": 2503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2500,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2481,
                      "src": "1053:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2501,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1063:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1067:6:17",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1063:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1053:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2504,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:20:17"
                },
                {
                  "expression": {
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2505,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2484,
                      "src": "1083:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$1199",
                        "typeString": "contract IVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2507,
                          "name": "_vaultAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2495,
                          "src": "1098:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2506,
                        "name": "IVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "1091:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IVault_$1199_$",
                          "typeString": "type(contract IVault)"
                        }
                      },
                      "id": 2508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1091:21:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVault_$1199",
                        "typeString": "contract IVault"
                      }
                    },
                    "src": "1083:29:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVault_$1199",
                      "typeString": "contract IVault"
                    }
                  },
                  "id": 2510,
                  "nodeType": "ExpressionStatement",
                  "src": "1083:29:17"
                },
                {
                  "expression": {
                    "id": 2515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2511,
                      "name": "managedPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2487,
                      "src": "1122:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ManagedPoolFactory_$2432",
                        "typeString": "contract ManagedPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2513,
                          "name": "_managedPoolFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2497,
                          "src": "1162:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2512,
                        "name": "ManagedPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2432,
                        "src": "1143:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ManagedPoolFactory_$2432_$",
                          "typeString": "type(contract ManagedPoolFactory)"
                        }
                      },
                      "id": 2514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1143:39:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ManagedPoolFactory_$2432",
                        "typeString": "contract ManagedPoolFactory"
                      }
                    },
                    "src": "1122:60:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ManagedPoolFactory_$2432",
                      "typeString": "contract ManagedPoolFactory"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:60:17"
                }
              ]
            },
            "documentation": {
              "id": 2493,
              "nodeType": "StructuredDocumentation",
              "src": "763:194:17",
              "text": " @notice Constructor for the controller base class\n @param _vaultAddress - Vault contract address\n @param _managedPoolFactory - Managed pool contract address"
            },
            "id": 2518,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "_vaultAddress",
                  "nameLocation": "982:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2518,
                  "src": "974:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2497,
                  "mutability": "mutable",
                  "name": "_managedPoolFactory",
                  "nameLocation": "1022:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2518,
                  "src": "1014:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:69:17"
            },
            "returnParameters": {
              "id": 2499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1043:0:17"
            },
            "scope": 3230,
            "src": "962:227:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2633,
              "nodeType": "Block",
              "src": "2361:726:17",
              "statements": [
                {
                  "assignments": [
                    2553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2553,
                      "mutability": "mutable",
                      "name": "poolParams",
                      "nameLocation": "2413:10:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2633,
                      "src": "2372:51:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                        "typeString": "struct ManagedPoolSettings.NewPoolParams"
                      },
                      "typeName": {
                        "id": 2552,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2551,
                          "name": "ManagedPoolSettings.NewPoolParams",
                          "nameLocations": [
                            "2372:19:17",
                            "2392:13:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2456,
                          "src": "2372:33:17"
                        },
                        "referencedDeclaration": 2456,
                        "src": "2372:33:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_storage_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2554,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2372:51:17"
                },
                {
                  "expression": {
                    "id": 2559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2555,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2433:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2557,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2444:4:17",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2434,
                      "src": "2433:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2558,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2521,
                      "src": "2451:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2433:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2560,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:23:17"
                },
                {
                  "expression": {
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2561,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2466:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2563,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2477:6:17",
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2436,
                      "src": "2466:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2564,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2523,
                      "src": "2486:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2466:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:27:17"
                },
                {
                  "expression": {
                    "id": 2571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2567,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2503:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2569,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2514:6:17",
                      "memberName": "tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2439,
                      "src": "2503:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2570,
                      "name": "_tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2526,
                      "src": "2523:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2503:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 2572,
                  "nodeType": "ExpressionStatement",
                  "src": "2503:27:17"
                },
                {
                  "expression": {
                    "id": 2577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2573,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2540:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2551:17:17",
                      "memberName": "normalizedWeights",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2442,
                      "src": "2540:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2576,
                      "name": "_normalizedWeights",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2529,
                      "src": "2571:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2540:49:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2578,
                  "nodeType": "ExpressionStatement",
                  "src": "2540:49:17"
                },
                {
                  "expression": {
                    "id": 2583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2579,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2599:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2581,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2610:13:17",
                      "memberName": "assetManagers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2445,
                      "src": "2599:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2582,
                      "name": "_assetManagers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2532,
                      "src": "2626:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2599:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 2584,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:41:17"
                },
                {
                  "expression": {
                    "id": 2589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2585,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2650:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2587,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2661:17:17",
                      "memberName": "swapFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2447,
                      "src": "2650:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2588,
                      "name": "_swapFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2534,
                      "src": "2681:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2650:49:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2590,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:49:17"
                },
                {
                  "expression": {
                    "id": 2595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2591,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2709:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2593,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2720:18:17",
                      "memberName": "swapEnabledOnStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2449,
                      "src": "2709:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2594,
                      "name": "_swapEnabledOnStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2536,
                      "src": "2741:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2709:51:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2596,
                  "nodeType": "ExpressionStatement",
                  "src": "2709:51:17"
                },
                {
                  "expression": {
                    "id": 2601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2597,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2770:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2599,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2781:16:17",
                      "memberName": "mustAllowlistLPs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2451,
                      "src": "2770:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2600,
                      "name": "_mustAllowlistLPs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2538,
                      "src": "2800:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2770:47:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2602,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:47:17"
                },
                {
                  "expression": {
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2603,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2827:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2605,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2838:26:17",
                      "memberName": "managementAumFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2453,
                      "src": "2827:37:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2606,
                      "name": "_managementAumFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2540,
                      "src": "2867:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2827:67:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "2827:67:17"
                },
                {
                  "expression": {
                    "id": 2613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2609,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2904:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      "id": 2611,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2915:8:17",
                      "memberName": "aumFeeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2455,
                      "src": "2904:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2612,
                      "name": "_aumFeeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2542,
                      "src": "2926:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2904:31:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2614,
                  "nodeType": "ExpressionStatement",
                  "src": "2904:31:17"
                },
                {
                  "assignments": [
                    2616
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2616,
                      "mutability": "mutable",
                      "name": "_poolAddress",
                      "nameLocation": "2954:12:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2633,
                      "src": "2946:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2615,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2946:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2625,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2619,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2553,
                        "src": "2995:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2622,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3015:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseController_$3230",
                              "typeString": "contract BaseController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseController_$3230",
                              "typeString": "contract BaseController"
                            }
                          ],
                          "id": 2621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3007:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2620,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3007:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3007:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_NewPoolParams_$2456_memory_ptr",
                          "typeString": "struct ManagedPoolSettings.NewPoolParams memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2617,
                        "name": "managedPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "2969:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ManagedPoolFactory_$2432",
                          "typeString": "contract ManagedPoolFactory"
                        }
                      },
                      "id": 2618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2988:6:17",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2370,
                      "src": "2969:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_NewPoolParams_$2456_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (struct ManagedPoolSettings.NewPoolParams memory,address) external returns (address)"
                      }
                    },
                    "id": 2624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2969:52:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2946:75:17"
                },
                {
                  "expression": {
                    "id": 2631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2626,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2492,
                          "src": "3031:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 2628,
                        "indexExpression": {
                          "id": 2627,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2616,
                          "src": "3044:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3031:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 2629,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3058:15:17",
                      "memberName": "activelyManaged",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2471,
                      "src": "3031:42:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 2630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3076:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3031:49:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2632,
                  "nodeType": "ExpressionStatement",
                  "src": "3031:49:17"
                }
              ]
            },
            "documentation": {
              "id": 2519,
              "nodeType": "StructuredDocumentation",
              "src": "1196:619:17",
              "text": " @notice Create a new managed pool\n @param _name - Pool name\n @param _symbol - Symbol representing the pool\n @param _tokens - Tokens in the pool\n @param _normalizedWeights - Normalized weights in the pool\n @param _assetManagers - Asset manager for the pool\n @param _swapFeePercentage - Fee applied to swaps\n @param _swapEnabledOnStart - Whether swaps are enabled straight away\n @param _mustAllowlistLPs - List of LP's allowed in the pool\n @param _managementAumFeePercentage - Management Aum fee to apply\n @param _aumFeeId - Aum Fee Id"
            },
            "functionSelector": "7ff731bd",
            "id": 2634,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2544,
                  "name": "restricted",
                  "nameLocations": [
                    "2337:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "2337:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2337:10:17"
              },
              {
                "id": 2547,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2546,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2348:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "2348:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2348:12:17"
              }
            ],
            "name": "createPool",
            "nameLocation": "1829:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2521,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1854:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "1840:19:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2520,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2523,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1899:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "1885:21:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2522,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1885:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2526,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nameLocation": "1949:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "1932:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2524,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1932:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2525,
                    "nodeType": "ArrayTypeName",
                    "src": "1932:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2529,
                  "mutability": "mutable",
                  "name": "_normalizedWeights",
                  "nameLocation": "1999:18:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "1982:35:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2527,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1982:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2528,
                    "nodeType": "ArrayTypeName",
                    "src": "1982:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2532,
                  "mutability": "mutable",
                  "name": "_assetManagers",
                  "nameLocation": "2060:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "2043:31:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2530,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2043:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2531,
                    "nodeType": "ArrayTypeName",
                    "src": "2043:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2534,
                  "mutability": "mutable",
                  "name": "_swapFeePercentage",
                  "nameLocation": "2108:18:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "2100:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2536,
                  "mutability": "mutable",
                  "name": "_swapEnabledOnStart",
                  "nameLocation": "2157:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "2152:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2535,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2538,
                  "mutability": "mutable",
                  "name": "_mustAllowlistLPs",
                  "nameLocation": "2207:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "2202:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2537,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2540,
                  "mutability": "mutable",
                  "name": "_managementAumFeePercentage",
                  "nameLocation": "2258:27:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "2250:35:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2542,
                  "mutability": "mutable",
                  "name": "_aumFeeId",
                  "nameLocation": "2319:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2634,
                  "src": "2311:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:490:17"
            },
            "returnParameters": {
              "id": 2548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2361:0:17"
            },
            "scope": 3230,
            "src": "1820:1267:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2689,
              "nodeType": "Block",
              "src": "3519:243:17",
              "statements": [
                {
                  "body": {
                    "id": 2687,
                    "nodeType": "Block",
                    "src": "3586:170:17",
                    "statements": [
                      {
                        "expression": {
                          "id": 2671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2659,
                                    "name": "managedPools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2492,
                                    "src": "3601:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                      "typeString": "mapping(address => struct PoolSettings storage ref)"
                                    }
                                  },
                                  "id": 2661,
                                  "indexExpression": {
                                    "id": 2660,
                                    "name": "_pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2637,
                                    "src": "3614:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3601:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                    "typeString": "struct PoolSettings storage ref"
                                  }
                                },
                                "id": 2662,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3621:6:17",
                                "memberName": "prices",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2476,
                                "src": "3601:26:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                                  "typeString": "mapping(address => struct PoolPrice storage ref)"
                                }
                              },
                              "id": 2666,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2663,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2640,
                                  "src": "3628:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 2665,
                                "indexExpression": {
                                  "id": 2664,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2649,
                                  "src": "3636:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3628:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3601:42:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                                "typeString": "struct PoolPrice storage ref"
                              }
                            },
                            "id": 2667,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3644:5:17",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2466,
                            "src": "3601:48:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2668,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2640,
                              "src": "3652:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2670,
                            "indexExpression": {
                              "id": 2669,
                              "name": "count",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "3660:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3652:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3601:65:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2672,
                        "nodeType": "ExpressionStatement",
                        "src": "3601:65:17"
                      },
                      {
                        "expression": {
                          "id": 2685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2673,
                                    "name": "managedPools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2492,
                                    "src": "3680:12:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                      "typeString": "mapping(address => struct PoolSettings storage ref)"
                                    }
                                  },
                                  "id": 2675,
                                  "indexExpression": {
                                    "id": 2674,
                                    "name": "_pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2637,
                                    "src": "3693:5:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3680:19:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                    "typeString": "struct PoolSettings storage ref"
                                  }
                                },
                                "id": 2676,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3700:6:17",
                                "memberName": "prices",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2476,
                                "src": "3680:26:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                                  "typeString": "mapping(address => struct PoolPrice storage ref)"
                                }
                              },
                              "id": 2680,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 2677,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2640,
                                  "src": "3707:7:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 2679,
                                "indexExpression": {
                                  "id": 2678,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2649,
                                  "src": "3715:5:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3707:14:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3680:42:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                                "typeString": "struct PoolPrice storage ref"
                              }
                            },
                            "id": 2681,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3723:5:17",
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2468,
                            "src": "3680:48:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2682,
                              "name": "_prices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2643,
                              "src": "3731:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 2684,
                            "indexExpression": {
                              "id": 2683,
                              "name": "count",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2649,
                              "src": "3739:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3731:14:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3680:65:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2686,
                        "nodeType": "ExpressionStatement",
                        "src": "3680:65:17"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2652,
                      "name": "count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2649,
                      "src": "3553:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2653,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2640,
                        "src": "3561:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3569:6:17",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3561:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3553:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2688,
                  "initializationExpression": {
                    "assignments": [
                      2649
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2649,
                        "mutability": "mutable",
                        "name": "count",
                        "nameLocation": "3542:5:17",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "3534:13:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2648,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3534:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2651,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3550:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3534:17:17"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3577:7:17",
                      "subExpression": {
                        "id": 2656,
                        "name": "count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2649,
                        "src": "3577:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2658,
                    "nodeType": "ExpressionStatement",
                    "src": "3577:7:17"
                  },
                  "nodeType": "ForStatement",
                  "src": "3529:227:17"
                }
              ]
            },
            "documentation": {
              "id": 2635,
              "nodeType": "StructuredDocumentation",
              "src": "3093:241:17",
              "text": " @notice Set target prices used for balancing\n @param _pool - Pool to have prices set.\n @param _tokens - The collection of tokens to have prices set\n @param _prices - The collection of prices to set"
            },
            "functionSelector": "f73e0f62",
            "id": 2690,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2646,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2645,
                  "name": "restricted",
                  "nameLocations": [
                    "3508:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "3508:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3508:10:17"
              }
            ],
            "name": "setTargetPoolPrices",
            "nameLocation": "3348:19:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2637,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "3376:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3368:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2636,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3368:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2640,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nameLocation": "3433:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3416:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2638,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3416:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2639,
                    "nodeType": "ArrayTypeName",
                    "src": "3416:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2643,
                  "mutability": "mutable",
                  "name": "_prices",
                  "nameLocation": "3492:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2690,
                  "src": "3475:24:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2641,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3475:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2642,
                    "nodeType": "ArrayTypeName",
                    "src": "3475:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3367:133:17"
            },
            "returnParameters": {
              "id": 2647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3519:0:17"
            },
            "scope": 3230,
            "src": "3339:423:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2702,
              "nodeType": "Block",
              "src": "3996:35:17",
              "statements": [
                {
                  "expression": {
                    "id": 2700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2698,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2481,
                      "src": "4006:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2699,
                      "name": "_manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2693,
                      "src": "4016:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4006:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2701,
                  "nodeType": "ExpressionStatement",
                  "src": "4006:18:17"
                }
              ]
            },
            "documentation": {
              "id": 2691,
              "nodeType": "StructuredDocumentation",
              "src": "3768:159:17",
              "text": " @notice Transfer the manager to a new address\n @dev Only one manager can presently be set\n @param _manager - New manager."
            },
            "functionSelector": "e4edf852",
            "id": 2703,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2695,
                  "name": "restricted",
                  "nameLocations": [
                    "3985:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "3985:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3985:10:17"
              }
            ],
            "name": "transferManagement",
            "nameLocation": "3941:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2693,
                  "mutability": "mutable",
                  "name": "_manager",
                  "nameLocation": "3968:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2703,
                  "src": "3960:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3960:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3959:18:17"
            },
            "returnParameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3996:0:17"
            },
            "scope": 3230,
            "src": "3932:99:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2740,
              "nodeType": "Block",
              "src": "5341:206:17",
              "statements": [
                {
                  "assignments": [
                    2723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2723,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "5365:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2740,
                      "src": "5352:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2722,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2721,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "5352:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "5352:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "5352:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2724,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5352:24:17"
                },
                {
                  "expression": {
                    "id": 2729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2725,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2723,
                      "src": "5386:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2727,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2706,
                          "src": "5413:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2726,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "5400:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5400:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "5386:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2730,
                  "nodeType": "ExpressionStatement",
                  "src": "5386:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2734,
                        "name": "_startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2708,
                        "src": "5471:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2735,
                        "name": "_endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2710,
                        "src": "5483:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2736,
                        "name": "_startSwapFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2712,
                        "src": "5493:23:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2737,
                        "name": "_endSwapFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2714,
                        "src": "5518:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2731,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "5436:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5448:22:17",
                      "memberName": "updateSwapFeeGradually",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "5436:34:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 2738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5436:104:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2739,
                  "nodeType": "ExpressionStatement",
                  "src": "5436:104:17"
                }
              ]
            },
            "documentation": {
              "id": 2704,
              "nodeType": "StructuredDocumentation",
              "src": "4041:1067:17",
              "text": " @notice Schedule a gradual swap fee update.\n @dev The swap fee will change from the given starting value (which may or may not be the current\n value) to the given ending fee percentage, over startTime to endTime.\n Note that calling this with a starting swap fee different from the current value will immediately change the\n current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`.\n Emits the GradualSwapFeeUpdateScheduled event.\n This is a permissioned function.\n @param _poolAddress - Address of pool being worked on.\n @param _startTime - The timestamp when the swap fee change will begin.\n @param _endTime - The timestamp when the swap fee change will end (must be >= startTime).\n @param _startSwapFeePercentage - The starting value for the swap fee change.\n @param _endSwapFeePercentage - The ending value for the swap fee change. If the current timestamp >= endTime,\n `getSwapFeePercentage()` will return this value."
            },
            "functionSelector": "875e7cd9",
            "id": 2741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2717,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2716,
                  "name": "restricted",
                  "nameLocations": [
                    "5317:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "5317:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "5317:10:17"
              },
              {
                "id": 2719,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2718,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "5328:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "5328:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "5328:12:17"
              }
            ],
            "name": "updateSwapFeeGradually",
            "nameLocation": "5122:22:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2706,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "5162:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "5154:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2705,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5154:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2708,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nameLocation": "5192:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "5184:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5184:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2710,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nameLocation": "5220:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "5212:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5212:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2712,
                  "mutability": "mutable",
                  "name": "_startSwapFeePercentage",
                  "nameLocation": "5246:23:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "5238:31:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5238:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2714,
                  "mutability": "mutable",
                  "name": "_endSwapFeePercentage",
                  "nameLocation": "5287:21:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2741,
                  "src": "5279:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5279:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5144:165:17"
            },
            "returnParameters": {
              "id": 2720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5341:0:17"
            },
            "scope": 3230,
            "src": "5113:434:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2781,
              "nodeType": "Block",
              "src": "6774:180:17",
              "statements": [
                {
                  "assignments": [
                    2764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2764,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "6798:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2781,
                      "src": "6785:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2763,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2762,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "6785:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "6785:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "6785:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2765,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6785:24:17"
                },
                {
                  "expression": {
                    "id": 2770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2766,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2764,
                      "src": "6819:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2768,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2744,
                          "src": "6846:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2767,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "6833:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6833:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "6819:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2771,
                  "nodeType": "ExpressionStatement",
                  "src": "6819:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2775,
                        "name": "_startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "6904:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2776,
                        "name": "_endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2748,
                        "src": "6916:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2777,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2752,
                        "src": "6926:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
                        "id": 2778,
                        "name": "_endWeights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2755,
                        "src": "6935:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 2772,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2764,
                        "src": "6869:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6881:22:17",
                      "memberName": "updateWeightsGradually",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123,
                      "src": "6869:34:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,contract IERC20[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 2779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6869:78:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2780,
                  "nodeType": "ExpressionStatement",
                  "src": "6869:78:17"
                }
              ]
            },
            "documentation": {
              "id": 2742,
              "nodeType": "StructuredDocumentation",
              "src": "5553:997:17",
              "text": " @notice Schedule a gradual weight change.\n @dev The weights will change from their current values to the given endWeights, over startTime to endTime.\n This is a permissioned function.\n Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes,\n the weights always start from their current values. This also guarantees a smooth transition when\n updateWeightsGradually is called during an ongoing weight change.\n @param _poolAddress - Address of pool being worked on.\n @param _startTime - The timestamp when the weight change will begin.\n @param _endTime - The timestamp when the weight change will end (can be >= startTime).\n @param _tokens - The tokens associated with the target weights (must match the current pool tokens).\n @param _endWeights - The target weights. If the current timestamp >= endTime, `getNormalizedWeights()`\n will return these values."
            },
            "functionSelector": "c90d3a04",
            "id": 2782,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2758,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2757,
                  "name": "restricted",
                  "nameLocations": [
                    "6750:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "6750:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "6750:10:17"
              },
              {
                "id": 2760,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2759,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "6761:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "6761:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "6761:12:17"
              }
            ],
            "name": "updateWeightsGradually",
            "nameLocation": "6564:22:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2744,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "6604:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "6596:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6596:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2746,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nameLocation": "6634:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "6626:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2745,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6626:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "_endTime",
                  "nameLocation": "6662:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "6654:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6654:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nameLocation": "6696:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "6680:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2750,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2749,
                        "name": "IERC20",
                        "nameLocations": [
                          "6680:6:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "6680:6:17"
                      },
                      "referencedDeclaration": 426,
                      "src": "6680:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 2751,
                    "nodeType": "ArrayTypeName",
                    "src": "6680:8:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2755,
                  "mutability": "mutable",
                  "name": "_endWeights",
                  "nameLocation": "6730:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "6713:28:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2753,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6713:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2754,
                    "nodeType": "ArrayTypeName",
                    "src": "6713:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6586:156:17"
            },
            "returnParameters": {
              "id": 2761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6774:0:17"
            },
            "scope": 3230,
            "src": "6555:399:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2810,
              "nodeType": "Block",
              "src": "7427:150:17",
              "statements": [
                {
                  "assignments": [
                    2796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2796,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "7451:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2810,
                      "src": "7438:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2795,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2794,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "7438:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "7438:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "7438:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2797,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7438:24:17"
                },
                {
                  "expression": {
                    "id": 2802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2798,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2796,
                      "src": "7472:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2800,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2785,
                          "src": "7499:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2799,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "7486:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7486:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "7472:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2803,
                  "nodeType": "ExpressionStatement",
                  "src": "7472:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2807,
                        "name": "_joinExitEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2787,
                        "src": "7553:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2804,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2796,
                        "src": "7522:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7534:18:17",
                      "memberName": "setJoinExitEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 150,
                      "src": "7522:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7522:48:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2809,
                  "nodeType": "ExpressionStatement",
                  "src": "7522:48:17"
                }
              ]
            },
            "documentation": {
              "id": 2783,
              "nodeType": "StructuredDocumentation",
              "src": "6960:341:17",
              "text": " @notice Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\n @dev Emits the JoinExitEnabledSet event. This is a permissioned function.\n @param _poolAddress - Address of pool being worked on.\n @param _joinExitEnabled - The new value of the join/exit enabled flag."
            },
            "functionSelector": "556f1eb9",
            "id": 2811,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2790,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2789,
                  "name": "restricted",
                  "nameLocations": [
                    "7403:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "7403:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "7403:10:17"
              },
              {
                "id": 2792,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2791,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7414:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "7414:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "7414:12:17"
              }
            ],
            "name": "setJoinExitEnabled",
            "nameLocation": "7315:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2785,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "7351:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2811,
                  "src": "7343:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7343:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2787,
                  "mutability": "mutable",
                  "name": "_joinExitEnabled",
                  "nameLocation": "7378:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2811,
                  "src": "7373:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2786,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7373:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7333:62:17"
            },
            "returnParameters": {
              "id": 2793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7427:0:17"
            },
            "scope": 3230,
            "src": "7306:271:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2839,
              "nodeType": "Block",
              "src": "7969:142:17",
              "statements": [
                {
                  "assignments": [
                    2825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2825,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "7993:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2839,
                      "src": "7980:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2824,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2823,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "7980:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "7980:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "7980:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2826,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7980:24:17"
                },
                {
                  "expression": {
                    "id": 2831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2827,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2825,
                      "src": "8014:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2829,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2814,
                          "src": "8041:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2828,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "8028:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8028:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "8014:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2832,
                  "nodeType": "ExpressionStatement",
                  "src": "8014:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2836,
                        "name": "_swapEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2816,
                        "src": "8091:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2833,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "8064:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8076:14:17",
                      "memberName": "setSwapEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 162,
                      "src": "8064:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8064:40:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2838,
                  "nodeType": "ExpressionStatement",
                  "src": "8064:40:17"
                }
              ]
            },
            "documentation": {
              "id": 2812,
              "nodeType": "StructuredDocumentation",
              "src": "7583:268:17",
              "text": " @notice Enable or disable trading.\n @dev Emits the SwapEnabledSet event. This is a permissioned function.\n @param _poolAddress - Address of pool being worked on.\n @param _swapEnabled - The new value of the swap enabled flag."
            },
            "functionSelector": "51d48cea",
            "id": 2840,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2819,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2818,
                  "name": "restricted",
                  "nameLocations": [
                    "7945:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "7945:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "7945:10:17"
              },
              {
                "id": 2821,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2820,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7956:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "7956:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "7956:12:17"
              }
            ],
            "name": "setSwapEnabled",
            "nameLocation": "7865:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2814,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "7897:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2840,
                  "src": "7889:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7889:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2816,
                  "mutability": "mutable",
                  "name": "_swapEnabled",
                  "nameLocation": "7924:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2840,
                  "src": "7919:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7919:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7879:58:17"
            },
            "returnParameters": {
              "id": 2822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7969:0:17"
            },
            "scope": 3230,
            "src": "7856:255:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2868,
              "nodeType": "Block",
              "src": "8727:152:17",
              "statements": [
                {
                  "assignments": [
                    2854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2854,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "8751:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2868,
                      "src": "8738:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2853,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2852,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "8738:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "8738:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "8738:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2855,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8738:24:17"
                },
                {
                  "expression": {
                    "id": 2860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2856,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2854,
                      "src": "8772:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2858,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2843,
                          "src": "8799:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2857,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "8786:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8786:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "8772:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2861,
                  "nodeType": "ExpressionStatement",
                  "src": "8772:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2865,
                        "name": "_mustAllowlistLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2845,
                        "src": "8854:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2862,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2854,
                        "src": "8822:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8834:19:17",
                      "memberName": "setMustAllowlistLPs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "8822:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8822:50:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2867,
                  "nodeType": "ExpressionStatement",
                  "src": "8822:50:17"
                }
              ]
            },
            "documentation": {
              "id": 2841,
              "nodeType": "StructuredDocumentation",
              "src": "8117:482:17",
              "text": " @notice Enable or disable the LP allowlist.\n @dev Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and\n back on again, because this action does not affect the list of LP addresses.\n Emits the MustAllowlistLPsSet event. This is a permissioned function.\n @param _poolAddress - Address of pool being worked on.\n @param _mustAllowlistLPs - The new value of the mustAllowlistLPs flag."
            },
            "functionSelector": "2abbd3ad",
            "id": 2869,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2848,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2847,
                  "name": "restricted",
                  "nameLocations": [
                    "8703:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "8703:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "8703:10:17"
              },
              {
                "id": 2850,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2849,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "8714:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "8714:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "8714:12:17"
              }
            ],
            "name": "setMustAllowlistLPs",
            "nameLocation": "8613:19:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2843,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "8650:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2869,
                  "src": "8642:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8642:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2845,
                  "mutability": "mutable",
                  "name": "_mustAllowlistLPs",
                  "nameLocation": "8677:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2869,
                  "src": "8672:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2844,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8672:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8632:63:17"
            },
            "returnParameters": {
              "id": 2851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8727:0:17"
            },
            "scope": 3230,
            "src": "8604:275:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2897,
              "nodeType": "Block",
              "src": "9342:140:17",
              "statements": [
                {
                  "assignments": [
                    2883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2883,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "9366:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2897,
                      "src": "9353:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2882,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2881,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "9353:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "9353:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "9353:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2884,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9353:24:17"
                },
                {
                  "expression": {
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2885,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2883,
                      "src": "9387:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2887,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2872,
                          "src": "9414:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2886,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "9401:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9401:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "9387:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2890,
                  "nodeType": "ExpressionStatement",
                  "src": "9387:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2894,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2874,
                        "src": "9467:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2891,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2883,
                        "src": "9437:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9449:17:17",
                      "memberName": "addAllowedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 180,
                      "src": "9437:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9437:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2896,
                  "nodeType": "ExpressionStatement",
                  "src": "9437:38:17"
                }
              ]
            },
            "documentation": {
              "id": 2870,
              "nodeType": "StructuredDocumentation",
              "src": "8885:338:17",
              "text": " @notice Adds an address to the LP allowlist.\n @dev Will fail if the address is already allowlisted.\n Emits the AllowlistAddressAdded event. This is a permissioned function.\n @param _poolAddress - Address of pool being worked on.\n @param _member - The address to be added to the allowlist."
            },
            "functionSelector": "abd796bf",
            "id": 2898,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2877,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2876,
                  "name": "restricted",
                  "nameLocations": [
                    "9318:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "9318:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9318:10:17"
              },
              {
                "id": 2879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2878,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "9329:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "9329:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9329:12:17"
              }
            ],
            "name": "addAllowedAddress",
            "nameLocation": "9237:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2872,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "9272:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2898,
                  "src": "9264:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9264:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2874,
                  "mutability": "mutable",
                  "name": "_member",
                  "nameLocation": "9302:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2898,
                  "src": "9294:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9294:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9254:56:17"
            },
            "returnParameters": {
              "id": 2880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9342:0:17"
            },
            "scope": 3230,
            "src": "9228:254:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2926,
              "nodeType": "Block",
              "src": "9847:143:17",
              "statements": [
                {
                  "assignments": [
                    2912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2912,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "9871:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2926,
                      "src": "9858:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2911,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2910,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "9858:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "9858:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "9858:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2913,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9858:24:17"
                },
                {
                  "expression": {
                    "id": 2918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2914,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2912,
                      "src": "9892:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2916,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2901,
                          "src": "9919:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2915,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "9906:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9906:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "9892:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2919,
                  "nodeType": "ExpressionStatement",
                  "src": "9892:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2923,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2903,
                        "src": "9975:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2920,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2912,
                        "src": "9942:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9954:20:17",
                      "memberName": "removeAllowedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "9942:32:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9942:41:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2925,
                  "nodeType": "ExpressionStatement",
                  "src": "9942:41:17"
                }
              ]
            },
            "documentation": {
              "id": 2899,
              "nodeType": "StructuredDocumentation",
              "src": "9488:237:17",
              "text": " @notice Removes an address from the _poolAddress - Address of pool being worked on.\n @param _poolAddress - Pool address being worked on\n @param _member - The address to be removed from the allowlist."
            },
            "functionSelector": "e4444feb",
            "id": 2927,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2906,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2905,
                  "name": "restricted",
                  "nameLocations": [
                    "9823:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "9823:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9823:10:17"
              },
              {
                "id": 2908,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2907,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "9834:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "9834:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9834:12:17"
              }
            ],
            "name": "removeAllowedAddress",
            "nameLocation": "9739:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2901,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "9777:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2927,
                  "src": "9769:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9769:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2903,
                  "mutability": "mutable",
                  "name": "_member",
                  "nameLocation": "9807:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2927,
                  "src": "9799:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9799:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9759:56:17"
            },
            "returnParameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9847:0:17"
            },
            "scope": 3230,
            "src": "9730:260:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2952,
              "nodeType": "Block",
              "src": "10556:140:17",
              "statements": [
                {
                  "assignments": [
                    2939
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2939,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "10580:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2952,
                      "src": "10567:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2938,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2937,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "10567:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "10567:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "10567:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2940,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10567:24:17"
                },
                {
                  "expression": {
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2941,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2939,
                      "src": "10601:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2943,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2930,
                          "src": "10628:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2942,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "10615:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10615:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "10601:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2946,
                  "nodeType": "ExpressionStatement",
                  "src": "10601:40:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2947,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2939,
                        "src": "10651:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10663:24:17",
                      "memberName": "collectAumManagementFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 206,
                      "src": "10651:36:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 2950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10651:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2951,
                  "nodeType": "ExpressionStatement",
                  "src": "10651:38:17"
                }
              ]
            },
            "documentation": {
              "id": 2928,
              "nodeType": "StructuredDocumentation",
              "src": "9996:459:17",
              "text": " @notice Collect any accrued AUM fees and send them to the pool manager.\n @dev This can be called by anyone to collect accrued AUM fees - and will be called automatically\n whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee\n percentage is changed by the manager, to prevent fees from being applied retroactively.\n @param _poolAddress - Address of pool being worked on."
            },
            "functionSelector": "404ac21e",
            "id": 2953,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2933,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2932,
                  "name": "restricted",
                  "nameLocations": [
                    "10532:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "10532:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "10532:10:17"
              },
              {
                "id": 2935,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2934,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "10543:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "10543:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "10543:12:17"
              }
            ],
            "name": "collectAumManagementFees",
            "nameLocation": "10469:24:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2930,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "10511:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2953,
                  "src": "10503:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10503:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10493:31:17"
            },
            "returnParameters": {
              "id": 2936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10556:0:17"
            },
            "scope": 3230,
            "src": "10460:236:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2981,
              "nodeType": "Block",
              "src": "11442:172:17",
              "statements": [
                {
                  "assignments": [
                    2967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2967,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "11466:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2981,
                      "src": "11453:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2966,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2965,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "11453:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "11453:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "11453:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2968,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11453:24:17"
                },
                {
                  "expression": {
                    "id": 2973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2969,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2967,
                      "src": "11487:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2971,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2956,
                          "src": "11514:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2970,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "11501:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11501:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "11487:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2974,
                  "nodeType": "ExpressionStatement",
                  "src": "11487:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2978,
                        "name": "_managementAumFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2958,
                        "src": "11579:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2975,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2967,
                        "src": "11537:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11549:29:17",
                      "memberName": "setManagementAumFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 214,
                      "src": "11537:41:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 2979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11537:70:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2980,
                  "nodeType": "ExpressionStatement",
                  "src": "11537:70:17"
                }
              ]
            },
            "documentation": {
              "id": 2954,
              "nodeType": "StructuredDocumentation",
              "src": "10706:585:17",
              "text": " @notice Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\n @dev Attempting to collect AUM fees in excess of the maximum permitted percentage will revert.\n To avoid retroactive fee increases, we force collection at the current fee percentage before processing\n the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\n @param _poolAddress - Address of pool being worked on.\n @param _managementAumFeePercentage - The new management AUM fee percentage."
            },
            "functionSelector": "42da1cb1",
            "id": 2982,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2961,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2960,
                  "name": "restricted",
                  "nameLocations": [
                    "11418:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "11418:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "11418:10:17"
              },
              {
                "id": 2963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2962,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "11429:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "11429:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "11429:12:17"
              }
            ],
            "name": "setManagementAumFeePercentage",
            "nameLocation": "11305:29:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2956,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "11352:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2982,
                  "src": "11344:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11344:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2958,
                  "mutability": "mutable",
                  "name": "_managementAumFeePercentage",
                  "nameLocation": "11382:27:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2982,
                  "src": "11374:35:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11374:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11334:76:17"
            },
            "returnParameters": {
              "id": 2964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11442:0:17"
            },
            "scope": 3230,
            "src": "11296:318:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3024,
              "nodeType": "Block",
              "src": "12634:201:17",
              "statements": [
                {
                  "assignments": [
                    3007
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3007,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "12658:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3024,
                      "src": "12645:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3006,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3005,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "12645:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "12645:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "12645:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3008,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12645:24:17"
                },
                {
                  "expression": {
                    "id": 3013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3009,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3007,
                      "src": "12679:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3011,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2985,
                          "src": "12706:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3010,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "12693:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12693:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "12679:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3014,
                  "nodeType": "ExpressionStatement",
                  "src": "12679:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3018,
                        "name": "_tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2989,
                        "src": "12760:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
                        "id": 3019,
                        "name": "_bptPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2992,
                        "src": "12769:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3020,
                        "name": "_lowerBoundPercentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "12781:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3021,
                        "name": "_upperBoundPercentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "12805:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 3015,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3007,
                        "src": "12729:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12741:18:17",
                      "memberName": "setCircuitBreakers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 239,
                      "src": "12729:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20[] memory,uint256[] memory,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 3022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12729:99:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3023,
                  "nodeType": "ExpressionStatement",
                  "src": "12729:99:17"
                }
              ]
            },
            "documentation": {
              "id": 2983,
              "nodeType": "StructuredDocumentation",
              "src": "11620:751:17",
              "text": " @notice Set a circuit breaker for one or more tokens.\n @dev This is a permissioned function. The lower and upper bounds are percentages, corresponding to a\n relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent\n trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\n @param _poolAddress - Pool to have a circruit breaker set\n @param _tokens - Tokens in the pool\n @param _bptPrices - Token prices to for the circuit breaker\n @param _lowerBoundPercentages - The lower limit to trigger the circuit breaker\n @param _upperBoundPercentages - The upper limit to trigger the circuit breaker"
            },
            "functionSelector": "458aa92b",
            "id": 3025,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3001,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3000,
                  "name": "restricted",
                  "nameLocations": [
                    "12610:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "12610:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "12610:10:17"
              },
              {
                "id": 3003,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3002,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "12621:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "12621:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "12621:12:17"
              }
            ],
            "name": "setCircuitBreakers",
            "nameLocation": "12385:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2985,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "12421:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "12413:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12413:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2989,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nameLocation": "12459:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "12443:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2987,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2986,
                        "name": "IERC20",
                        "nameLocations": [
                          "12443:6:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "12443:6:17"
                      },
                      "referencedDeclaration": 426,
                      "src": "12443:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 2988,
                    "nodeType": "ArrayTypeName",
                    "src": "12443:8:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2992,
                  "mutability": "mutable",
                  "name": "_bptPrices",
                  "nameLocation": "12493:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "12476:27:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2990,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12476:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2991,
                    "nodeType": "ArrayTypeName",
                    "src": "12476:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2995,
                  "mutability": "mutable",
                  "name": "_lowerBoundPercentages",
                  "nameLocation": "12530:22:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "12513:39:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2993,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12513:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2994,
                    "nodeType": "ArrayTypeName",
                    "src": "12513:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2998,
                  "mutability": "mutable",
                  "name": "_upperBoundPercentages",
                  "nameLocation": "12579:22:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3025,
                  "src": "12562:39:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2996,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12562:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2997,
                    "nodeType": "ArrayTypeName",
                    "src": "12562:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12403:199:17"
            },
            "returnParameters": {
              "id": 3004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12634:0:17"
            },
            "scope": 3230,
            "src": "12376:459:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3066,
              "nodeType": "Block",
              "src": "14486:204:17",
              "statements": [
                {
                  "assignments": [
                    3048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3048,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "14510:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3066,
                      "src": "14497:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3047,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3046,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "14497:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "14497:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "14497:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3049,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14497:24:17"
                },
                {
                  "expression": {
                    "id": 3054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3050,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3048,
                      "src": "14531:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3052,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3028,
                          "src": "14558:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3051,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "14545:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14545:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "14531:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3055,
                  "nodeType": "ExpressionStatement",
                  "src": "14531:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3059,
                        "name": "_tokenToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3031,
                        "src": "14602:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 3060,
                        "name": "_assetManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3033,
                        "src": "14615:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3061,
                        "name": "_tokenToAddNormalizedWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3035,
                        "src": "14630:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3062,
                        "name": "_mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3037,
                        "src": "14659:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3063,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3039,
                        "src": "14672:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3056,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3048,
                        "src": "14581:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14593:8:17",
                      "memberName": "addToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 273,
                      "src": "14581:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,uint256,address) external"
                      }
                    },
                    "id": 3064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14581:102:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3065,
                  "nodeType": "ExpressionStatement",
                  "src": "14581:102:17"
                }
              ]
            },
            "documentation": {
              "id": 3026,
              "nodeType": "StructuredDocumentation",
              "src": "12841:1399:17",
              "text": " @notice Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\n @dev By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new\n token will have no balance - it is up to the owner to provide some immediately after calling this function.\n Note however that regular join functions will not work while the new token has no balance: the only way to\n deposit an initial amount is by using an Asset Manager.\n Token addition is forbidden during a weight change, or if one is scheduled to happen in the future.\n The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be\n useful in some scenarios to account for the fact that the Pool will have more tokens.\n Emits the TokenAdded event.\n @param _poolAddress - Address of pool being worked on.\n @param _tokenToAdd - The ERC20 token to be added to the Pool.\n @param _assetManager - The Asset Manager for the token.\n @param _tokenToAddNormalizedWeight - The normalized weight of `token` relative to the other tokens in the Pool.\n @param _mintAmount - The amount of BPT to be minted as a result of adding `token` to the Pool.\n @param _recipient - The address to receive the BPT minted by the Pool."
            },
            "functionSelector": "21f1e0cd",
            "id": 3067,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3042,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3041,
                  "name": "restricted",
                  "nameLocations": [
                    "14462:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "14462:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "14462:10:17"
              },
              {
                "id": 3044,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3043,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "14473:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "14473:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "14473:12:17"
              }
            ],
            "name": "addToken",
            "nameLocation": "14254:8:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3028,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "14280:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "14272:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14272:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3031,
                  "mutability": "mutable",
                  "name": "_tokenToAdd",
                  "nameLocation": "14309:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "14302:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$426",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3029,
                      "name": "IERC20",
                      "nameLocations": [
                        "14302:6:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "14302:6:17"
                    },
                    "referencedDeclaration": 426,
                    "src": "14302:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3033,
                  "mutability": "mutable",
                  "name": "_assetManager",
                  "nameLocation": "14338:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "14330:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14330:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3035,
                  "mutability": "mutable",
                  "name": "_tokenToAddNormalizedWeight",
                  "nameLocation": "14369:27:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "14361:35:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14361:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3037,
                  "mutability": "mutable",
                  "name": "_mintAmount",
                  "nameLocation": "14414:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "14406:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14406:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3039,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "14443:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3067,
                  "src": "14435:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14435:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14262:192:17"
            },
            "returnParameters": {
              "id": 3045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14486:0:17"
            },
            "scope": 3230,
            "src": "14245:445:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3102,
              "nodeType": "Block",
              "src": "15812:163:17",
              "statements": [
                {
                  "assignments": [
                    3086
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3086,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "15836:11:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3102,
                      "src": "15823:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3085,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3084,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "15823:12:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "15823:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "15823:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3087,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15823:24:17"
                },
                {
                  "expression": {
                    "id": 3092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3088,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3086,
                      "src": "15857:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3090,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3070,
                          "src": "15884:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3089,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "15871:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15871:26:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "15857:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3093,
                  "nodeType": "ExpressionStatement",
                  "src": "15857:40:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3097,
                        "name": "_tokenToRemove",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3073,
                        "src": "15931:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 3098,
                        "name": "_burnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3075,
                        "src": "15947:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3099,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3077,
                        "src": "15960:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3094,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3086,
                        "src": "15907:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15919:11:17",
                      "memberName": "removeToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 284,
                      "src": "15907:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$426_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,uint256,address) external"
                      }
                    },
                    "id": 3100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15907:61:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3101,
                  "nodeType": "ExpressionStatement",
                  "src": "15907:61:17"
                }
              ]
            },
            "documentation": {
              "id": 3068,
              "nodeType": "StructuredDocumentation",
              "src": "14696:943:17",
              "text": " @notice Removes a token from the Pool's list of tradeable tokens.\n @dev Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not\n including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in\n the future.\n Emits the TokenRemoved event. This is a permissioned function.\n The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful\n in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\n @param _poolAddress - Address of pool being worked on.\n @param _tokenToRemove - The ERC20 token to be removed from the Pool.\n @param _burnAmount - The amount of BPT to be burned after removing `token` from the Pool.\n @param _sender - The address to burn BPT from."
            },
            "functionSelector": "cbe04b0c",
            "id": 3103,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3080,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3079,
                  "name": "restricted",
                  "nameLocations": [
                    "15788:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "15788:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "15788:10:17"
              },
              {
                "id": 3082,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3081,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "15799:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "15799:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "15799:12:17"
              }
            ],
            "name": "removeToken",
            "nameLocation": "15653:11:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3070,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "15682:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3103,
                  "src": "15674:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15674:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3073,
                  "mutability": "mutable",
                  "name": "_tokenToRemove",
                  "nameLocation": "15711:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3103,
                  "src": "15704:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$426",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3071,
                      "name": "IERC20",
                      "nameLocations": [
                        "15704:6:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "15704:6:17"
                    },
                    "referencedDeclaration": 426,
                    "src": "15704:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3075,
                  "mutability": "mutable",
                  "name": "_burnAmount",
                  "nameLocation": "15743:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3103,
                  "src": "15735:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15735:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3077,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "15772:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3103,
                  "src": "15764:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15764:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15664:116:17"
            },
            "returnParameters": {
              "id": 3083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15812:0:17"
            },
            "scope": 3230,
            "src": "15644:331:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3135,
              "nodeType": "Block",
              "src": "16424:127:17",
              "statements": [
                {
                  "assignments": [
                    3119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3119,
                      "mutability": "mutable",
                      "name": "_token",
                      "nameLocation": "16442:6:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3135,
                      "src": "16435:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3118,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3117,
                          "name": "IERC20",
                          "nameLocations": [
                            "16435:6:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 426,
                          "src": "16435:6:17"
                        },
                        "referencedDeclaration": 426,
                        "src": "16435:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3123,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3121,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3108,
                        "src": "16458:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3120,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "16451:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16451:21:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16435:37:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3129,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "16510:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseController_$3230",
                              "typeString": "contract BaseController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseController_$3230",
                              "typeString": "contract BaseController"
                            }
                          ],
                          "id": 3128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16502:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16502:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16502:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3131,
                        "name": "_recipientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3106,
                        "src": "16517:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3132,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3110,
                        "src": "16536:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3124,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3119,
                        "src": "16482:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16489:12:17",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 407,
                      "src": "16482:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16482:62:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3134,
                  "nodeType": "ExpressionStatement",
                  "src": "16482:62:17"
                }
              ]
            },
            "documentation": {
              "id": 3104,
              "nodeType": "StructuredDocumentation",
              "src": "15981:292:17",
              "text": " @notice Withdraw tokens from controller\n @dev Transfers an amount of an ERC20 token\n @param _recipientAddress - Address of wallet receiving funds.\n @param _tokenAddress - Address of token to be withdrawn.\n @param _amount - Amount to withdraw."
            },
            "functionSelector": "1c20fadd",
            "id": 3136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3113,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3112,
                  "name": "restricted",
                  "nameLocations": [
                    "16400:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "16400:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16400:10:17"
              },
              {
                "id": 3115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3114,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "16411:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "16411:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16411:12:17"
              }
            ],
            "name": "withdrawFunds",
            "nameLocation": "16287:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3106,
                  "mutability": "mutable",
                  "name": "_recipientAddress",
                  "nameLocation": "16318:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "16310:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16310:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3108,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "16353:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "16345:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16345:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3110,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "16384:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3136,
                  "src": "16376:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16376:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16300:92:17"
            },
            "returnParameters": {
              "id": 3116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16424:0:17"
            },
            "scope": 3230,
            "src": "16278:273:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3171,
              "nodeType": "Block",
              "src": "16928:117:17",
              "statements": [
                {
                  "assignments": [
                    3154
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3154,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "16945:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3171,
                      "src": "16938:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3153,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3152,
                          "name": "IERC20",
                          "nameLocations": [
                            "16938:6:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 426,
                          "src": "16938:6:17"
                        },
                        "referencedDeclaration": 426,
                        "src": "16938:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3158,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3156,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3141,
                        "src": "16960:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3155,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "16953:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16953:21:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16938:36:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "17003:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17007:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17003:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3166,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "17023:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseController_$3230",
                              "typeString": "contract BaseController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseController_$3230",
                              "typeString": "contract BaseController"
                            }
                          ],
                          "id": 3165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17015:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17015:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17015:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3168,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3139,
                        "src": "17030:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3159,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "16984:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16990:12:17",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 407,
                      "src": "16984:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16984:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3170,
                  "nodeType": "ExpressionStatement",
                  "src": "16984:54:17"
                }
              ]
            },
            "documentation": {
              "id": 3137,
              "nodeType": "StructuredDocumentation",
              "src": "16557:219:17",
              "text": " @notice Deposit tokens to controller\n @dev Transfers an amount of an ERC20 token\n @param _amount - Amount to deposit.\n @param _tokenAddress - Address of token to be deposited."
            },
            "functionSelector": "4f6300a2",
            "id": 3172,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3144,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3143,
                  "name": "restricted",
                  "nameLocations": [
                    "16865:10:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "16865:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16865:10:17"
              },
              {
                "id": 3146,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3145,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "16876:12:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "16876:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16876:12:17"
              },
              {
                "arguments": [
                  {
                    "id": 3148,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3139,
                    "src": "16904:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 3149,
                    "name": "_tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3141,
                    "src": "16913:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3150,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3147,
                  "name": "checkAllowance",
                  "nameLocations": [
                    "16889:14:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3229,
                  "src": "16889:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16889:38:17"
              }
            ],
            "name": "depositTokens",
            "nameLocation": "16790:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3139,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "16818:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3172,
                  "src": "16813:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16813:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3141,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "16843:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3172,
                  "src": "16835:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16835:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16803:54:17"
            },
            "returnParameters": {
              "id": 3151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16928:0:17"
            },
            "scope": 3230,
            "src": "16781:264:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3185,
              "nodeType": "Block",
              "src": "17330:122:17",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "17405:41:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17419:17:17",
                        "value": {
                          "name": "_tokens",
                          "nodeType": "YulIdentifier",
                          "src": "17429:7:17"
                        },
                        "variableNames": [
                          {
                            "name": "assets",
                            "nodeType": "YulIdentifier",
                            "src": "17419:6:17"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 3177,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17429:7:17",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3182,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "17419:6:17",
                      "valueSize": 1
                    }
                  ],
                  "id": 3184,
                  "nodeType": "InlineAssembly",
                  "src": "17396:50:17"
                }
              ]
            },
            "documentation": {
              "id": 3173,
              "nodeType": "StructuredDocumentation",
              "src": "17051:170:17",
              "text": " @dev This helper function is a fast and cheap way to convert between IERC20 and IAsset types\n @param _tokens - Tokens to convert to assets"
            },
            "id": 3186,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertERC20sToAssets",
            "nameLocation": "17235:22:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3177,
                  "mutability": "mutable",
                  "name": "_tokens",
                  "nameLocation": "17274:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3186,
                  "src": "17258:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3175,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3174,
                        "name": "IERC20",
                        "nameLocations": [
                          "17258:6:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "17258:6:17"
                      },
                      "referencedDeclaration": 426,
                      "src": "17258:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 3176,
                    "nodeType": "ArrayTypeName",
                    "src": "17258:8:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17257:25:17"
            },
            "returnParameters": {
              "id": 3183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3182,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "17322:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3186,
                  "src": "17306:22:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                    "typeString": "contract IAsset[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3180,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3179,
                        "name": "IAsset",
                        "nameLocations": [
                          "17306:6:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 430,
                        "src": "17306:6:17"
                      },
                      "referencedDeclaration": 430,
                      "src": "17306:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAsset_$430",
                        "typeString": "contract IAsset"
                      }
                    },
                    "id": 3181,
                    "nodeType": "ArrayTypeName",
                    "src": "17306:8:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_storage_ptr",
                      "typeString": "contract IAsset[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17305:24:17"
            },
            "scope": 3230,
            "src": "17226:226:17",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3197,
              "nodeType": "Block",
              "src": "17555:58:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3190,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "17573:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17577:6:17",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17573:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3192,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2481,
                          "src": "17587:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17573:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3189,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17565:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17565:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3195,
                  "nodeType": "ExpressionStatement",
                  "src": "17565:30:17"
                },
                {
                  "id": 3196,
                  "nodeType": "PlaceholderStatement",
                  "src": "17605:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3187,
              "nodeType": "StructuredDocumentation",
              "src": "17458:70:17",
              "text": " @dev Modifier to restrict access to the set manager"
            },
            "id": 3198,
            "name": "restricted",
            "nameLocation": "17542:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17552:2:17"
            },
            "src": "17533:80:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3228,
              "nodeType": "Block",
              "src": "17770:145:17",
              "statements": [
                {
                  "assignments": [
                    3207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3207,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "17787:5:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 3228,
                      "src": "17780:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3206,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3205,
                          "name": "IERC20",
                          "nameLocations": [
                            "17780:6:17"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 426,
                          "src": "17780:6:17"
                        },
                        "referencedDeclaration": 426,
                        "src": "17780:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3211,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3209,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3203,
                        "src": "17802:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3208,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "17795:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17795:21:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17780:36:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3215,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "17850:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17854:6:17",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17850:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3219,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "17870:4:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BaseController_$3230",
                                    "typeString": "contract BaseController"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BaseController_$3230",
                                    "typeString": "contract BaseController"
                                  }
                                ],
                                "id": 3218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17862:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3217,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17862:7:17",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17862:13:17",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3213,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3207,
                              "src": "17834:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$426",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17840:9:17",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 385,
                            "src": "17834:15:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 3221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17834:42:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 3222,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3201,
                          "src": "17880:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17834:53:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4572726f72",
                        "id": 3224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17889:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        }
                      ],
                      "id": 3212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "17826:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17826:71:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3226,
                  "nodeType": "ExpressionStatement",
                  "src": "17826:71:17"
                },
                {
                  "id": 3227,
                  "nodeType": "PlaceholderStatement",
                  "src": "17907:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3199,
              "nodeType": "StructuredDocumentation",
              "src": "17619:57:17",
              "text": " @dev Modifier to check token allowance"
            },
            "id": 3229,
            "name": "checkAllowance",
            "nameLocation": "17690:14:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3201,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "17710:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3229,
                  "src": "17705:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3200,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17705:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3203,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "17755:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3229,
                  "src": "17747:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17747:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17704:65:17"
            },
            "src": "17681:234:17",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3231,
        "src": "490:17427:17",
        "usedErrors": []
      }
    ],
    "src": "33:17885:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-29T18:13:29.770Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAllowedAddress(address,address)": {
        "details": "Will fail if the address is already allowlisted. Emits the AllowlistAddressAdded event. This is a permissioned function.",
        "params": {
          "_member": "- The address to be added to the allowlist.",
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "addToken(address,address,address,uint256,uint256,address)": {
        "details": "By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new token will have no balance - it is up to the owner to provide some immediately after calling this function. Note however that regular join functions will not work while the new token has no balance: the only way to deposit an initial amount is by using an Asset Manager. Token addition is forbidden during a weight change, or if one is scheduled to happen in the future. The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be useful in some scenarios to account for the fact that the Pool will have more tokens. Emits the TokenAdded event.",
        "params": {
          "_assetManager": "- The Asset Manager for the token.",
          "_mintAmount": "- The amount of BPT to be minted as a result of adding `token` to the Pool.",
          "_poolAddress": "- Address of pool being worked on.",
          "_recipient": "- The address to receive the BPT minted by the Pool.",
          "_tokenToAdd": "- The ERC20 token to be added to the Pool.",
          "_tokenToAddNormalizedWeight": "- The normalized weight of `token` relative to the other tokens in the Pool."
        }
      },
      "collectAumManagementFees(address)": {
        "details": "This can be called by anyone to collect accrued AUM fees - and will be called automatically whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee percentage is changed by the manager, to prevent fees from being applied retroactively.",
        "params": {
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "constructor": {
        "params": {
          "_managedPoolFactory": "- Managed pool contract address",
          "_vaultAddress": "- Vault contract address"
        }
      },
      "createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256)": {
        "params": {
          "_assetManagers": "- Asset manager for the pool",
          "_aumFeeId": "- Aum Fee Id",
          "_managementAumFeePercentage": "- Management Aum fee to apply",
          "_mustAllowlistLPs": "- List of LP's allowed in the pool",
          "_name": "- Pool name",
          "_normalizedWeights": "- Normalized weights in the pool",
          "_swapEnabledOnStart": "- Whether swaps are enabled straight away",
          "_swapFeePercentage": "- Fee applied to swaps",
          "_symbol": "- Symbol representing the pool",
          "_tokens": "- Tokens in the pool"
        }
      },
      "depositTokens(uint256,address)": {
        "details": "Transfers an amount of an ERC20 token",
        "params": {
          "_amount": "- Amount to deposit.",
          "_tokenAddress": "- Address of token to be deposited."
        }
      },
      "removeAllowedAddress(address,address)": {
        "params": {
          "_member": "- The address to be removed from the allowlist.",
          "_poolAddress": "- Pool address being worked on"
        }
      },
      "removeToken(address,address,uint256,address)": {
        "details": "Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in the future. Emits the TokenRemoved event. This is a permissioned function. The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.",
        "params": {
          "_burnAmount": "- The amount of BPT to be burned after removing `token` from the Pool.",
          "_poolAddress": "- Address of pool being worked on.",
          "_sender": "- The address to burn BPT from.",
          "_tokenToRemove": "- The ERC20 token to be removed from the Pool."
        }
      },
      "setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])": {
        "details": "This is a permissioned function. The lower and upper bounds are percentages, corresponding to a relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent trades that result in the value of the token dropping 20% or more relative to the rest of the pool.",
        "params": {
          "_bptPrices": "- Token prices to for the circuit breaker",
          "_lowerBoundPercentages": "- The lower limit to trigger the circuit breaker",
          "_poolAddress": "- Pool to have a circruit breaker set",
          "_tokens": "- Tokens in the pool",
          "_upperBoundPercentages": "- The upper limit to trigger the circuit breaker"
        }
      },
      "setJoinExitEnabled(address,bool)": {
        "details": "Emits the JoinExitEnabledSet event. This is a permissioned function.",
        "params": {
          "_joinExitEnabled": "- The new value of the join/exit enabled flag.",
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "setManagementAumFeePercentage(address,uint256)": {
        "details": "Attempting to collect AUM fees in excess of the maximum permitted percentage will revert. To avoid retroactive fee increases, we force collection at the current fee percentage before processing the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.",
        "params": {
          "_managementAumFeePercentage": "- The new management AUM fee percentage.",
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "setMustAllowlistLPs(address,bool)": {
        "details": "Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and back on again, because this action does not affect the list of LP addresses. Emits the MustAllowlistLPsSet event. This is a permissioned function.",
        "params": {
          "_mustAllowlistLPs": "- The new value of the mustAllowlistLPs flag.",
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "setSwapEnabled(address,bool)": {
        "details": "Emits the SwapEnabledSet event. This is a permissioned function.",
        "params": {
          "_poolAddress": "- Address of pool being worked on.",
          "_swapEnabled": "- The new value of the swap enabled flag."
        }
      },
      "setTargetPoolPrices(address,address[],uint256[])": {
        "params": {
          "_pool": "- Pool to have prices set.",
          "_prices": "- The collection of prices to set",
          "_tokens": "- The collection of tokens to have prices set"
        }
      },
      "transferManagement(address)": {
        "details": "Only one manager can presently be set",
        "params": {
          "_manager": "- New manager."
        }
      },
      "updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)": {
        "details": "The swap fee will change from the given starting value (which may or may not be the current value) to the given ending fee percentage, over startTime to endTime. Note that calling this with a starting swap fee different from the current value will immediately change the current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`. Emits the GradualSwapFeeUpdateScheduled event. This is a permissioned function.",
        "params": {
          "_endSwapFeePercentage": "- The ending value for the swap fee change. If the current timestamp >= endTime, `getSwapFeePercentage()` will return this value.",
          "_endTime": "- The timestamp when the swap fee change will end (must be >= startTime).",
          "_poolAddress": "- Address of pool being worked on.",
          "_startSwapFeePercentage": "- The starting value for the swap fee change.",
          "_startTime": "- The timestamp when the swap fee change will begin."
        }
      },
      "updateWeightsGradually(address,uint256,uint256,address[],uint256[])": {
        "details": "The weights will change from their current values to the given endWeights, over startTime to endTime. This is a permissioned function. Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes, the weights always start from their current values. This also guarantees a smooth transition when updateWeightsGradually is called during an ongoing weight change.",
        "params": {
          "_endTime": "- The timestamp when the weight change will end (can be >= startTime).",
          "_endWeights": "- The target weights. If the current timestamp >= endTime, `getNormalizedWeights()` will return these values.",
          "_poolAddress": "- Address of pool being worked on.",
          "_startTime": "- The timestamp when the weight change will begin.",
          "_tokens": "- The tokens associated with the target weights (must match the current pool tokens)."
        }
      },
      "withdrawFunds(address,address,uint256)": {
        "details": "Transfers an amount of an ERC20 token",
        "params": {
          "_amount": "- Amount to withdraw.",
          "_recipientAddress": "- Address of wallet receiving funds.",
          "_tokenAddress": "- Address of token to be withdrawn."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAllowedAddress(address,address)": {
        "notice": "Adds an address to the LP allowlist."
      },
      "addToken(address,address,address,uint256,uint256,address)": {
        "notice": "Adds a token to the Pool's list of tradeable tokens. This is a permissioned function."
      },
      "collectAumManagementFees(address)": {
        "notice": "Collect any accrued AUM fees and send them to the pool manager."
      },
      "constructor": {
        "notice": "Constructor for the controller base class"
      },
      "createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256)": {
        "notice": "Create a new managed pool"
      },
      "depositTokens(uint256,address)": {
        "notice": "Deposit tokens to controller"
      },
      "removeAllowedAddress(address,address)": {
        "notice": "Removes an address from the _poolAddress - Address of pool being worked on."
      },
      "removeToken(address,address,uint256,address)": {
        "notice": "Removes a token from the Pool's list of tradeable tokens."
      },
      "setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])": {
        "notice": "Set a circuit breaker for one or more tokens."
      },
      "setJoinExitEnabled(address,bool)": {
        "notice": "Enable or disable joins and exits. Note that this does not affect Recovery Mode exits."
      },
      "setManagementAumFeePercentage(address,uint256)": {
        "notice": "Setter for the yearly percentage AUM management fee, which is payable to the pool manager."
      },
      "setMustAllowlistLPs(address,bool)": {
        "notice": "Enable or disable the LP allowlist."
      },
      "setSwapEnabled(address,bool)": {
        "notice": "Enable or disable trading."
      },
      "setTargetPoolPrices(address,address[],uint256[])": {
        "notice": "Set target prices used for balancing"
      },
      "transferManagement(address)": {
        "notice": "Transfer the manager to a new address"
      },
      "updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)": {
        "notice": "Schedule a gradual swap fee update."
      },
      "updateWeightsGradually(address,uint256,uint256,address[],uint256[])": {
        "notice": "Schedule a gradual weight change."
      },
      "withdrawFunds(address,address,uint256)": {
        "notice": "Withdraw tokens from controller"
      }
    },
    "version": 1
  }
}