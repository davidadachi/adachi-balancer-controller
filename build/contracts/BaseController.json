{
  "contractName": "BaseController",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PERCENTAGE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "addManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "calculateBalancing",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "minAmountsOut",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.ExitPoolRequest",
              "name": "newExitRequest",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.JoinPoolRequest",
              "name": "newJoinRequest",
              "type": "tuple"
            }
          ],
          "internalType": "struct PoolAdjustments",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "managedPoolFactory",
      "outputs": [
        {
          "internalType": "contract ManagedPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "managedPools",
      "outputs": [
        {
          "internalType": "string",
          "name": "poolName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "poolSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tolerance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "removeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "feed",
          "type": "address"
        }
      ],
      "name": "setTokenFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenFeeds",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "normalizedWeights",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "swapFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isSwapEnabledOnStart",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isMustAllowlistLPs",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "managementAumFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aumFeeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tolerance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolsUnderManagement",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startSwapFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endSwapFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "updateSwapFeeGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "endWeights",
          "type": "uint256[]"
        }
      ],
      "name": "updateWeightsGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "getPoolId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isJoinExitEnabled",
          "type": "bool"
        }
      ],
      "name": "setJoinExitEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "getSwapEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isSwapEnabled",
          "type": "bool"
        }
      ],
      "name": "setSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isMustAllowlistLPs",
          "type": "bool"
        }
      ],
      "name": "setMustAllowlistLPs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "addAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "removeAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "collectAumManagementFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "managementAumFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "setManagementAumFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "bptPrices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "lowerBoundPercentages",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "upperBoundPercentages",
          "type": "uint256[]"
        }
      ],
      "name": "setCircuitBreakers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToAdd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenToAddNormalizedWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToRemove",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "burnAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipientAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERCENTAGE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"addManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToAdd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenToAddNormalizedWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"calculateBalancing\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"newExitRequest\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"newJoinRequest\",\"type\":\"tuple\"}],\"internalType\":\"struct PoolAdjustments\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"collectAumManagementFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"normalizedWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapEnabledOnStart\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMustAllowlistLPs\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"managementAumFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aumFeeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsUnderManagement\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getSwapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managedPoolFactory\",\"outputs\":[{\"internalType\":\"contract ManagedPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"managedPools\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"poolSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"removeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToRemove\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bptPrices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lowerBoundPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"upperBoundPercentages\",\"type\":\"uint256[]\"}],\"name\":\"setCircuitBreakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isJoinExitEnabled\",\"type\":\"bool\"}],\"name\":\"setJoinExitEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"managementAumFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setManagementAumFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isMustAllowlistLPs\",\"type\":\"bool\"}],\"name\":\"setMustAllowlistLPs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSwapEnabled\",\"type\":\"bool\"}],\"name\":\"setSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"setTokenFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateSwapFeeGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"endWeights\",\"type\":\"uint256[]\"}],\"name\":\"updateWeightsGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAllowedAddress(address,address)\":{\"details\":\"Will fail if the address is already allowlisted. Emits the AllowlistAddressAdded event. This is a permissioned function.\",\"params\":{\"member\":\"- The address to be added to the allowlist.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"addManager(address)\":{\"params\":{\"manager\":\"- Manager to add\"}},\"addToken(address,address,address,uint256,uint256,address)\":{\"details\":\"By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new token will have no balance - it is up to the owner to provide some immediately after calling this function. Note however that regular join functions will not work while the new token has no balance: the only way to deposit an initial amount is by using an Asset Manager. Token addition is forbidden during a weight change, or if one is scheduled to happen in the future. The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be useful in some scenarios to account for the fact that the Pool will have more tokens. Emits the TokenAdded event.\",\"params\":{\"assetManager\":\"- The Asset Manager for the token.\",\"mintAmount\":\"- The amount of BPT to be minted as a result of adding `token` to the Pool.\",\"poolAddress\":\"- Address of pool being worked on.\",\"recipient\":\"- The address to receive the BPT minted by the Pool.\",\"tokenToAdd\":\"- The ERC20 token to be added to the Pool.\",\"tokenToAddNormalizedWeight\":\"- The normalized weight of `token` relative to the other tokens in the Pool.\"}},\"calculateBalancing(address)\":{\"params\":{\"poolAddress\":\"- Address of pool being worked on.\"}},\"collectAumManagementFees(address)\":{\"details\":\"This can be called by anyone to collect accrued AUM fees - and will be called automatically whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee percentage is changed by the manager, to prevent fees from being applied retroactively.\",\"params\":{\"poolAddress\":\"- Address of pool being worked on.\"}},\"constructor\":{\"params\":{\"supportedManagedPoolFactory\":\"- Managed pool contract address\",\"vaultAddress\":\"- Vault contract address\"}},\"createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256,uint256,bytes32)\":{\"params\":{\"assetManagers\":\"- Asset manager for the pool\",\"aumFeeId\":\"- Aum Fee Id\",\"isMustAllowlistLPs\":\"- List of LP's allowed in the pool\",\"isSwapEnabledOnStart\":\"- Whether swaps are enabled straight away\",\"managementAumFeePercentage\":\"- Management Aum fee to apply\",\"name\":\"- Pool name\",\"normalizedWeights\":\"- Normalized weights in the pool\",\"salt\":\"- Salt used towards calculating pool address\",\"swapFeePercentage\":\"- Fee applied to swaps\",\"symbol\":\"- Symbol representing the pool\",\"tokens\":\"- Tokens in the pool\",\"tolerance\":\"- Percentage devience \"}},\"depositTokens(uint256,address)\":{\"details\":\"Transfers an amount of an ERC20 token\",\"params\":{\"amount\":\"- Amount to deposit.\",\"tokenAddress\":\"- Address of token to be deposited.\"}},\"getPoolId(address)\":{\"params\":{\"poolAddress\":\"- Pool to get the Id for\"}},\"getSwapEnabled(address)\":{\"params\":{\"poolAddress\":\"- Pool to get the swap state for\"}},\"getTokenPrice(address)\":{\"params\":{\"tokenAddress\":\"- Token to find a price for\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeAllowedAddress(address,address)\":{\"params\":{\"member\":\"- The address to be removed from the allowlist.\",\"poolAddress\":\"- Pool address being worked on\"}},\"removeManager(address)\":{\"params\":{\"manager\":\"- Manager to remove\"}},\"removeToken(address,address,uint256,address)\":{\"details\":\"Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in the future. Emits the TokenRemoved event. This is a permissioned function. The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\",\"params\":{\"burnAmount\":\"- The amount of BPT to be burned after removing `token` from the Pool.\",\"poolAddress\":\"- Address of pool being worked on.\",\"sender\":\"- The address to burn BPT from.\",\"tokenToRemove\":\"- The ERC20 token to be removed from the Pool.\"}},\"setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])\":{\"details\":\"This is a permissioned function. The lower and upper bounds are percentages, corresponding to a relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\",\"params\":{\"bptPrices\":\"- Token prices to for the circuit breaker\",\"lowerBoundPercentages\":\"- The lower limit to trigger the circuit breaker\",\"poolAddress\":\"- Pool to have a circruit breaker set\",\"tokens\":\"- Tokens in the pool\",\"upperBoundPercentages\":\"- The upper limit to trigger the circuit breaker\"}},\"setJoinExitEnabled(address,bool)\":{\"details\":\"Emits the JoinExitEnabledSet event. This is a permissioned function.\",\"params\":{\"isJoinExitEnabled\":\"- The new value of the join/exit enabled flag.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"setManagementAumFeePercentage(address,uint256)\":{\"details\":\"Attempting to collect AUM fees in excess of the maximum permitted percentage will revert. To avoid retroactive fee increases, we force collection at the current fee percentage before processing the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\",\"params\":{\"managementAumFeePercentage\":\"- The new management AUM fee percentage.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"setMustAllowlistLPs(address,bool)\":{\"details\":\"Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and back on again, because this action does not affect the list of LP addresses. Emits the MustAllowlistLPsSet event. This is a permissioned function.\",\"params\":{\"isMustAllowlistLPs\":\"- The new value of the mustAllowlistLPs flag.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"setSwapEnabled(address,bool)\":{\"details\":\"Emits the SwapEnabledSet event. This is a permissioned function.\",\"params\":{\"isSwapEnabled\":\"- The new value of the swap enabled flag.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"setTokenFeed(address,address)\":{\"params\":{\"feed\":\"- Oracle feed address\",\"token\":\"- Token address\"}},\"updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)\":{\"details\":\"The swap fee will change from the given starting value (which may or may not be the current value) to the given ending fee percentage, over startTime to endTime. Note that calling this with a starting swap fee different from the current value will immediately change the current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`. Emits the GradualSwapFeeUpdateScheduled event. This is a permissioned function.\",\"params\":{\"endSwapFeePercentage\":\"- The ending value for the swap fee change. If the current timestamp >= endTime, `getSwapFeePercentage()` will return this value.\",\"endTime\":\"- The timestamp when the swap fee change will end (must be >= startTime).\",\"poolAddress\":\"- Address of pool being worked on.\",\"startSwapFeePercentage\":\"- The starting value for the swap fee change.\",\"startTime\":\"- The timestamp when the swap fee change will begin.\"}},\"updateWeightsGradually(address,uint256,uint256,address[],uint256[])\":{\"details\":\"The weights will change from their current values to the given endWeights, over startTime to endTime. This is a permissioned function. Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes, the weights always start from their current values. This also guarantees a smooth transition when updateWeightsGradually is called during an ongoing weight change.\",\"params\":{\"endTime\":\"- The timestamp when the weight change will end (can be >= startTime).\",\"endWeights\":\"- The target weights. If the current timestamp >= endTime, `getNormalizedWeights()` will return these values.\",\"poolAddress\":\"- Address of pool being worked on.\",\"startTime\":\"- The timestamp when the weight change will begin.\",\"tokens\":\"- The tokens associated with the target weights (must match the current pool tokens).\"}},\"withdrawFunds(address,address,uint256)\":{\"details\":\"Transfers an amount of an ERC20 token\",\"params\":{\"amount\":\"- Amount to withdraw.\",\"recipientAddress\":\"- Address of wallet receiving funds.\",\"tokenAddress\":\"- Address of token to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedAddress(address,address)\":{\"notice\":\"Adds an address to the LP allowlist.\"},\"addManager(address)\":{\"notice\":\"Add a new manager to the collection of managers\"},\"addToken(address,address,address,uint256,uint256,address)\":{\"notice\":\"Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\"},\"calculateBalancing(address)\":{\"notice\":\"Calculates a number of tokens to add or remove to rebalance pricing\"},\"collectAumManagementFees(address)\":{\"notice\":\"Collect any accrued AUM fees and send them to the pool manager.\"},\"constructor\":{\"notice\":\"Constructor for the controller base class\"},\"createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256,uint256,bytes32)\":{\"notice\":\"Create a new managed pool\"},\"depositTokens(uint256,address)\":{\"notice\":\"Deposit tokens to controller\"},\"getPoolId(address)\":{\"notice\":\"Returns the pools Id\"},\"getPoolsUnderManagement()\":{\"notice\":\"returns a list of pools under management by this controller\"},\"getSwapEnabled(address)\":{\"notice\":\"Returns the whether swapping is enabled for pool\"},\"getTokenPrice(address)\":{\"notice\":\"returns the oracle supplied price for the requested token\"},\"pause()\":{\"notice\":\"Pause sensitive functions\"},\"removeAllowedAddress(address,address)\":{\"notice\":\"Removes an address from the _poolAddress - Address of pool being worked on.\"},\"removeManager(address)\":{\"notice\":\"Remove a manager to the collection of managers\"},\"removeToken(address,address,uint256,address)\":{\"notice\":\"Removes a token from the Pool's list of tradeable tokens.\"},\"setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])\":{\"notice\":\"Set a circuit breaker for one or more tokens.\"},\"setJoinExitEnabled(address,bool)\":{\"notice\":\"Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\"},\"setManagementAumFeePercentage(address,uint256)\":{\"notice\":\"Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\"},\"setMustAllowlistLPs(address,bool)\":{\"notice\":\"Enable or disable the LP allowlist.\"},\"setSwapEnabled(address,bool)\":{\"notice\":\"Enable or disable trading.\"},\"setTokenFeed(address,address)\":{\"notice\":\"Set a new token oracle feed\"},\"unpause()\":{\"notice\":\"Unpause sensitive functions\"},\"updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Schedule a gradual swap fee update.\"},\"updateWeightsGradually(address,uint256,uint256,address[],uint256[])\":{\"notice\":\"Schedule a gradual weight change.\"},\"withdrawFunds(address,address,uint256)\":{\"notice\":\"Withdraw tokens from controller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/base/BaseController.sol\":\"BaseController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/interfaces/contracts/pool-utils/IManagedPool.sol\":{\"keccak256\":\"0x56d3016ce96ac3d0514f07aee1bcbcdf069513376567deb97449ba4c15b538fd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c03f7874e2ea92eb421119fa15c430c4f0e03208b9f85d9d6f80abb8e750aa63\",\"dweb:/ipfs/QmU3dDVen2wRyQxhpwwfCrJSB6mSYobcPPAxKV6BiSNSNc\"]},\"@balancer-labs/interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/interfaces/contracts/vault/IBasePool.sol\":{\"keccak256\":\"0x4673e08f6b8e76ffa89155d704a0682a6a98e3c60ca5f28e0c4b964f26b65dbe\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://eef030243d480fb6e84943d88c19cfc2b7e17bee800ece7b7be840061f3cc4bb\",\"dweb:/ipfs/QmYCLn4pspMRBdKAhtjc7EjnHQURHrzp844M5722LEbL8D\"]},\"@balancer-labs/interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/interfaces/contracts/vault/IPoolSwapStructs.sol\":{\"keccak256\":\"0xbe4815478a942261e6e2416632342b0e55ff2b0f75c2551ffd79ad9b2326be38\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ccc137d00935cace955e552f238130a01a9468c2d80c725e4625a25debc5c54b\",\"dweb:/ipfs/QmexvRpcaeERPyZt9BzHZViFb8GevhhhoUBQ3wgDqFUwJx\"]},\"@balancer-labs/interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"project:/contracts/base/BaseController.sol\":{\"keccak256\":\"0xe03eb820e806a49b75cfec15fe15f88edd430b4b59901d91507ab21d39d98288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5eae73c782ced8bbebdf1ba4d90ad1af49d136919fb512bc732f624e3398ebb\",\"dweb:/ipfs/QmfD6Z6F59t2sE2hF2cKZiUyxAR6rSMaUz7VNa2ABEfxbm\"]},\"project:/contracts/base/BaseUtils.sol\":{\"keccak256\":\"0x8cd4b46672f50e83ffc279d9ce685dad4bbd92a3fb11c8076ceed7b3456c055e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dd64bf9460b2324d89834c1d6a675f46d3d8303a5467c73421a052ae0834aa7\",\"dweb:/ipfs/QmSNgiwN391NVVAMaVphwAYLvFy8eNfoBp1qbNWUJqwJr6\"]},\"project:/contracts/lib/ManagedPoolFactory.sol\":{\"keccak256\":\"0xaa78c53675853e1215da847428dbd0dd45c00e15b85e43b9fd91a679a70b00f0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c3e86e23aba79a29460bf221b28842e46efdb28e2969391744561c2b6717bd74\",\"dweb:/ipfs/QmbB4V3o6aW9SbM1UzmKtAVFHqAWMPLEptbPP7yhdEp8vi\"]},\"project:/contracts/lib/SupportLib.sol\":{\"keccak256\":\"0x2bad74671912d307c81017c44ceba0dc63711e452c5f661d1452681076a18acf\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://8efe73eca7324c4584aa2fab8701dae20e4814aa1cbe7a6e3c9ef1f82c169e89\",\"dweb:/ipfs/QmZP554TjhcQca3h6mh78mG92c8haxKjzhxM8gehTBXTYM\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../lib/ManagedPoolFactory.sol\";\nimport \"./BaseUtils.sol\";\n\nabstract contract BaseController is BaseUtils {\n    ManagedPoolFactory public immutable managedPoolFactory;\n    address [] private _poolsUnderManagement;\n\n    /**\n     * @notice Constructor for the controller base class\n     *\n     * @param vaultAddress - Vault contract address\n     * @param supportedManagedPoolFactory - Managed pool contract address\n     */\n    constructor(address vaultAddress, address supportedManagedPoolFactory)\n    BaseUtils(vaultAddress) {\n        managedPoolFactory = ManagedPoolFactory(supportedManagedPoolFactory);\n    }\n\n    /**\n     * @notice Create a new managed pool\n     *\n     * @param name - Pool name\n     * @param symbol - Symbol representing the pool\n     * @param tokens - Tokens in the pool\n     * @param normalizedWeights - Normalized weights in the pool\n     * @param assetManagers - Asset manager for the pool\n     * @param swapFeePercentage - Fee applied to swaps\n     * @param isSwapEnabledOnStart - Whether swaps are enabled straight away\n     * @param isMustAllowlistLPs - List of LP's allowed in the pool\n     * @param managementAumFeePercentage - Management Aum fee to apply\n     * @param aumFeeId - Aum Fee Id\n     * @param tolerance - Percentage devience \n     * @param salt - Salt used towards calculating pool address\n     */\n    function createPool(\n        string memory name,\n        string memory symbol,\n        IERC20 [] memory tokens,\n        uint256 [] memory normalizedWeights,\n        address [] memory assetManagers,\n        uint256 swapFeePercentage,\n        bool isSwapEnabledOnStart,\n        bool isMustAllowlistLPs,\n        uint256 managementAumFeePercentage,\n        uint256 aumFeeId,\n        uint256 tolerance,\n        bytes32 salt\n    ) external onlyManager nonReentrant {\n        ManagedPoolParams memory poolParams;\n        poolParams.name = name;\n        poolParams.symbol = symbol;\n        poolParams.assetManagers = assetManagers;\n\n        ManagedPoolSettingsParams memory poolSettingsParams;\n        poolSettingsParams.tokens = tokens;\n        poolSettingsParams.normalizedWeights = normalizedWeights;\n        poolSettingsParams.swapFeePercentage = swapFeePercentage;\n        poolSettingsParams.isSwapEnabledOnStart = isSwapEnabledOnStart;\n        poolSettingsParams.isMustAllowlistLPs = isMustAllowlistLPs;\n        poolSettingsParams.managementAumFeePercentage = managementAumFeePercentage;\n        poolSettingsParams.aumFeeId = aumFeeId;\n\n        address poolAddress = managedPoolFactory.create(\n            poolParams,\n            poolSettingsParams,\n            address(this),\n            salt\n        );\n        _poolsUnderManagement.push(poolAddress);\n\n        managedPools [poolAddress].poolName = name;\n        managedPools [poolAddress].poolSymbol = symbol;\n        managedPools [poolAddress].tolerance = tolerance;\n        managedPools [poolAddress].poolTokens = tokens;\n    }\n\n    /**\n     * @notice returns a list of pools under management by this controller\n     *\n     */\n    function getPoolsUnderManagement() public view returns (address [] memory) {\n        return _poolsUnderManagement;\n    }\n\n    /**\n     * @notice Schedule a gradual swap fee update.\n     * @dev The swap fee will change from the given starting value (which may or may not be the current\n     * value) to the given ending fee percentage, over startTime to endTime.\n     *\n     * Note that calling this with a starting swap fee different from the current value will immediately change the\n     * current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`.\n     * Emits the GradualSwapFeeUpdateScheduled event.\n     * This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param startTime - The timestamp when the swap fee change will begin.\n     * @param endTime - The timestamp when the swap fee change will end (must be >= startTime).\n     * @param startSwapFeePercentage - The starting value for the swap fee change.\n     * @param endSwapFeePercentage - The ending value for the swap fee change. If the current timestamp >= endTime,\n     * `getSwapFeePercentage()` will return this value.\n     */\n    function updateSwapFeeGradually(\n        address poolAddress,\n        uint256 startTime,\n        uint256 endTime,\n        uint256 startSwapFeePercentage,\n        uint256 endSwapFeePercentage\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.updateSwapFeeGradually(\n            startTime,\n            endTime,\n            startSwapFeePercentage,\n            endSwapFeePercentage\n        );\n    }\n\n    /**\n     * @notice Schedule a gradual weight change.\n     * @dev The weights will change from their current values to the given endWeights, over startTime to endTime.\n     * This is a permissioned function.\n     *\n     * Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes,\n     * the weights always start from their current values. This also guarantees a smooth transition when\n     * updateWeightsGradually is called during an ongoing weight change.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param startTime - The timestamp when the weight change will begin.\n     * @param endTime - The timestamp when the weight change will end (can be >= startTime).\n     * @param tokens - The tokens associated with the target weights (must match the current pool tokens).\n     * @param endWeights - The target weights. If the current timestamp >= endTime, `getNormalizedWeights()`\n     * will return these values.\n     */\n    function updateWeightsGradually(\n        address poolAddress,\n        uint256 startTime,\n        uint256 endTime,\n        IERC20 [] memory tokens,\n        uint256 [] memory endWeights\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.updateWeightsGradually(\n            startTime,\n            endTime,\n            tokens,\n            endWeights\n        );\n    }\n\n    /**\n     * @notice Returns the pools Id\n     *\n     * @param poolAddress - Pool to get the Id for\n     */\n    function getPoolId(address poolAddress) public view returns (bytes32) {\n        return IManagedPool(poolAddress).getPoolId();\n    }\n\n    /**\n     * @notice Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\n     * @dev Emits the JoinExitEnabledSet event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param isJoinExitEnabled - The new value of the join/exit enabled flag.\n     */\n    function setJoinExitEnabled(\n        address poolAddress,\n        bool isJoinExitEnabled\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setJoinExitEnabled(isJoinExitEnabled);\n    }\n\n    /**\n     * @notice Returns the whether swapping is enabled for pool\n     *\n     * @param poolAddress - Pool to get the swap state for\n     */\n    function getSwapEnabled(address poolAddress) external view returns (bool) {\n        return IManagedPool(poolAddress).getSwapEnabled();\n    }\n\n    /**\n     * @notice Enable or disable trading.\n     * @dev Emits the SwapEnabledSet event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param isSwapEnabled - The new value of the swap enabled flag.\n     */\n    function setSwapEnabled(\n        address poolAddress,\n        bool isSwapEnabled\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setSwapEnabled(isSwapEnabled);\n    }\n\n    /**\n     * @notice Enable or disable the LP allowlist.\n     * @dev Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and\n     * back on again, because this action does not affect the list of LP addresses.\n     * Emits the MustAllowlistLPsSet event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param isMustAllowlistLPs - The new value of the mustAllowlistLPs flag.\n     */\n    function setMustAllowlistLPs(\n        address poolAddress,\n        bool isMustAllowlistLPs\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setMustAllowlistLPs(isMustAllowlistLPs);\n    }\n\n    /**\n     * @notice Adds an address to the LP allowlist.\n     * @dev Will fail if the address is already allowlisted.\n     * Emits the AllowlistAddressAdded event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param member - The address to be added to the allowlist.\n     */\n    function addAllowedAddress(\n        address poolAddress,\n        address member\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.addAllowedAddress(member);\n    }\n\n    /**\n     * @notice Removes an address from the _poolAddress - Address of pool being worked on.\n     *\n     * @param poolAddress - Pool address being worked on\n     * @param member - The address to be removed from the allowlist.\n     */\n    function removeAllowedAddress(\n        address poolAddress,\n        address member\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.removeAllowedAddress(member);\n    }\n\n    /**\n     * @notice Collect any accrued AUM fees and send them to the pool manager.\n     * @dev This can be called by anyone to collect accrued AUM fees - and will be called automatically\n     * whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee\n     * percentage is changed by the manager, to prevent fees from being applied retroactively.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     */\n    function collectAumManagementFees(\n        address poolAddress\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.collectAumManagementFees();\n    }\n\n    /**\n     * @notice Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\n     * @dev Attempting to collect AUM fees in excess of the maximum permitted percentage will revert.\n     * To avoid retroactive fee increases, we force collection at the current fee percentage before processing\n     * the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param managementAumFeePercentage - The new management AUM fee percentage.\n     */\n    function setManagementAumFeePercentage(\n        address poolAddress,\n        uint256 managementAumFeePercentage\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setManagementAumFeePercentage(managementAumFeePercentage);\n    }\n\n    /**\n     * @notice Set a circuit breaker for one or more tokens.\n     * @dev This is a permissioned function. The lower and upper bounds are percentages, corresponding to a\n     * relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent\n     * trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\n     *\n     * @param poolAddress - Pool to have a circruit breaker set\n     * @param tokens - Tokens in the pool\n     * @param bptPrices - Token prices to for the circuit breaker\n     * @param lowerBoundPercentages - The lower limit to trigger the circuit breaker\n     * @param upperBoundPercentages - The upper limit to trigger the circuit breaker\n     */\n    function setCircuitBreakers(\n        address poolAddress,\n        IERC20 [] memory tokens,\n        uint256 [] memory bptPrices,\n        uint256 [] memory lowerBoundPercentages,\n        uint256 [] memory upperBoundPercentages\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setCircuitBreakers(\n            tokens,\n            bptPrices,\n            lowerBoundPercentages,\n            upperBoundPercentages\n        );\n    }\n\n    /**\n     * @notice Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\n     *\n     * @dev By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new\n     * token will have no balance - it is up to the owner to provide some immediately after calling this function.\n     * Note however that regular join functions will not work while the new token has no balance: the only way to\n     * deposit an initial amount is by using an Asset Manager.\n     *\n     * Token addition is forbidden during a weight change, or if one is scheduled to happen in the future.\n     *\n     * The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be\n     * useful in some scenarios to account for the fact that the Pool will have more tokens.\n     *\n     * Emits the TokenAdded event.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param tokenToAdd - The ERC20 token to be added to the Pool.\n     * @param assetManager - The Asset Manager for the token.\n     * @param tokenToAddNormalizedWeight - The normalized weight of `token` relative to the other tokens in the Pool.\n     * @param mintAmount - The amount of BPT to be minted as a result of adding `token` to the Pool.\n     * @param recipient - The address to receive the BPT minted by the Pool.\n     */\n    function addToken(\n        address poolAddress,\n        IERC20 tokenToAdd,\n        address assetManager,\n        uint256 tokenToAddNormalizedWeight,\n        uint256 mintAmount,\n        address recipient\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.addToken(\n            tokenToAdd,\n            assetManager,\n            tokenToAddNormalizedWeight,\n            mintAmount,\n            recipient\n        );\n    }\n\n    /**\n     * @notice Removes a token from the Pool's list of tradeable tokens.\n     * @dev Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not\n     * including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in\n     * the future.\n     *\n     * Emits the TokenRemoved event. This is a permissioned function.\n     *\n     * The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful\n     * in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param tokenToRemove - The ERC20 token to be removed from the Pool.\n     * @param burnAmount - The amount of BPT to be burned after removing `token` from the Pool.\n     * @param sender - The address to burn BPT from.\n     */\n    function removeToken(\n        address poolAddress,\n        IERC20 tokenToRemove,\n        uint256 burnAmount,\n        address sender\n    ) external onlyManager nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.removeToken(tokenToRemove, burnAmount, sender);\n    }\n\n    /**\n     * @notice Withdraw tokens from controller\n     * @dev Transfers an amount of an ERC20 token\n     *\n     * @param recipientAddress - Address of wallet receiving funds.\n     * @param tokenAddress - Address of token to be withdrawn.\n     * @param amount - Amount to withdraw.\n     */\n    function withdrawFunds(\n        address recipientAddress,\n        address tokenAddress,\n        uint256 amount\n    ) external onlyManager nonReentrant {\n        IERC20 _token = IERC20(tokenAddress);\n        _token.transfer(recipientAddress, amount);\n    }\n\n    /**\n     * @notice Deposit tokens to controller\n     * @dev Transfers an amount of an ERC20 token\n     *\n     * @param amount - Amount to deposit.\n     * @param tokenAddress - Address of token to be deposited.\n     */\n    function depositTokens(\n        uint amount,\n        address tokenAddress\n    ) external onlyManager nonReentrant checkAllowance(amount, tokenAddress) {\n        IERC20 token = IERC20(tokenAddress);\n        token.transferFrom(msg.sender, address(this), amount);\n    }\n}\n",
  "sourcePath": "/home/eagle/Source/BalancerController/Balancer.Controller/contracts/base/BaseController.sol",
  "ast": {
    "absolutePath": "project:/contracts/base/BaseController.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1245
      ],
      "BaseController": [
        3690
      ],
      "BaseUtils": [
        4278
      ],
      "Context": [
        1440
      ],
      "IAsset": [
        430
      ],
      "IAuthentication": [
        296
      ],
      "IAuthorizer": [
        445
      ],
      "IBasePool": [
        569
      ],
      "IERC20": [
        426
      ],
      "IFlashLoanRecipient": [
        589
      ],
      "IManagedPool": [
        285
      ],
      "IPoolSwapStructs": [
        617
      ],
      "IProtocolFeesCollector": [
        686
      ],
      "ISignaturesValidator": [
        314
      ],
      "ITemporarilyPausable": [
        333
      ],
      "IVault": [
        1199
      ],
      "IWETH": [
        348
      ],
      "ManagedPoolFactory": [
        5191
      ],
      "ManagedPoolParams": [
        5199
      ],
      "ManagedPoolSettingsParams": [
        5217
      ],
      "Pausable": [
        1353
      ],
      "PoolAdjustments": [
        3719
      ],
      "PoolSettings": [
        3712
      ],
      "ReentrancyGuard": [
        1418
      ],
      "SafeMath": [
        1752
      ],
      "SupportLib": [
        5462
      ]
    },
    "id": 3691,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3004,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "absolutePath": "project:/contracts/lib/ManagedPoolFactory.sol",
        "file": "../lib/ManagedPoolFactory.sol",
        "id": 3005,
        "nodeType": "ImportDirective",
        "scope": 3691,
        "sourceUnit": 5218,
        "src": "58:39:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/base/BaseUtils.sol",
        "file": "./BaseUtils.sol",
        "id": 3006,
        "nodeType": "ImportDirective",
        "scope": 3691,
        "sourceUnit": 4279,
        "src": "98:25:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 3007,
              "name": "BaseUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4278,
              "src": "161:9:22"
            },
            "id": 3008,
            "nodeType": "InheritanceSpecifier",
            "src": "161:9:22"
          }
        ],
        "contractDependencies": [
          1353,
          1418,
          1440,
          4278
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3690,
        "linearizedBaseContracts": [
          3690,
          4278,
          1353,
          1440,
          1418
        ],
        "name": "BaseController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d4f25a4b",
            "id": 3011,
            "mutability": "immutable",
            "name": "managedPoolFactory",
            "nodeType": "VariableDeclaration",
            "scope": 3690,
            "src": "177:54:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ManagedPoolFactory_$5191",
              "typeString": "contract ManagedPoolFactory"
            },
            "typeName": {
              "id": 3010,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3009,
                "name": "ManagedPoolFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5191,
                "src": "177:18:22"
              },
              "referencedDeclaration": 5191,
              "src": "177:18:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ManagedPoolFactory_$5191",
                "typeString": "contract ManagedPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3014,
            "mutability": "mutable",
            "name": "_poolsUnderManagement",
            "nodeType": "VariableDeclaration",
            "scope": 3690,
            "src": "237:40:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3012,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "237:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3013,
              "nodeType": "ArrayTypeName",
              "src": "237:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3031,
              "nodeType": "Block",
              "src": "589:85:22",
              "statements": [
                {
                  "expression": {
                    "id": 3029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3025,
                      "name": "managedPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3011,
                      "src": "599:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ManagedPoolFactory_$5191",
                        "typeString": "contract ManagedPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3027,
                          "name": "supportedManagedPoolFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3019,
                          "src": "639:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3026,
                        "name": "ManagedPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5191,
                        "src": "620:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ManagedPoolFactory_$5191_$",
                          "typeString": "type(contract ManagedPoolFactory)"
                        }
                      },
                      "id": 3028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "620:47:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ManagedPoolFactory_$5191",
                        "typeString": "contract ManagedPoolFactory"
                      }
                    },
                    "src": "599:68:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ManagedPoolFactory_$5191",
                      "typeString": "contract ManagedPoolFactory"
                    }
                  },
                  "id": 3030,
                  "nodeType": "ExpressionStatement",
                  "src": "599:68:22"
                }
              ]
            },
            "documentation": {
              "id": 3015,
              "nodeType": "StructuredDocumentation",
              "src": "284:201:22",
              "text": " @notice Constructor for the controller base class\n @param vaultAddress - Vault contract address\n @param supportedManagedPoolFactory - Managed pool contract address"
            },
            "id": 3032,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3022,
                    "name": "vaultAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3017,
                    "src": "575:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3023,
                "modifierName": {
                  "id": 3021,
                  "name": "BaseUtils",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4278,
                  "src": "565:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "565:23:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3017,
                  "mutability": "mutable",
                  "name": "vaultAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3032,
                  "src": "502:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3019,
                  "mutability": "mutable",
                  "name": "supportedManagedPoolFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 3032,
                  "src": "524:35:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "501:59:22"
            },
            "returnParameters": {
              "id": 3024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "589:0:22"
            },
            "scope": 3690,
            "src": "490:184:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3183,
              "nodeType": "Block",
              "src": "1868:1121:22",
              "statements": [
                {
                  "assignments": [
                    3070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3070,
                      "mutability": "mutable",
                      "name": "poolParams",
                      "nodeType": "VariableDeclaration",
                      "scope": 3183,
                      "src": "1878:35:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ManagedPoolParams_$5199_memory_ptr",
                        "typeString": "struct ManagedPoolParams"
                      },
                      "typeName": {
                        "id": 3069,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3068,
                          "name": "ManagedPoolParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5199,
                          "src": "1878:17:22"
                        },
                        "referencedDeclaration": 5199,
                        "src": "1878:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$5199_storage_ptr",
                          "typeString": "struct ManagedPoolParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3071,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1878:35:22"
                },
                {
                  "expression": {
                    "id": 3076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3072,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3070,
                        "src": "1923:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$5199_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        }
                      },
                      "id": 3074,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5193,
                      "src": "1923:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3075,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3035,
                      "src": "1941:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1923:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3077,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:22:22"
                },
                {
                  "expression": {
                    "id": 3082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3078,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3070,
                        "src": "1955:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$5199_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        }
                      },
                      "id": 3080,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5195,
                      "src": "1955:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3081,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3037,
                      "src": "1975:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1955:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3083,
                  "nodeType": "ExpressionStatement",
                  "src": "1955:26:22"
                },
                {
                  "expression": {
                    "id": 3088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3084,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3070,
                        "src": "1991:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$5199_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        }
                      },
                      "id": 3086,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "assetManagers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5198,
                      "src": "1991:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3087,
                      "name": "assetManagers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3047,
                      "src": "2018:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "1991:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 3089,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:40:22"
                },
                {
                  "assignments": [
                    3092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3092,
                      "mutability": "mutable",
                      "name": "poolSettingsParams",
                      "nodeType": "VariableDeclaration",
                      "scope": 3183,
                      "src": "2042:51:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                        "typeString": "struct ManagedPoolSettingsParams"
                      },
                      "typeName": {
                        "id": 3091,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3090,
                          "name": "ManagedPoolSettingsParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5217,
                          "src": "2042:25:22"
                        },
                        "referencedDeclaration": 5217,
                        "src": "2042:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_storage_ptr",
                          "typeString": "struct ManagedPoolSettingsParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3093,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2042:51:22"
                },
                {
                  "expression": {
                    "id": 3098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3094,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "2103:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 3096,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5203,
                      "src": "2103:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3097,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "2131:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "2103:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 3099,
                  "nodeType": "ExpressionStatement",
                  "src": "2103:34:22"
                },
                {
                  "expression": {
                    "id": 3104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3100,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "2147:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 3102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "normalizedWeights",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5206,
                      "src": "2147:36:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3103,
                      "name": "normalizedWeights",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3044,
                      "src": "2186:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2147:56:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 3105,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:56:22"
                },
                {
                  "expression": {
                    "id": 3110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3106,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "2213:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 3108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "swapFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5208,
                      "src": "2213:36:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3109,
                      "name": "swapFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3049,
                      "src": "2252:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2213:56:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3111,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:56:22"
                },
                {
                  "expression": {
                    "id": 3116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3112,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "2279:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 3114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isSwapEnabledOnStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5210,
                      "src": "2279:39:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3115,
                      "name": "isSwapEnabledOnStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3051,
                      "src": "2321:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2279:62:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3117,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:62:22"
                },
                {
                  "expression": {
                    "id": 3122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3118,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "2351:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 3120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMustAllowlistLPs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5212,
                      "src": "2351:37:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3121,
                      "name": "isMustAllowlistLPs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3053,
                      "src": "2391:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2351:58:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3123,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:58:22"
                },
                {
                  "expression": {
                    "id": 3128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3124,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "2419:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 3126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "managementAumFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5214,
                      "src": "2419:45:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3127,
                      "name": "managementAumFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3055,
                      "src": "2467:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2419:74:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3129,
                  "nodeType": "ExpressionStatement",
                  "src": "2419:74:22"
                },
                {
                  "expression": {
                    "id": 3134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3130,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "2503:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 3132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "aumFeeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5216,
                      "src": "2503:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3133,
                      "name": "aumFeeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3057,
                      "src": "2533:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2503:38:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3135,
                  "nodeType": "ExpressionStatement",
                  "src": "2503:38:22"
                },
                {
                  "assignments": [
                    3137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3137,
                      "mutability": "mutable",
                      "name": "poolAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 3183,
                      "src": "2552:19:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3136,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2552:7:22",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3148,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3140,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3070,
                        "src": "2613:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$5199_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        }
                      },
                      {
                        "id": 3141,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3092,
                        "src": "2637:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3144,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2677:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseController_$3690",
                              "typeString": "contract BaseController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseController_$3690",
                              "typeString": "contract BaseController"
                            }
                          ],
                          "id": 3143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2669:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3142,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2669:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2669:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3146,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3061,
                        "src": "2696:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$5199_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3138,
                        "name": "managedPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3011,
                        "src": "2574:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ManagedPoolFactory_$5191",
                          "typeString": "contract ManagedPoolFactory"
                        }
                      },
                      "id": 3139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5114,
                      "src": "2574:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_ManagedPoolParams_$5199_memory_ptr_$_t_struct$_ManagedPoolSettingsParams_$5217_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (struct ManagedPoolParams memory,struct ManagedPoolSettingsParams memory,address,bytes32) external returns (address)"
                      }
                    },
                    "id": 3147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2574:136:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2552:158:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3152,
                        "name": "poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3137,
                        "src": "2747:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3149,
                        "name": "_poolsUnderManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3014,
                        "src": "2720:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2720:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3154,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:39:22"
                },
                {
                  "expression": {
                    "id": 3160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3155,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3734,
                          "src": "2770:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$3712_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 3157,
                        "indexExpression": {
                          "id": 3156,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3137,
                          "src": "2784:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2770:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$3712_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 3158,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "poolName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3703,
                      "src": "2770:35:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3159,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3035,
                      "src": "2808:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2770:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3161,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:42:22"
                },
                {
                  "expression": {
                    "id": 3167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3162,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3734,
                          "src": "2822:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$3712_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 3164,
                        "indexExpression": {
                          "id": 3163,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3137,
                          "src": "2836:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2822:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$3712_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 3165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "poolSymbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3705,
                      "src": "2822:37:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3166,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3037,
                      "src": "2862:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2822:46:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3168,
                  "nodeType": "ExpressionStatement",
                  "src": "2822:46:22"
                },
                {
                  "expression": {
                    "id": 3174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3169,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3734,
                          "src": "2878:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$3712_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 3171,
                        "indexExpression": {
                          "id": 3170,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3137,
                          "src": "2892:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2878:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$3712_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 3172,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tolerance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3707,
                      "src": "2878:36:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3173,
                      "name": "tolerance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3059,
                      "src": "2917:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2878:48:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3175,
                  "nodeType": "ExpressionStatement",
                  "src": "2878:48:22"
                },
                {
                  "expression": {
                    "id": 3181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3176,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3734,
                          "src": "2936:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$3712_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 3178,
                        "indexExpression": {
                          "id": 3177,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3137,
                          "src": "2950:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2936:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$3712_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 3179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "poolTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3711,
                      "src": "2936:37:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage",
                        "typeString": "contract IERC20[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3180,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "2976:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "2936:46:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "id": 3182,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:46:22"
                }
              ]
            },
            "documentation": {
              "id": 3033,
              "nodeType": "StructuredDocumentation",
              "src": "680:724:22",
              "text": " @notice Create a new managed pool\n @param name - Pool name\n @param symbol - Symbol representing the pool\n @param tokens - Tokens in the pool\n @param normalizedWeights - Normalized weights in the pool\n @param assetManagers - Asset manager for the pool\n @param swapFeePercentage - Fee applied to swaps\n @param isSwapEnabledOnStart - Whether swaps are enabled straight away\n @param isMustAllowlistLPs - List of LP's allowed in the pool\n @param managementAumFeePercentage - Management Aum fee to apply\n @param aumFeeId - Aum Fee Id\n @param tolerance - Percentage devience \n @param salt - Salt used towards calculating pool address"
            },
            "functionSelector": "41bfc4bc",
            "id": 3184,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3064,
                "modifierName": {
                  "id": 3063,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "1843:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1843:11:22"
              },
              {
                "id": 3066,
                "modifierName": {
                  "id": 3065,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "1855:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1855:12:22"
              }
            ],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3035,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1438:18:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3034,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3037,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1466:20:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3036,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3041,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1496:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3039,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3038,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "1496:6:22"
                      },
                      "referencedDeclaration": 426,
                      "src": "1496:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 3040,
                    "nodeType": "ArrayTypeName",
                    "src": "1496:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3044,
                  "mutability": "mutable",
                  "name": "normalizedWeights",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1529:35:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3042,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1529:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3043,
                    "nodeType": "ArrayTypeName",
                    "src": "1529:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3047,
                  "mutability": "mutable",
                  "name": "assetManagers",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1574:31:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3045,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1574:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3046,
                    "nodeType": "ArrayTypeName",
                    "src": "1574:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3049,
                  "mutability": "mutable",
                  "name": "swapFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1615:25:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3051,
                  "mutability": "mutable",
                  "name": "isSwapEnabledOnStart",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1650:25:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3050,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3053,
                  "mutability": "mutable",
                  "name": "isMustAllowlistLPs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1685:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3052,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3055,
                  "mutability": "mutable",
                  "name": "managementAumFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1718:34:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3057,
                  "mutability": "mutable",
                  "name": "aumFeeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1762:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3056,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3059,
                  "mutability": "mutable",
                  "name": "tolerance",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1788:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3061,
                  "mutability": "mutable",
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 3184,
                  "src": "1815:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3060,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1428:405:22"
            },
            "returnParameters": {
              "id": 3067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1868:0:22"
            },
            "scope": 3690,
            "src": "1409:1580:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3193,
              "nodeType": "Block",
              "src": "3168:45:22",
              "statements": [
                {
                  "expression": {
                    "id": 3191,
                    "name": "_poolsUnderManagement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3014,
                    "src": "3185:21:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 3190,
                  "id": 3192,
                  "nodeType": "Return",
                  "src": "3178:28:22"
                }
              ]
            },
            "documentation": {
              "id": 3185,
              "nodeType": "StructuredDocumentation",
              "src": "2995:93:22",
              "text": " @notice returns a list of pools under management by this controller"
            },
            "functionSelector": "8722081a",
            "id": 3194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolsUnderManagement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3125:2:22"
            },
            "returnParameters": {
              "id": 3190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3189,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3194,
                  "src": "3149:17:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3187,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3149:7:22",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3188,
                    "nodeType": "ArrayTypeName",
                    "src": "3149:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3148:19:22"
            },
            "scope": 3690,
            "src": "3093:120:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3231,
              "nodeType": "Block",
              "src": "4517:258:22",
              "statements": [
                {
                  "assignments": [
                    3214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3214,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3231,
                      "src": "4527:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3213,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3212,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "4527:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "4527:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3215,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4527:24:22"
                },
                {
                  "expression": {
                    "id": 3220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3216,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3214,
                      "src": "4561:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3218,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3197,
                          "src": "4588:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3217,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "4575:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4575:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "4561:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3221,
                  "nodeType": "ExpressionStatement",
                  "src": "4561:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3225,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3199,
                        "src": "4658:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3226,
                        "name": "endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3201,
                        "src": "4681:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3227,
                        "name": "startSwapFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3203,
                        "src": "4702:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3228,
                        "name": "endSwapFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3205,
                        "src": "4738:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3222,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3214,
                        "src": "4610:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateSwapFeeGradually",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "4610:34:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 3229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4610:158:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3230,
                  "nodeType": "ExpressionStatement",
                  "src": "4610:158:22"
                }
              ]
            },
            "documentation": {
              "id": 3195,
              "nodeType": "StructuredDocumentation",
              "src": "3219:1062:22",
              "text": " @notice Schedule a gradual swap fee update.\n @dev The swap fee will change from the given starting value (which may or may not be the current\n value) to the given ending fee percentage, over startTime to endTime.\n Note that calling this with a starting swap fee different from the current value will immediately change the\n current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`.\n Emits the GradualSwapFeeUpdateScheduled event.\n This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param startTime - The timestamp when the swap fee change will begin.\n @param endTime - The timestamp when the swap fee change will end (must be >= startTime).\n @param startSwapFeePercentage - The starting value for the swap fee change.\n @param endSwapFeePercentage - The ending value for the swap fee change. If the current timestamp >= endTime,\n `getSwapFeePercentage()` will return this value."
            },
            "functionSelector": "875e7cd9",
            "id": 3232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3208,
                "modifierName": {
                  "id": 3207,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "4492:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "4492:11:22"
              },
              {
                "id": 3210,
                "modifierName": {
                  "id": 3209,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "4504:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "4504:12:22"
              }
            ],
            "name": "updateSwapFeeGradually",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3197,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3232,
                  "src": "4327:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4327:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3199,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3232,
                  "src": "4356:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4356:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3201,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3232,
                  "src": "4383:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4383:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3203,
                  "mutability": "mutable",
                  "name": "startSwapFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 3232,
                  "src": "4408:30:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4408:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3205,
                  "mutability": "mutable",
                  "name": "endSwapFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 3232,
                  "src": "4448:28:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4448:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4317:165:22"
            },
            "returnParameters": {
              "id": 3211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4517:0:22"
            },
            "scope": 3690,
            "src": "4286:489:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3272,
              "nodeType": "Block",
              "src": "6002:232:22",
              "statements": [
                {
                  "assignments": [
                    3255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3255,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "6012:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3254,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3253,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "6012:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "6012:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3256,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6012:24:22"
                },
                {
                  "expression": {
                    "id": 3261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3257,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3255,
                      "src": "6046:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3259,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3235,
                          "src": "6073:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3258,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "6060:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6060:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "6046:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3262,
                  "nodeType": "ExpressionStatement",
                  "src": "6046:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3266,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3237,
                        "src": "6143:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3267,
                        "name": "endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3239,
                        "src": "6166:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3268,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3243,
                        "src": "6187:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
                        "id": 3269,
                        "name": "endWeights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3246,
                        "src": "6207:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 3263,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3255,
                        "src": "6095:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateWeightsGradually",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123,
                      "src": "6095:34:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,contract IERC20[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 3270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6095:132:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3271,
                  "nodeType": "ExpressionStatement",
                  "src": "6095:132:22"
                }
              ]
            },
            "documentation": {
              "id": 3233,
              "nodeType": "StructuredDocumentation",
              "src": "4781:992:22",
              "text": " @notice Schedule a gradual weight change.\n @dev The weights will change from their current values to the given endWeights, over startTime to endTime.\n This is a permissioned function.\n Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes,\n the weights always start from their current values. This also guarantees a smooth transition when\n updateWeightsGradually is called during an ongoing weight change.\n @param poolAddress - Address of pool being worked on.\n @param startTime - The timestamp when the weight change will begin.\n @param endTime - The timestamp when the weight change will end (can be >= startTime).\n @param tokens - The tokens associated with the target weights (must match the current pool tokens).\n @param endWeights - The target weights. If the current timestamp >= endTime, `getNormalizedWeights()`\n will return these values."
            },
            "functionSelector": "c90d3a04",
            "id": 3273,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3249,
                "modifierName": {
                  "id": 3248,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "5977:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5977:11:22"
              },
              {
                "id": 3251,
                "modifierName": {
                  "id": 3250,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "5989:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "5989:12:22"
              }
            ],
            "name": "updateWeightsGradually",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3235,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "5819:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5819:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3237,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "5848:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5848:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3239,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "5875:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5875:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3243,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "5900:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3241,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3240,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "5900:6:22"
                      },
                      "referencedDeclaration": 426,
                      "src": "5900:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 3242,
                    "nodeType": "ArrayTypeName",
                    "src": "5900:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3246,
                  "mutability": "mutable",
                  "name": "endWeights",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "5933:28:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3244,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5933:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3245,
                    "nodeType": "ArrayTypeName",
                    "src": "5933:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5809:158:22"
            },
            "returnParameters": {
              "id": 3252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6002:0:22"
            },
            "scope": 3690,
            "src": "5778:456:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3287,
              "nodeType": "Block",
              "src": "6420:61:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3282,
                            "name": "poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3276,
                            "src": "6450:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3281,
                          "name": "IManagedPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "6437:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                            "typeString": "type(contract IManagedPool)"
                          }
                        },
                        "id": 3283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6437:25:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPoolId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 509,
                      "src": "6437:35:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 3285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6437:37:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3280,
                  "id": 3286,
                  "nodeType": "Return",
                  "src": "6430:44:22"
                }
              ]
            },
            "documentation": {
              "id": 3274,
              "nodeType": "StructuredDocumentation",
              "src": "6240:105:22",
              "text": " @notice Returns the pools Id\n @param poolAddress - Pool to get the Id for"
            },
            "functionSelector": "caa9a08d",
            "id": 3288,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3276,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3288,
                  "src": "6369:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6369:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6368:21:22"
            },
            "returnParameters": {
              "id": 3280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3279,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3288,
                  "src": "6411:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3278,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6411:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6410:9:22"
            },
            "scope": 3690,
            "src": "6350:131:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3316,
              "nodeType": "Block",
              "src": "6962:149:22",
              "statements": [
                {
                  "assignments": [
                    3302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3302,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3316,
                      "src": "6972:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3301,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3300,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "6972:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "6972:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3303,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6972:24:22"
                },
                {
                  "expression": {
                    "id": 3308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3304,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3302,
                      "src": "7006:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3306,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3291,
                          "src": "7033:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3305,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "7020:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7020:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "7006:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3309,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3313,
                        "name": "isJoinExitEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3293,
                        "src": "7086:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3310,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "7055:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setJoinExitEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 150,
                      "src": "7055:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 3314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7055:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3315,
                  "nodeType": "ExpressionStatement",
                  "src": "7055:49:22"
                }
              ]
            },
            "documentation": {
              "id": 3289,
              "nodeType": "StructuredDocumentation",
              "src": "6487:341:22",
              "text": " @notice Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\n @dev Emits the JoinExitEnabledSet event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param isJoinExitEnabled - The new value of the join/exit enabled flag."
            },
            "functionSelector": "556f1eb9",
            "id": 3317,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3296,
                "modifierName": {
                  "id": 3295,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "6937:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "6937:11:22"
              },
              {
                "id": 3298,
                "modifierName": {
                  "id": 3297,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "6949:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "6949:12:22"
              }
            ],
            "name": "setJoinExitEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3291,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3317,
                  "src": "6870:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6870:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3293,
                  "mutability": "mutable",
                  "name": "isJoinExitEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3317,
                  "src": "6899:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3292,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6899:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6860:67:22"
            },
            "returnParameters": {
              "id": 3299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6962:0:22"
            },
            "scope": 3690,
            "src": "6833:278:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3331,
              "nodeType": "Block",
              "src": "7337:66:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3326,
                            "name": "poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3320,
                            "src": "7367:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3325,
                          "name": "IManagedPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "7354:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                            "typeString": "type(contract IManagedPool)"
                          }
                        },
                        "id": 3327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7354:25:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 168,
                      "src": "7354:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 3329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7354:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3324,
                  "id": 3330,
                  "nodeType": "Return",
                  "src": "7347:49:22"
                }
              ]
            },
            "documentation": {
              "id": 3318,
              "nodeType": "StructuredDocumentation",
              "src": "7117:141:22",
              "text": " @notice Returns the whether swapping is enabled for pool\n @param poolAddress - Pool to get the swap state for"
            },
            "functionSelector": "315fa765",
            "id": 3332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3320,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3332,
                  "src": "7287:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7286:21:22"
            },
            "returnParameters": {
              "id": 3324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3323,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3332,
                  "src": "7331:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3322,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7331:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7330:6:22"
            },
            "scope": 3690,
            "src": "7263:140:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3360,
              "nodeType": "Block",
              "src": "7803:141:22",
              "statements": [
                {
                  "assignments": [
                    3346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3346,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3360,
                      "src": "7813:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3345,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3344,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "7813:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "7813:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3347,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7813:24:22"
                },
                {
                  "expression": {
                    "id": 3352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3348,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3346,
                      "src": "7847:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3350,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3335,
                          "src": "7874:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3349,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "7861:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7861:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "7847:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3353,
                  "nodeType": "ExpressionStatement",
                  "src": "7847:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3357,
                        "name": "isSwapEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3337,
                        "src": "7923:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3354,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3346,
                        "src": "7896:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 162,
                      "src": "7896:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 3358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7896:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3359,
                  "nodeType": "ExpressionStatement",
                  "src": "7896:41:22"
                }
              ]
            },
            "documentation": {
              "id": 3333,
              "nodeType": "StructuredDocumentation",
              "src": "7409:268:22",
              "text": " @notice Enable or disable trading.\n @dev Emits the SwapEnabledSet event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param isSwapEnabled - The new value of the swap enabled flag."
            },
            "functionSelector": "51d48cea",
            "id": 3361,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3340,
                "modifierName": {
                  "id": 3339,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "7778:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7778:11:22"
              },
              {
                "id": 3342,
                "modifierName": {
                  "id": 3341,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "7790:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "7790:12:22"
              }
            ],
            "name": "setSwapEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3335,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "7715:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7715:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3337,
                  "mutability": "mutable",
                  "name": "isSwapEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "7744:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3336,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7744:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7705:63:22"
            },
            "returnParameters": {
              "id": 3343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7803:0:22"
            },
            "scope": 3690,
            "src": "7682:262:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3389,
              "nodeType": "Block",
              "src": "8568:151:22",
              "statements": [
                {
                  "assignments": [
                    3375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3375,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3389,
                      "src": "8578:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3374,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3373,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "8578:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "8578:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3376,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8578:24:22"
                },
                {
                  "expression": {
                    "id": 3381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3377,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3375,
                      "src": "8612:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3379,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3364,
                          "src": "8639:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3378,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "8626:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8626:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "8612:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3382,
                  "nodeType": "ExpressionStatement",
                  "src": "8612:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3386,
                        "name": "isMustAllowlistLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3366,
                        "src": "8693:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 3383,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3375,
                        "src": "8661:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMustAllowlistLPs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "8661:31:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 3387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8661:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3388,
                  "nodeType": "ExpressionStatement",
                  "src": "8661:51:22"
                }
              ]
            },
            "documentation": {
              "id": 3362,
              "nodeType": "StructuredDocumentation",
              "src": "7950:482:22",
              "text": " @notice Enable or disable the LP allowlist.\n @dev Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and\n back on again, because this action does not affect the list of LP addresses.\n Emits the MustAllowlistLPsSet event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param isMustAllowlistLPs - The new value of the mustAllowlistLPs flag."
            },
            "functionSelector": "2abbd3ad",
            "id": 3390,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3369,
                "modifierName": {
                  "id": 3368,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "8543:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "8543:11:22"
              },
              {
                "id": 3371,
                "modifierName": {
                  "id": 3370,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "8555:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "8555:12:22"
              }
            ],
            "name": "setMustAllowlistLPs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3364,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3390,
                  "src": "8475:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8475:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3366,
                  "mutability": "mutable",
                  "name": "isMustAllowlistLPs",
                  "nodeType": "VariableDeclaration",
                  "scope": 3390,
                  "src": "8504:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3365,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8504:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8465:68:22"
            },
            "returnParameters": {
              "id": 3372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8568:0:22"
            },
            "scope": 3690,
            "src": "8437:282:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3418,
              "nodeType": "Block",
              "src": "9186:137:22",
              "statements": [
                {
                  "assignments": [
                    3404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3404,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3418,
                      "src": "9196:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3403,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3402,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "9196:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "9196:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3405,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9196:24:22"
                },
                {
                  "expression": {
                    "id": 3410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3406,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3404,
                      "src": "9230:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3408,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3393,
                          "src": "9257:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3407,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "9244:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9244:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "9230:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3411,
                  "nodeType": "ExpressionStatement",
                  "src": "9230:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3415,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3395,
                        "src": "9309:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3412,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3404,
                        "src": "9279:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAllowedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 180,
                      "src": "9279:29:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9279:37:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3417,
                  "nodeType": "ExpressionStatement",
                  "src": "9279:37:22"
                }
              ]
            },
            "documentation": {
              "id": 3391,
              "nodeType": "StructuredDocumentation",
              "src": "8725:336:22",
              "text": " @notice Adds an address to the LP allowlist.\n @dev Will fail if the address is already allowlisted.\n Emits the AllowlistAddressAdded event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param member - The address to be added to the allowlist."
            },
            "functionSelector": "abd796bf",
            "id": 3419,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3398,
                "modifierName": {
                  "id": 3397,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "9161:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "9161:11:22"
              },
              {
                "id": 3400,
                "modifierName": {
                  "id": 3399,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "9173:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "9173:12:22"
              }
            ],
            "name": "addAllowedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3393,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "9102:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9102:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3395,
                  "mutability": "mutable",
                  "name": "member",
                  "nodeType": "VariableDeclaration",
                  "scope": 3419,
                  "src": "9131:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9131:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9092:59:22"
            },
            "returnParameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9186:0:22"
            },
            "scope": 3690,
            "src": "9066:257:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3447,
              "nodeType": "Block",
              "src": "9692:140:22",
              "statements": [
                {
                  "assignments": [
                    3433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3433,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3447,
                      "src": "9702:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3432,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3431,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "9702:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "9702:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3434,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9702:24:22"
                },
                {
                  "expression": {
                    "id": 3439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3435,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3433,
                      "src": "9736:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3437,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3422,
                          "src": "9763:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3436,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "9750:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9750:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "9736:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3440,
                  "nodeType": "ExpressionStatement",
                  "src": "9736:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3444,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "9818:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3441,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3433,
                        "src": "9785:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAllowedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "9785:32:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9785:40:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3446,
                  "nodeType": "ExpressionStatement",
                  "src": "9785:40:22"
                }
              ]
            },
            "documentation": {
              "id": 3420,
              "nodeType": "StructuredDocumentation",
              "src": "9329:235:22",
              "text": " @notice Removes an address from the _poolAddress - Address of pool being worked on.\n @param poolAddress - Pool address being worked on\n @param member - The address to be removed from the allowlist."
            },
            "functionSelector": "e4444feb",
            "id": 3448,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3427,
                "modifierName": {
                  "id": 3426,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "9667:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "9667:11:22"
              },
              {
                "id": 3429,
                "modifierName": {
                  "id": 3428,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "9679:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "9679:12:22"
              }
            ],
            "name": "removeAllowedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3448,
                  "src": "9608:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9608:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3424,
                  "mutability": "mutable",
                  "name": "member",
                  "nodeType": "VariableDeclaration",
                  "scope": 3448,
                  "src": "9637:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9637:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9598:59:22"
            },
            "returnParameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9692:0:22"
            },
            "scope": 3690,
            "src": "9569:263:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3473,
              "nodeType": "Block",
              "src": "10404:138:22",
              "statements": [
                {
                  "assignments": [
                    3460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3460,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3473,
                      "src": "10414:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3459,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3458,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "10414:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "10414:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3461,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10414:24:22"
                },
                {
                  "expression": {
                    "id": 3466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3462,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3460,
                      "src": "10448:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3464,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3451,
                          "src": "10475:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3463,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "10462:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10462:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "10448:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3467,
                  "nodeType": "ExpressionStatement",
                  "src": "10448:39:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3468,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3460,
                        "src": "10497:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collectAumManagementFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 206,
                      "src": "10497:36:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 3471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10497:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3472,
                  "nodeType": "ExpressionStatement",
                  "src": "10497:38:22"
                }
              ]
            },
            "documentation": {
              "id": 3449,
              "nodeType": "StructuredDocumentation",
              "src": "9838:458:22",
              "text": " @notice Collect any accrued AUM fees and send them to the pool manager.\n @dev This can be called by anyone to collect accrued AUM fees - and will be called automatically\n whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee\n percentage is changed by the manager, to prevent fees from being applied retroactively.\n @param poolAddress - Address of pool being worked on."
            },
            "functionSelector": "404ac21e",
            "id": 3474,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3454,
                "modifierName": {
                  "id": 3453,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "10379:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "10379:11:22"
              },
              {
                "id": 3456,
                "modifierName": {
                  "id": 3455,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "10391:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "10391:12:22"
              }
            ],
            "name": "collectAumManagementFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3451,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3474,
                  "src": "10344:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10344:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10334:35:22"
            },
            "returnParameters": {
              "id": 3457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10404:0:22"
            },
            "scope": 3690,
            "src": "10301:241:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3502,
              "nodeType": "Block",
              "src": "11288:169:22",
              "statements": [
                {
                  "assignments": [
                    3488
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3488,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3502,
                      "src": "11298:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3487,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3486,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "11298:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "11298:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3489,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11298:24:22"
                },
                {
                  "expression": {
                    "id": 3494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3490,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3488,
                      "src": "11332:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3492,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3477,
                          "src": "11359:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3491,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "11346:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11346:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "11332:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3495,
                  "nodeType": "ExpressionStatement",
                  "src": "11332:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3499,
                        "name": "managementAumFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3479,
                        "src": "11423:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3496,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3488,
                        "src": "11381:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setManagementAumFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 214,
                      "src": "11381:41:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 3500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11381:69:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3501,
                  "nodeType": "ExpressionStatement",
                  "src": "11381:69:22"
                }
              ]
            },
            "documentation": {
              "id": 3475,
              "nodeType": "StructuredDocumentation",
              "src": "10548:583:22",
              "text": " @notice Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\n @dev Attempting to collect AUM fees in excess of the maximum permitted percentage will revert.\n To avoid retroactive fee increases, we force collection at the current fee percentage before processing\n the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param managementAumFeePercentage - The new management AUM fee percentage."
            },
            "functionSelector": "42da1cb1",
            "id": 3503,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3482,
                "modifierName": {
                  "id": 3481,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "11263:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "11263:11:22"
              },
              {
                "id": 3484,
                "modifierName": {
                  "id": 3483,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "11275:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "11275:12:22"
              }
            ],
            "name": "setManagementAumFeePercentage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3477,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3503,
                  "src": "11184:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11184:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3479,
                  "mutability": "mutable",
                  "name": "managementAumFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 3503,
                  "src": "11213:34:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11213:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11174:79:22"
            },
            "returnParameters": {
              "id": 3485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11288:0:22"
            },
            "scope": 3690,
            "src": "11136:321:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3545,
              "nodeType": "Block",
              "src": "12479:253:22",
              "statements": [
                {
                  "assignments": [
                    3528
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3528,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3545,
                      "src": "12489:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3527,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3526,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "12489:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "12489:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3529,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12489:24:22"
                },
                {
                  "expression": {
                    "id": 3534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3530,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3528,
                      "src": "12523:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3532,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3506,
                          "src": "12550:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3531,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "12537:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12537:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "12523:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3535,
                  "nodeType": "ExpressionStatement",
                  "src": "12523:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3539,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3510,
                        "src": "12616:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
                        "id": 3540,
                        "name": "bptPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3513,
                        "src": "12636:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3541,
                        "name": "lowerBoundPercentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3516,
                        "src": "12659:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 3542,
                        "name": "upperBoundPercentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3519,
                        "src": "12694:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 3536,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3528,
                        "src": "12572:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCircuitBreakers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 239,
                      "src": "12572:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20[] memory,uint256[] memory,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12572:153:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "12572:153:22"
                }
              ]
            },
            "documentation": {
              "id": 3504,
              "nodeType": "StructuredDocumentation",
              "src": "11463:746:22",
              "text": " @notice Set a circuit breaker for one or more tokens.\n @dev This is a permissioned function. The lower and upper bounds are percentages, corresponding to a\n relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent\n trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\n @param poolAddress - Pool to have a circruit breaker set\n @param tokens - Tokens in the pool\n @param bptPrices - Token prices to for the circuit breaker\n @param lowerBoundPercentages - The lower limit to trigger the circuit breaker\n @param upperBoundPercentages - The upper limit to trigger the circuit breaker"
            },
            "functionSelector": "458aa92b",
            "id": 3546,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3522,
                "modifierName": {
                  "id": 3521,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "12454:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "12454:11:22"
              },
              {
                "id": 3524,
                "modifierName": {
                  "id": 3523,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "12466:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "12466:12:22"
              }
            ],
            "name": "setCircuitBreakers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3506,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "12251:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3505,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12251:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3510,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "12280:23:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3508,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3507,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "12280:6:22"
                      },
                      "referencedDeclaration": 426,
                      "src": "12280:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 3509,
                    "nodeType": "ArrayTypeName",
                    "src": "12280:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3513,
                  "mutability": "mutable",
                  "name": "bptPrices",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "12313:27:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3511,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12313:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3512,
                    "nodeType": "ArrayTypeName",
                    "src": "12313:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3516,
                  "mutability": "mutable",
                  "name": "lowerBoundPercentages",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "12350:39:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3514,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12350:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3515,
                    "nodeType": "ArrayTypeName",
                    "src": "12350:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3519,
                  "mutability": "mutable",
                  "name": "upperBoundPercentages",
                  "nodeType": "VariableDeclaration",
                  "scope": 3546,
                  "src": "12399:39:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3517,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12399:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3518,
                    "nodeType": "ArrayTypeName",
                    "src": "12399:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12241:203:22"
            },
            "returnParameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12479:0:22"
            },
            "scope": 3690,
            "src": "12214:518:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3587,
              "nodeType": "Block",
              "src": "14379:267:22",
              "statements": [
                {
                  "assignments": [
                    3569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3569,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3587,
                      "src": "14389:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3568,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3567,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "14389:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "14389:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3570,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14389:24:22"
                },
                {
                  "expression": {
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3571,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3569,
                      "src": "14423:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3573,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3549,
                          "src": "14450:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3572,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "14437:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14437:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "14423:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "14423:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3580,
                        "name": "tokenToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3552,
                        "src": "14506:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 3581,
                        "name": "assetManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3554,
                        "src": "14530:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3582,
                        "name": "tokenToAddNormalizedWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3556,
                        "src": "14556:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3583,
                        "name": "mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3558,
                        "src": "14596:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3584,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3560,
                        "src": "14620:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3577,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3569,
                        "src": "14472:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 273,
                      "src": "14472:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,uint256,address) external"
                      }
                    },
                    "id": 3585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14472:167:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3586,
                  "nodeType": "ExpressionStatement",
                  "src": "14472:167:22"
                }
              ]
            },
            "documentation": {
              "id": 3547,
              "nodeType": "StructuredDocumentation",
              "src": "12738:1393:22",
              "text": " @notice Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\n @dev By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new\n token will have no balance - it is up to the owner to provide some immediately after calling this function.\n Note however that regular join functions will not work while the new token has no balance: the only way to\n deposit an initial amount is by using an Asset Manager.\n Token addition is forbidden during a weight change, or if one is scheduled to happen in the future.\n The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be\n useful in some scenarios to account for the fact that the Pool will have more tokens.\n Emits the TokenAdded event.\n @param poolAddress - Address of pool being worked on.\n @param tokenToAdd - The ERC20 token to be added to the Pool.\n @param assetManager - The Asset Manager for the token.\n @param tokenToAddNormalizedWeight - The normalized weight of `token` relative to the other tokens in the Pool.\n @param mintAmount - The amount of BPT to be minted as a result of adding `token` to the Pool.\n @param recipient - The address to receive the BPT minted by the Pool."
            },
            "functionSelector": "21f1e0cd",
            "id": 3588,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3563,
                "modifierName": {
                  "id": 3562,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "14354:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "14354:11:22"
              },
              {
                "id": 3565,
                "modifierName": {
                  "id": 3564,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "14366:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "14366:12:22"
              }
            ],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3549,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3588,
                  "src": "14163:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14163:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3552,
                  "mutability": "mutable",
                  "name": "tokenToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 3588,
                  "src": "14192:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$426",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3551,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3550,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "14192:6:22"
                    },
                    "referencedDeclaration": 426,
                    "src": "14192:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3554,
                  "mutability": "mutable",
                  "name": "assetManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 3588,
                  "src": "14219:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14219:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3556,
                  "mutability": "mutable",
                  "name": "tokenToAddNormalizedWeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 3588,
                  "src": "14249:34:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14249:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3558,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3588,
                  "src": "14293:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14293:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3560,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3588,
                  "src": "14321:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14321:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14153:191:22"
            },
            "returnParameters": {
              "id": 3566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14379:0:22"
            },
            "scope": 3690,
            "src": "14136:510:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3623,
              "nodeType": "Block",
              "src": "15768:158:22",
              "statements": [
                {
                  "assignments": [
                    3607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3607,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 3623,
                      "src": "15778:24:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 3606,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3605,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "15778:12:22"
                        },
                        "referencedDeclaration": 285,
                        "src": "15778:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3608,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15778:24:22"
                },
                {
                  "expression": {
                    "id": 3613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3609,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3607,
                      "src": "15812:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3611,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3591,
                          "src": "15839:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3610,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "15826:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 3612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15826:25:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "15812:39:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 3614,
                  "nodeType": "ExpressionStatement",
                  "src": "15812:39:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3618,
                        "name": "tokenToRemove",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3594,
                        "src": "15885:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 3619,
                        "name": "burnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3596,
                        "src": "15900:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3620,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3598,
                        "src": "15912:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3615,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3607,
                        "src": "15861:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 3617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 284,
                      "src": "15861:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$426_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,uint256,address) external"
                      }
                    },
                    "id": 3621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15861:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3622,
                  "nodeType": "ExpressionStatement",
                  "src": "15861:58:22"
                }
              ]
            },
            "documentation": {
              "id": 3589,
              "nodeType": "StructuredDocumentation",
              "src": "14652:939:22",
              "text": " @notice Removes a token from the Pool's list of tradeable tokens.\n @dev Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not\n including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in\n the future.\n Emits the TokenRemoved event. This is a permissioned function.\n The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful\n in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param tokenToRemove - The ERC20 token to be removed from the Pool.\n @param burnAmount - The amount of BPT to be burned after removing `token` from the Pool.\n @param sender - The address to burn BPT from."
            },
            "functionSelector": "cbe04b0c",
            "id": 3624,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3601,
                "modifierName": {
                  "id": 3600,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "15743:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "15743:11:22"
              },
              {
                "id": 3603,
                "modifierName": {
                  "id": 3602,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "15755:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "15755:12:22"
              }
            ],
            "name": "removeToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3591,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3624,
                  "src": "15626:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15626:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3594,
                  "mutability": "mutable",
                  "name": "tokenToRemove",
                  "nodeType": "VariableDeclaration",
                  "scope": 3624,
                  "src": "15655:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$426",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 3593,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3592,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "15655:6:22"
                    },
                    "referencedDeclaration": 426,
                    "src": "15655:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3596,
                  "mutability": "mutable",
                  "name": "burnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3624,
                  "src": "15685:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15685:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3598,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 3624,
                  "src": "15713:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15713:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15616:117:22"
            },
            "returnParameters": {
              "id": 3604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15768:0:22"
            },
            "scope": 3690,
            "src": "15596:330:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3652,
              "nodeType": "Block",
              "src": "16377:104:22",
              "statements": [
                {
                  "assignments": [
                    3640
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3640,
                      "mutability": "mutable",
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "scope": 3652,
                      "src": "16387:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3639,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3638,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 426,
                          "src": "16387:6:22"
                        },
                        "referencedDeclaration": 426,
                        "src": "16387:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3644,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3642,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3629,
                        "src": "16410:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3641,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "16403:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16403:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16387:36:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3648,
                        "name": "recipientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3627,
                        "src": "16449:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3649,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3631,
                        "src": "16467:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3645,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3640,
                        "src": "16433:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 375,
                      "src": "16433:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16433:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3651,
                  "nodeType": "ExpressionStatement",
                  "src": "16433:41:22"
                }
              ]
            },
            "documentation": {
              "id": 3625,
              "nodeType": "StructuredDocumentation",
              "src": "15932:289:22",
              "text": " @notice Withdraw tokens from controller\n @dev Transfers an amount of an ERC20 token\n @param recipientAddress - Address of wallet receiving funds.\n @param tokenAddress - Address of token to be withdrawn.\n @param amount - Amount to withdraw."
            },
            "functionSelector": "1c20fadd",
            "id": 3653,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3634,
                "modifierName": {
                  "id": 3633,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "16352:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "16352:11:22"
              },
              {
                "id": 3636,
                "modifierName": {
                  "id": 3635,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "16364:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "16364:12:22"
              }
            ],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3627,
                  "mutability": "mutable",
                  "name": "recipientAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "16258:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16258:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3629,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "16292:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16292:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3631,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3653,
                  "src": "16322:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16322:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16248:94:22"
            },
            "returnParameters": {
              "id": 3637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16377:0:22"
            },
            "scope": 3690,
            "src": "16226:255:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3688,
              "nodeType": "Block",
              "src": "16860:115:22",
              "statements": [
                {
                  "assignments": [
                    3671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3671,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 3688,
                      "src": "16870:12:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3670,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3669,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 426,
                          "src": "16870:6:22"
                        },
                        "referencedDeclaration": 426,
                        "src": "16870:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3675,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3673,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3658,
                        "src": "16892:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3672,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "16885:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16885:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16870:35:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3679,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16934:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16934:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3683,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "16954:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseController_$3690",
                              "typeString": "contract BaseController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseController_$3690",
                              "typeString": "contract BaseController"
                            }
                          ],
                          "id": 3682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16946:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3681,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16946:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16946:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3685,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3656,
                        "src": "16961:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3676,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3671,
                        "src": "16915:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 407,
                      "src": "16915:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16915:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3687,
                  "nodeType": "ExpressionStatement",
                  "src": "16915:53:22"
                }
              ]
            },
            "documentation": {
              "id": 3654,
              "nodeType": "StructuredDocumentation",
              "src": "16487:217:22",
              "text": " @notice Deposit tokens to controller\n @dev Transfers an amount of an ERC20 token\n @param amount - Amount to deposit.\n @param tokenAddress - Address of token to be deposited."
            },
            "functionSelector": "4f6300a2",
            "id": 3689,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3661,
                "modifierName": {
                  "id": 3660,
                  "name": "onlyManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4246,
                  "src": "16798:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "16798:11:22"
              },
              {
                "id": 3663,
                "modifierName": {
                  "id": 3662,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1383,
                  "src": "16810:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "16810:12:22"
              },
              {
                "arguments": [
                  {
                    "id": 3665,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3656,
                    "src": "16838:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 3666,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3658,
                    "src": "16846:12:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3667,
                "modifierName": {
                  "id": 3664,
                  "name": "checkAllowance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4277,
                  "src": "16823:14:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "16823:36:22"
              }
            ],
            "name": "depositTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3656,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3689,
                  "src": "16741:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3655,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16741:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3658,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3689,
                  "src": "16762:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16762:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16731:57:22"
            },
            "returnParameters": {
              "id": 3668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16860:0:22"
            },
            "scope": 3690,
            "src": "16709:266:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3691,
        "src": "125:16852:22"
      }
    ],
    "src": "33:16945:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-09-24T13:15:47.923Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAllowedAddress(address,address)": {
        "details": "Will fail if the address is already allowlisted. Emits the AllowlistAddressAdded event. This is a permissioned function.",
        "params": {
          "member": "- The address to be added to the allowlist.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "addManager(address)": {
        "params": {
          "manager": "- Manager to add"
        }
      },
      "addToken(address,address,address,uint256,uint256,address)": {
        "details": "By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new token will have no balance - it is up to the owner to provide some immediately after calling this function. Note however that regular join functions will not work while the new token has no balance: the only way to deposit an initial amount is by using an Asset Manager. Token addition is forbidden during a weight change, or if one is scheduled to happen in the future. The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be useful in some scenarios to account for the fact that the Pool will have more tokens. Emits the TokenAdded event.",
        "params": {
          "assetManager": "- The Asset Manager for the token.",
          "mintAmount": "- The amount of BPT to be minted as a result of adding `token` to the Pool.",
          "poolAddress": "- Address of pool being worked on.",
          "recipient": "- The address to receive the BPT minted by the Pool.",
          "tokenToAdd": "- The ERC20 token to be added to the Pool.",
          "tokenToAddNormalizedWeight": "- The normalized weight of `token` relative to the other tokens in the Pool."
        }
      },
      "calculateBalancing(address)": {
        "params": {
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "collectAumManagementFees(address)": {
        "details": "This can be called by anyone to collect accrued AUM fees - and will be called automatically whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee percentage is changed by the manager, to prevent fees from being applied retroactively.",
        "params": {
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "constructor": {
        "params": {
          "supportedManagedPoolFactory": "- Managed pool contract address",
          "vaultAddress": "- Vault contract address"
        }
      },
      "createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256,uint256,bytes32)": {
        "params": {
          "assetManagers": "- Asset manager for the pool",
          "aumFeeId": "- Aum Fee Id",
          "isMustAllowlistLPs": "- List of LP's allowed in the pool",
          "isSwapEnabledOnStart": "- Whether swaps are enabled straight away",
          "managementAumFeePercentage": "- Management Aum fee to apply",
          "name": "- Pool name",
          "normalizedWeights": "- Normalized weights in the pool",
          "salt": "- Salt used towards calculating pool address",
          "swapFeePercentage": "- Fee applied to swaps",
          "symbol": "- Symbol representing the pool",
          "tokens": "- Tokens in the pool",
          "tolerance": "- Percentage devience "
        }
      },
      "depositTokens(uint256,address)": {
        "details": "Transfers an amount of an ERC20 token",
        "params": {
          "amount": "- Amount to deposit.",
          "tokenAddress": "- Address of token to be deposited."
        }
      },
      "getPoolId(address)": {
        "params": {
          "poolAddress": "- Pool to get the Id for"
        }
      },
      "getSwapEnabled(address)": {
        "params": {
          "poolAddress": "- Pool to get the swap state for"
        }
      },
      "getTokenPrice(address)": {
        "params": {
          "tokenAddress": "- Token to find a price for"
        }
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeAllowedAddress(address,address)": {
        "params": {
          "member": "- The address to be removed from the allowlist.",
          "poolAddress": "- Pool address being worked on"
        }
      },
      "removeManager(address)": {
        "params": {
          "manager": "- Manager to remove"
        }
      },
      "removeToken(address,address,uint256,address)": {
        "details": "Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in the future. Emits the TokenRemoved event. This is a permissioned function. The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.",
        "params": {
          "burnAmount": "- The amount of BPT to be burned after removing `token` from the Pool.",
          "poolAddress": "- Address of pool being worked on.",
          "sender": "- The address to burn BPT from.",
          "tokenToRemove": "- The ERC20 token to be removed from the Pool."
        }
      },
      "setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])": {
        "details": "This is a permissioned function. The lower and upper bounds are percentages, corresponding to a relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent trades that result in the value of the token dropping 20% or more relative to the rest of the pool.",
        "params": {
          "bptPrices": "- Token prices to for the circuit breaker",
          "lowerBoundPercentages": "- The lower limit to trigger the circuit breaker",
          "poolAddress": "- Pool to have a circruit breaker set",
          "tokens": "- Tokens in the pool",
          "upperBoundPercentages": "- The upper limit to trigger the circuit breaker"
        }
      },
      "setJoinExitEnabled(address,bool)": {
        "details": "Emits the JoinExitEnabledSet event. This is a permissioned function.",
        "params": {
          "isJoinExitEnabled": "- The new value of the join/exit enabled flag.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "setManagementAumFeePercentage(address,uint256)": {
        "details": "Attempting to collect AUM fees in excess of the maximum permitted percentage will revert. To avoid retroactive fee increases, we force collection at the current fee percentage before processing the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.",
        "params": {
          "managementAumFeePercentage": "- The new management AUM fee percentage.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "setMustAllowlistLPs(address,bool)": {
        "details": "Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and back on again, because this action does not affect the list of LP addresses. Emits the MustAllowlistLPsSet event. This is a permissioned function.",
        "params": {
          "isMustAllowlistLPs": "- The new value of the mustAllowlistLPs flag.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "setSwapEnabled(address,bool)": {
        "details": "Emits the SwapEnabledSet event. This is a permissioned function.",
        "params": {
          "isSwapEnabled": "- The new value of the swap enabled flag.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "setTokenFeed(address,address)": {
        "params": {
          "feed": "- Oracle feed address",
          "token": "- Token address"
        }
      },
      "updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)": {
        "details": "The swap fee will change from the given starting value (which may or may not be the current value) to the given ending fee percentage, over startTime to endTime. Note that calling this with a starting swap fee different from the current value will immediately change the current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`. Emits the GradualSwapFeeUpdateScheduled event. This is a permissioned function.",
        "params": {
          "endSwapFeePercentage": "- The ending value for the swap fee change. If the current timestamp >= endTime, `getSwapFeePercentage()` will return this value.",
          "endTime": "- The timestamp when the swap fee change will end (must be >= startTime).",
          "poolAddress": "- Address of pool being worked on.",
          "startSwapFeePercentage": "- The starting value for the swap fee change.",
          "startTime": "- The timestamp when the swap fee change will begin."
        }
      },
      "updateWeightsGradually(address,uint256,uint256,address[],uint256[])": {
        "details": "The weights will change from their current values to the given endWeights, over startTime to endTime. This is a permissioned function. Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes, the weights always start from their current values. This also guarantees a smooth transition when updateWeightsGradually is called during an ongoing weight change.",
        "params": {
          "endTime": "- The timestamp when the weight change will end (can be >= startTime).",
          "endWeights": "- The target weights. If the current timestamp >= endTime, `getNormalizedWeights()` will return these values.",
          "poolAddress": "- Address of pool being worked on.",
          "startTime": "- The timestamp when the weight change will begin.",
          "tokens": "- The tokens associated with the target weights (must match the current pool tokens)."
        }
      },
      "withdrawFunds(address,address,uint256)": {
        "details": "Transfers an amount of an ERC20 token",
        "params": {
          "amount": "- Amount to withdraw.",
          "recipientAddress": "- Address of wallet receiving funds.",
          "tokenAddress": "- Address of token to be withdrawn."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAllowedAddress(address,address)": {
        "notice": "Adds an address to the LP allowlist."
      },
      "addManager(address)": {
        "notice": "Add a new manager to the collection of managers"
      },
      "addToken(address,address,address,uint256,uint256,address)": {
        "notice": "Adds a token to the Pool's list of tradeable tokens. This is a permissioned function."
      },
      "calculateBalancing(address)": {
        "notice": "Calculates a number of tokens to add or remove to rebalance pricing"
      },
      "collectAumManagementFees(address)": {
        "notice": "Collect any accrued AUM fees and send them to the pool manager."
      },
      "constructor": {
        "notice": "Constructor for the controller base class"
      },
      "createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256,uint256,bytes32)": {
        "notice": "Create a new managed pool"
      },
      "depositTokens(uint256,address)": {
        "notice": "Deposit tokens to controller"
      },
      "getPoolId(address)": {
        "notice": "Returns the pools Id"
      },
      "getPoolsUnderManagement()": {
        "notice": "returns a list of pools under management by this controller"
      },
      "getSwapEnabled(address)": {
        "notice": "Returns the whether swapping is enabled for pool"
      },
      "getTokenPrice(address)": {
        "notice": "returns the oracle supplied price for the requested token"
      },
      "pause()": {
        "notice": "Pause sensitive functions"
      },
      "removeAllowedAddress(address,address)": {
        "notice": "Removes an address from the _poolAddress - Address of pool being worked on."
      },
      "removeManager(address)": {
        "notice": "Remove a manager to the collection of managers"
      },
      "removeToken(address,address,uint256,address)": {
        "notice": "Removes a token from the Pool's list of tradeable tokens."
      },
      "setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])": {
        "notice": "Set a circuit breaker for one or more tokens."
      },
      "setJoinExitEnabled(address,bool)": {
        "notice": "Enable or disable joins and exits. Note that this does not affect Recovery Mode exits."
      },
      "setManagementAumFeePercentage(address,uint256)": {
        "notice": "Setter for the yearly percentage AUM management fee, which is payable to the pool manager."
      },
      "setMustAllowlistLPs(address,bool)": {
        "notice": "Enable or disable the LP allowlist."
      },
      "setSwapEnabled(address,bool)": {
        "notice": "Enable or disable trading."
      },
      "setTokenFeed(address,address)": {
        "notice": "Set a new token oracle feed"
      },
      "unpause()": {
        "notice": "Unpause sensitive functions"
      },
      "updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)": {
        "notice": "Schedule a gradual swap fee update."
      },
      "updateWeightsGradually(address,uint256,uint256,address[],uint256[])": {
        "notice": "Schedule a gradual weight change."
      },
      "withdrawFunds(address,address,uint256)": {
        "notice": "Withdraw tokens from controller"
      }
    },
    "version": 1
  }
}