{
  "contractName": "BaseController",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "calculateBalancing",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "minAmountsOut",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.ExitPoolRequest",
              "name": "newExitRequest",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.JoinPoolRequest",
              "name": "newJoinRequest",
              "type": "tuple"
            }
          ],
          "internalType": "struct PoolAdjustments",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "managedPoolFactory",
      "outputs": [
        {
          "internalType": "contract ManagedPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "managedPools",
      "outputs": [
        {
          "internalType": "string",
          "name": "poolName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "poolSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tolerance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "supportedManager",
          "type": "address"
        }
      ],
      "name": "transferManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "normalizedWeights",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "assetManagers",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "swapFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isSwapEnabledOnStart",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isMustAllowlistLPs",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "managementAumFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aumFeeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tolerance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolsUnderManagement",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startSwapFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endSwapFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "updateSwapFeeGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "endWeights",
          "type": "uint256[]"
        }
      ],
      "name": "updateWeightsGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "getPoolId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isJoinExitEnabled",
          "type": "bool"
        }
      ],
      "name": "setJoinExitEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "getSwapEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isSwapEnabled",
          "type": "bool"
        }
      ],
      "name": "setSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isMustAllowlistLPs",
          "type": "bool"
        }
      ],
      "name": "setMustAllowlistLPs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "addAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "removeAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "collectAumManagementFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "managementAumFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "setManagementAumFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "bptPrices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "lowerBoundPercentages",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "upperBoundPercentages",
          "type": "uint256[]"
        }
      ],
      "name": "setCircuitBreakers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToAdd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetManager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenToAddNormalizedWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenToRemove",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "burnAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipientAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToAdd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenToAddNormalizedWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"calculateBalancing\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmountsOut\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.ExitPoolRequest\",\"name\":\"newExitRequest\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.JoinPoolRequest\",\"name\":\"newJoinRequest\",\"type\":\"tuple\"}],\"internalType\":\"struct PoolAdjustments\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"collectAumManagementFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"normalizedWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assetManagers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSwapEnabledOnStart\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isMustAllowlistLPs\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"managementAumFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aumFeeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsUnderManagement\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getSwapEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"managedPoolFactory\",\"outputs\":[{\"internalType\":\"contract ManagedPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"managedPools\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"poolName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"poolSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenToRemove\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"bptPrices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"lowerBoundPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"upperBoundPercentages\",\"type\":\"uint256[]\"}],\"name\":\"setCircuitBreakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isJoinExitEnabled\",\"type\":\"bool\"}],\"name\":\"setJoinExitEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"managementAumFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setManagementAumFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isMustAllowlistLPs\",\"type\":\"bool\"}],\"name\":\"setMustAllowlistLPs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSwapEnabled\",\"type\":\"bool\"}],\"name\":\"setSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"supportedManager\",\"type\":\"address\"}],\"name\":\"transferManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateSwapFeeGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"endWeights\",\"type\":\"uint256[]\"}],\"name\":\"updateWeightsGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAllowedAddress(address,address)\":{\"details\":\"Will fail if the address is already allowlisted. Emits the AllowlistAddressAdded event. This is a permissioned function.\",\"params\":{\"member\":\"- The address to be added to the allowlist.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"addToken(address,address,address,uint256,uint256,address)\":{\"details\":\"By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new token will have no balance - it is up to the owner to provide some immediately after calling this function. Note however that regular join functions will not work while the new token has no balance: the only way to deposit an initial amount is by using an Asset Manager. Token addition is forbidden during a weight change, or if one is scheduled to happen in the future. The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be useful in some scenarios to account for the fact that the Pool will have more tokens. Emits the TokenAdded event.\",\"params\":{\"assetManager\":\"- The Asset Manager for the token.\",\"mintAmount\":\"- The amount of BPT to be minted as a result of adding `token` to the Pool.\",\"poolAddress\":\"- Address of pool being worked on.\",\"recipient\":\"- The address to receive the BPT minted by the Pool.\",\"tokenToAdd\":\"- The ERC20 token to be added to the Pool.\",\"tokenToAddNormalizedWeight\":\"- The normalized weight of `token` relative to the other tokens in the Pool.\"}},\"calculateBalancing(address)\":{\"params\":{\"poolAddress\":\"- Address of pool being worked on.\"}},\"collectAumManagementFees(address)\":{\"details\":\"This can be called by anyone to collect accrued AUM fees - and will be called automatically whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee percentage is changed by the manager, to prevent fees from being applied retroactively.\",\"params\":{\"poolAddress\":\"- Address of pool being worked on.\"}},\"constructor\":{\"params\":{\"supportedManagedPoolFactory\":\"- Managed pool contract address\",\"vaultAddress\":\"- Vault contract address\"}},\"createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256,uint256,bytes32)\":{\"params\":{\"assetManagers\":\"- Asset manager for the pool\",\"aumFeeId\":\"- Aum Fee Id\",\"isMustAllowlistLPs\":\"- List of LP's allowed in the pool\",\"isSwapEnabledOnStart\":\"- Whether swaps are enabled straight away\",\"managementAumFeePercentage\":\"- Management Aum fee to apply\",\"name\":\"- Pool name\",\"normalizedWeights\":\"- Normalized weights in the pool\",\"salt\":\"- Salt used towards calculating pool address\",\"swapFeePercentage\":\"- Fee applied to swaps\",\"symbol\":\"- Symbol representing the pool\",\"tokens\":\"- Tokens in the pool\",\"tolerance\":\"- Percentage devience \"}},\"depositTokens(uint256,address)\":{\"details\":\"Transfers an amount of an ERC20 token\",\"params\":{\"amount\":\"- Amount to deposit.\",\"tokenAddress\":\"- Address of token to be deposited.\"}},\"getPoolId(address)\":{\"params\":{\"poolAddress\":\"- Pool to get the Id for\"}},\"getSwapEnabled(address)\":{\"params\":{\"poolAddress\":\"- Pool to get the swap state for\"}},\"getTokenPrice(address)\":{\"params\":{\"value\":\"- Address to find\"}},\"removeAllowedAddress(address,address)\":{\"params\":{\"member\":\"- The address to be removed from the allowlist.\",\"poolAddress\":\"- Pool address being worked on\"}},\"removeToken(address,address,uint256,address)\":{\"details\":\"Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in the future. Emits the TokenRemoved event. This is a permissioned function. The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\",\"params\":{\"burnAmount\":\"- The amount of BPT to be burned after removing `token` from the Pool.\",\"poolAddress\":\"- Address of pool being worked on.\",\"sender\":\"- The address to burn BPT from.\",\"tokenToRemove\":\"- The ERC20 token to be removed from the Pool.\"}},\"setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])\":{\"details\":\"This is a permissioned function. The lower and upper bounds are percentages, corresponding to a relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\",\"params\":{\"bptPrices\":\"- Token prices to for the circuit breaker\",\"lowerBoundPercentages\":\"- The lower limit to trigger the circuit breaker\",\"poolAddress\":\"- Pool to have a circruit breaker set\",\"tokens\":\"- Tokens in the pool\",\"upperBoundPercentages\":\"- The upper limit to trigger the circuit breaker\"}},\"setJoinExitEnabled(address,bool)\":{\"details\":\"Emits the JoinExitEnabledSet event. This is a permissioned function.\",\"params\":{\"isJoinExitEnabled\":\"- The new value of the join/exit enabled flag.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"setManagementAumFeePercentage(address,uint256)\":{\"details\":\"Attempting to collect AUM fees in excess of the maximum permitted percentage will revert. To avoid retroactive fee increases, we force collection at the current fee percentage before processing the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\",\"params\":{\"managementAumFeePercentage\":\"- The new management AUM fee percentage.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"setMustAllowlistLPs(address,bool)\":{\"details\":\"Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and back on again, because this action does not affect the list of LP addresses. Emits the MustAllowlistLPsSet event. This is a permissioned function.\",\"params\":{\"isMustAllowlistLPs\":\"- The new value of the mustAllowlistLPs flag.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"setSwapEnabled(address,bool)\":{\"details\":\"Emits the SwapEnabledSet event. This is a permissioned function.\",\"params\":{\"isSwapEnabled\":\"- The new value of the swap enabled flag.\",\"poolAddress\":\"- Address of pool being worked on.\"}},\"transferManagement(address)\":{\"details\":\"Only one manager can presently be set\",\"params\":{\"supportedManager\":\"- New manager.\"}},\"updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)\":{\"details\":\"The swap fee will change from the given starting value (which may or may not be the current value) to the given ending fee percentage, over startTime to endTime. Note that calling this with a starting swap fee different from the current value will immediately change the current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`. Emits the GradualSwapFeeUpdateScheduled event. This is a permissioned function.\",\"params\":{\"endSwapFeePercentage\":\"- The ending value for the swap fee change. If the current timestamp >= endTime, `getSwapFeePercentage()` will return this value.\",\"endTime\":\"- The timestamp when the swap fee change will end (must be >= startTime).\",\"poolAddress\":\"- Address of pool being worked on.\",\"startSwapFeePercentage\":\"- The starting value for the swap fee change.\",\"startTime\":\"- The timestamp when the swap fee change will begin.\"}},\"updateWeightsGradually(address,uint256,uint256,address[],uint256[])\":{\"details\":\"The weights will change from their current values to the given endWeights, over startTime to endTime. This is a permissioned function. Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes, the weights always start from their current values. This also guarantees a smooth transition when updateWeightsGradually is called during an ongoing weight change.\",\"params\":{\"endTime\":\"- The timestamp when the weight change will end (can be >= startTime).\",\"endWeights\":\"- The target weights. If the current timestamp >= endTime, `getNormalizedWeights()` will return these values.\",\"poolAddress\":\"- Address of pool being worked on.\",\"startTime\":\"- The timestamp when the weight change will begin.\",\"tokens\":\"- The tokens associated with the target weights (must match the current pool tokens).\"}},\"withdrawFunds(address,address,uint256)\":{\"details\":\"Transfers an amount of an ERC20 token\",\"params\":{\"amount\":\"- Amount to withdraw.\",\"recipientAddress\":\"- Address of wallet receiving funds.\",\"tokenAddress\":\"- Address of token to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedAddress(address,address)\":{\"notice\":\"Adds an address to the LP allowlist.\"},\"addToken(address,address,address,uint256,uint256,address)\":{\"notice\":\"Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\"},\"calculateBalancing(address)\":{\"notice\":\"Calculates a number of tokens to add or remove to rebalance pricing\"},\"collectAumManagementFees(address)\":{\"notice\":\"Collect any accrued AUM fees and send them to the pool manager.\"},\"constructor\":{\"notice\":\"Constructor for the controller base class\"},\"createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256,uint256,bytes32)\":{\"notice\":\"Create a new managed pool\"},\"depositTokens(uint256,address)\":{\"notice\":\"Deposit tokens to controller\"},\"getPoolId(address)\":{\"notice\":\"Returns the pools Id\"},\"getPoolsUnderManagement()\":{\"notice\":\"returns a list of pools under management by this controller\"},\"getSwapEnabled(address)\":{\"notice\":\"Returns the whether swapping is enabled for pool\"},\"getTokenPrice(address)\":{\"notice\":\"returns the oracle supplied price for the requested token\"},\"removeAllowedAddress(address,address)\":{\"notice\":\"Removes an address from the _poolAddress - Address of pool being worked on.\"},\"removeToken(address,address,uint256,address)\":{\"notice\":\"Removes a token from the Pool's list of tradeable tokens.\"},\"setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])\":{\"notice\":\"Set a circuit breaker for one or more tokens.\"},\"setJoinExitEnabled(address,bool)\":{\"notice\":\"Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\"},\"setManagementAumFeePercentage(address,uint256)\":{\"notice\":\"Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\"},\"setMustAllowlistLPs(address,bool)\":{\"notice\":\"Enable or disable the LP allowlist.\"},\"setSwapEnabled(address,bool)\":{\"notice\":\"Enable or disable trading.\"},\"transferManagement(address)\":{\"notice\":\"Transfer the manager to a new address\"},\"updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Schedule a gradual swap fee update.\"},\"updateWeightsGradually(address,uint256,uint256,address[],uint256[])\":{\"notice\":\"Schedule a gradual weight change.\"},\"withdrawFunds(address,address,uint256)\":{\"notice\":\"Withdraw tokens from controller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/base/BaseController.sol\":\"BaseController\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/pool-utils/IManagedPool.sol\":{\"keccak256\":\"0x56d3016ce96ac3d0514f07aee1bcbcdf069513376567deb97449ba4c15b538fd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c03f7874e2ea92eb421119fa15c430c4f0e03208b9f85d9d6f80abb8e750aa63\",\"dweb:/ipfs/QmU3dDVen2wRyQxhpwwfCrJSB6mSYobcPPAxKV6BiSNSNc\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IBasePool.sol\":{\"keccak256\":\"0x4673e08f6b8e76ffa89155d704a0682a6a98e3c60ca5f28e0c4b964f26b65dbe\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://eef030243d480fb6e84943d88c19cfc2b7e17bee800ece7b7be840061f3cc4bb\",\"dweb:/ipfs/QmYCLn4pspMRBdKAhtjc7EjnHQURHrzp844M5722LEbL8D\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IPoolSwapStructs.sol\":{\"keccak256\":\"0xbe4815478a942261e6e2416632342b0e55ff2b0f75c2551ffd79ad9b2326be38\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ccc137d00935cace955e552f238130a01a9468c2d80c725e4625a25debc5c54b\",\"dweb:/ipfs/QmexvRpcaeERPyZt9BzHZViFb8GevhhhoUBQ3wgDqFUwJx\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3beaa37ee61e4ab615e250fbf01601ae481de843fd0ef55e6b44fd9d5fff8a7\",\"dweb:/ipfs/QmeZUVwd26LzK4Mfp8Zba5JbQNkZFfTzFu1A6FVMMZDg9c\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"project:/contracts/base/BaseController.sol\":{\"keccak256\":\"0xd4ddc121a4ec62959c0b69463f334b4ce5b6ef44401ab2ae89768b317790474a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c8df98c5c2394a62b3a0832aab49ee9d177d2dbdcfade830ae4922a505cef82\",\"dweb:/ipfs/QmR5RWeqHje8GfGo9i98F5KLEZk1soqw9xYK2kjkx6ZX71\"]},\"project:/contracts/base/BaseUtils.sol\":{\"keccak256\":\"0x39263a9d020f17780f060af185125c88d5ffa6489255c8dbfef37575e97b2bd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52d30ab791c1f3db87bffacbfaed8b20372c8f6d1ac630f4570973919c3e6adf\",\"dweb:/ipfs/QmPFGyajBbytiE9arr1Fhb1cDqwcVYARCWHmtgynN8PQUB\"]},\"project:/contracts/lib/ManagedPoolFactory.sol\":{\"keccak256\":\"0xd446b8afee27e48558a7bfeaf078ca24c6998d941249d1b44d9abc210ed1a5fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4f7b779f8ed40c2e6d60724a7e9c3aec763a03a4ce6f9eee4d3f8223ea6b09a6\",\"dweb:/ipfs/QmW64QrGNtNu8pNUtDWExxPHrFYRTDdQGQmWxmfzsaKotA\"]},\"project:/contracts/lib/SupportLib.sol\":{\"keccak256\":\"0x724ba62393dc6dbfe7539206d3beb17eac78942d1522950727ed49d5d01358bf\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://0cdcfeb867061fec17c5959f1beeae68f4ccd3cfc4d4888904faf9c3615d1052\",\"dweb:/ipfs/QmTEqf38VqZJ7LKqrcTC8nR8a5nNpWp7gN7NW5efZ9EbvY\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\n\nimport \"../lib/ManagedPoolFactory.sol\";\nimport \"./BaseUtils.sol\";\n\nabstract contract BaseController is BaseUtils {\n    ManagedPoolFactory public immutable managedPoolFactory;\n    address [] private _poolsUnderManagement;\n\n    /**\n     * @notice Constructor for the controller base class\n     *\n     * @param vaultAddress - Vault contract address\n     * @param supportedManagedPoolFactory - Managed pool contract address\n     */\n    constructor(address vaultAddress, address supportedManagedPoolFactory)\n    BaseUtils(vaultAddress) {\n        manager = msg.sender;\n        managedPoolFactory = ManagedPoolFactory(supportedManagedPoolFactory);\n    }\n\n    /**\n     * @notice Create a new managed pool\n     *\n     * @param name - Pool name\n     * @param symbol - Symbol representing the pool\n     * @param tokens - Tokens in the pool\n     * @param normalizedWeights - Normalized weights in the pool\n     * @param assetManagers - Asset manager for the pool\n     * @param swapFeePercentage - Fee applied to swaps\n     * @param isSwapEnabledOnStart - Whether swaps are enabled straight away\n     * @param isMustAllowlistLPs - List of LP's allowed in the pool\n     * @param managementAumFeePercentage - Management Aum fee to apply\n     * @param aumFeeId - Aum Fee Id\n     * @param tolerance - Percentage devience \n     * @param salt - Salt used towards calculating pool address\n     */\n    function createPool(\n        string memory name,\n        string memory symbol,\n        IERC20 [] memory tokens,\n        uint256 [] memory normalizedWeights,\n        address [] memory assetManagers,\n        uint256 swapFeePercentage,\n        bool isSwapEnabledOnStart,\n        bool isMustAllowlistLPs,\n        uint256 managementAumFeePercentage,\n        uint256 aumFeeId,\n        uint256 tolerance,\n        bytes32 salt\n    ) public restricted nonReentrant {\n        ManagedPoolParams memory poolParams;\n        poolParams.name = name;\n        poolParams.symbol = symbol;\n        poolParams.assetManagers = assetManagers;\n\n        ManagedPoolSettingsParams memory poolSettingsParams;\n        poolSettingsParams.tokens = tokens;\n        poolSettingsParams.normalizedWeights = normalizedWeights;\n        poolSettingsParams.swapFeePercentage = swapFeePercentage;\n        poolSettingsParams.isSwapEnabledOnStart = isSwapEnabledOnStart;\n        poolSettingsParams.isMustAllowlistLPs = isMustAllowlistLPs;\n        poolSettingsParams\n            .managementAumFeePercentage = managementAumFeePercentage;\n        poolSettingsParams.aumFeeId = aumFeeId;\n\n        address poolAddress = managedPoolFactory.create(\n            poolParams,\n            poolSettingsParams,\n            address(this),\n            salt\n        );\n        _poolsUnderManagement.push(poolAddress);\n\n        managedPools [poolAddress].poolName = name;\n        managedPools [poolAddress].poolSymbol = symbol;\n        managedPools [poolAddress].tolerance = tolerance;\n        managedPools [poolAddress].poolTokens = tokens;\n    }\n\n    /**\n     * @notice returns a list of pools under management by this controller\n     *\n     */\n    function getPoolsUnderManagement() public view returns (address [] memory) {\n        return _poolsUnderManagement;\n    }\n\n    /**\n     * @notice Schedule a gradual swap fee update.\n     * @dev The swap fee will change from the given starting value (which may or may not be the current\n     * value) to the given ending fee percentage, over startTime to endTime.\n     *\n     * Note that calling this with a starting swap fee different from the current value will immediately change the\n     * current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`.\n     * Emits the GradualSwapFeeUpdateScheduled event.\n     * This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param startTime - The timestamp when the swap fee change will begin.\n     * @param endTime - The timestamp when the swap fee change will end (must be >= startTime).\n     * @param startSwapFeePercentage - The starting value for the swap fee change.\n     * @param endSwapFeePercentage - The ending value for the swap fee change. If the current timestamp >= endTime,\n     * `getSwapFeePercentage()` will return this value.\n     */\n    function updateSwapFeeGradually(\n        address poolAddress,\n        uint256 startTime,\n        uint256 endTime,\n        uint256 startSwapFeePercentage,\n        uint256 endSwapFeePercentage\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.updateSwapFeeGradually(\n            startTime,\n            endTime,\n            startSwapFeePercentage,\n            endSwapFeePercentage\n        );\n    }\n\n    /**\n     * @notice Schedule a gradual weight change.\n     * @dev The weights will change from their current values to the given endWeights, over startTime to endTime.\n     * This is a permissioned function.\n     *\n     * Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes,\n     * the weights always start from their current values. This also guarantees a smooth transition when\n     * updateWeightsGradually is called during an ongoing weight change.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param startTime - The timestamp when the weight change will begin.\n     * @param endTime - The timestamp when the weight change will end (can be >= startTime).\n     * @param tokens - The tokens associated with the target weights (must match the current pool tokens).\n     * @param endWeights - The target weights. If the current timestamp >= endTime, `getNormalizedWeights()`\n     * will return these values.\n     */\n    function updateWeightsGradually(\n        address poolAddress,\n        uint256 startTime,\n        uint256 endTime,\n        IERC20 [] memory tokens,\n        uint256 [] memory endWeights\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.updateWeightsGradually(\n            startTime,\n            endTime,\n            tokens,\n            endWeights\n        );\n    }\n\n    /**\n     * @notice Returns the pools Id\n     *\n     * @param poolAddress - Pool to get the Id for\n     */\n    function getPoolId(address poolAddress) public view returns (bytes32) {\n        return IManagedPool(poolAddress).getPoolId();\n    }\n\n    /**\n     * @notice Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\n     * @dev Emits the JoinExitEnabledSet event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param isJoinExitEnabled - The new value of the join/exit enabled flag.\n     */\n    function setJoinExitEnabled(\n        address poolAddress,\n        bool isJoinExitEnabled\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setJoinExitEnabled(isJoinExitEnabled);\n    }\n\n    /**\n     * @notice Returns the whether swapping is enabled for pool\n     *\n     * @param poolAddress - Pool to get the swap state for\n     */\n    function getSwapEnabled(address poolAddress) public view returns (bool) {\n        return IManagedPool(poolAddress).getSwapEnabled();\n    }\n\n    /**\n     * @notice Enable or disable trading.\n     * @dev Emits the SwapEnabledSet event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param isSwapEnabled - The new value of the swap enabled flag.\n     */\n    function setSwapEnabled(\n        address poolAddress,\n        bool isSwapEnabled\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setSwapEnabled(isSwapEnabled);\n    }\n\n    /**\n     * @notice Enable or disable the LP allowlist.\n     * @dev Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and\n     * back on again, because this action does not affect the list of LP addresses.\n     * Emits the MustAllowlistLPsSet event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param isMustAllowlistLPs - The new value of the mustAllowlistLPs flag.\n     */\n    function setMustAllowlistLPs(\n        address poolAddress,\n        bool isMustAllowlistLPs\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setMustAllowlistLPs(isMustAllowlistLPs);\n    }\n\n    /**\n     * @notice Adds an address to the LP allowlist.\n     * @dev Will fail if the address is already allowlisted.\n     * Emits the AllowlistAddressAdded event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param member - The address to be added to the allowlist.\n     */\n    function addAllowedAddress(\n        address poolAddress,\n        address member\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.addAllowedAddress(member);\n    }\n\n    /**\n     * @notice Removes an address from the _poolAddress - Address of pool being worked on.\n     *\n     * @param poolAddress - Pool address being worked on\n     * @param member - The address to be removed from the allowlist.\n     */\n    function removeAllowedAddress(\n        address poolAddress,\n        address member\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.removeAllowedAddress(member);\n    }\n\n    /**\n     * @notice Collect any accrued AUM fees and send them to the pool manager.\n     * @dev This can be called by anyone to collect accrued AUM fees - and will be called automatically\n     * whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee\n     * percentage is changed by the manager, to prevent fees from being applied retroactively.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     */\n    function collectAumManagementFees(\n        address poolAddress\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.collectAumManagementFees();\n    }\n\n    /**\n     * @notice Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\n     * @dev Attempting to collect AUM fees in excess of the maximum permitted percentage will revert.\n     * To avoid retroactive fee increases, we force collection at the current fee percentage before processing\n     * the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param managementAumFeePercentage - The new management AUM fee percentage.\n     */\n    function setManagementAumFeePercentage(\n        address poolAddress,\n        uint256 managementAumFeePercentage\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setManagementAumFeePercentage(managementAumFeePercentage);\n    }\n\n    /**\n     * @notice Set a circuit breaker for one or more tokens.\n     * @dev This is a permissioned function. The lower and upper bounds are percentages, corresponding to a\n     * relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent\n     * trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\n     *\n     * @param poolAddress - Pool to have a circruit breaker set\n     * @param tokens - Tokens in the pool\n     * @param bptPrices - Token prices to for the circuit breaker\n     * @param lowerBoundPercentages - The lower limit to trigger the circuit breaker\n     * @param upperBoundPercentages - The upper limit to trigger the circuit breaker\n     */\n    function setCircuitBreakers(\n        address poolAddress,\n        IERC20 [] memory tokens,\n        uint256 [] memory bptPrices,\n        uint256 [] memory lowerBoundPercentages,\n        uint256 [] memory upperBoundPercentages\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.setCircuitBreakers(\n            tokens,\n            bptPrices,\n            lowerBoundPercentages,\n            upperBoundPercentages\n        );\n    }\n\n    /**\n     * @notice Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\n     *\n     * @dev By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new\n     * token will have no balance - it is up to the owner to provide some immediately after calling this function.\n     * Note however that regular join functions will not work while the new token has no balance: the only way to\n     * deposit an initial amount is by using an Asset Manager.\n     *\n     * Token addition is forbidden during a weight change, or if one is scheduled to happen in the future.\n     *\n     * The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be\n     * useful in some scenarios to account for the fact that the Pool will have more tokens.\n     *\n     * Emits the TokenAdded event.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param tokenToAdd - The ERC20 token to be added to the Pool.\n     * @param assetManager - The Asset Manager for the token.\n     * @param tokenToAddNormalizedWeight - The normalized weight of `token` relative to the other tokens in the Pool.\n     * @param mintAmount - The amount of BPT to be minted as a result of adding `token` to the Pool.\n     * @param recipient - The address to receive the BPT minted by the Pool.\n     */\n    function addToken(\n        address poolAddress,\n        IERC20 tokenToAdd,\n        address assetManager,\n        uint256 tokenToAddNormalizedWeight,\n        uint256 mintAmount,\n        address recipient\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.addToken(\n            tokenToAdd,\n            assetManager,\n            tokenToAddNormalizedWeight,\n            mintAmount,\n            recipient\n        );\n    }\n\n    /**\n     * @notice Removes a token from the Pool's list of tradeable tokens.\n     * @dev Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not\n     * including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in\n     * the future.\n     *\n     * Emits the TokenRemoved event. This is a permissioned function.\n     *\n     * The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful\n     * in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\n     *\n     * @param poolAddress - Address of pool being worked on.\n     * @param tokenToRemove - The ERC20 token to be removed from the Pool.\n     * @param burnAmount - The amount of BPT to be burned after removing `token` from the Pool.\n     * @param sender - The address to burn BPT from.\n     */\n    function removeToken(\n        address poolAddress,\n        IERC20 tokenToRemove,\n        uint256 burnAmount,\n        address sender\n    ) public restricted nonReentrant {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(poolAddress);\n        managedPool.removeToken(tokenToRemove, burnAmount, sender);\n    }\n\n    /**\n     * @notice Withdraw tokens from controller\n     * @dev Transfers an amount of an ERC20 token\n     *\n     * @param recipientAddress - Address of wallet receiving funds.\n     * @param tokenAddress - Address of token to be withdrawn.\n     * @param amount - Amount to withdraw.\n     */\n    function withdrawFunds(\n        address recipientAddress,\n        address tokenAddress,\n        uint256 amount\n    ) public restricted nonReentrant {\n        IERC20 _token = IERC20(tokenAddress);\n        _token.transferFrom(address(this), recipientAddress, amount);\n    }\n\n    /**\n     * @notice Deposit tokens to controller\n     * @dev Transfers an amount of an ERC20 token\n     *\n     * @param amount - Amount to deposit.\n     * @param tokenAddress - Address of token to be deposited.\n     */\n    function depositTokens(\n        uint amount,\n        address tokenAddress\n    ) public restricted nonReentrant checkAllowance(amount, tokenAddress) {\n        IERC20 token = IERC20(tokenAddress);\n        token.transferFrom(msg.sender, address(this), amount);\n    }\n}\n",
  "sourcePath": "/home/eagle/Source/BalancerController/Balancer.Controller/contracts/base/BaseController.sol",
  "ast": {
    "absolutePath": "project:/contracts/base/BaseController.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1245
      ],
      "BaseController": [
        2888
      ],
      "BaseUtils": [
        3560
      ],
      "CurveValues": [
        2925
      ],
      "IAsset": [
        430
      ],
      "IAuthentication": [
        296
      ],
      "IAuthorizer": [
        445
      ],
      "IBasePool": [
        569
      ],
      "IERC20": [
        426
      ],
      "IFlashLoanRecipient": [
        589
      ],
      "IManagedPool": [
        285
      ],
      "IPoolSwapStructs": [
        617
      ],
      "IProtocolFeesCollector": [
        686
      ],
      "ISignaturesValidator": [
        314
      ],
      "ITemporarilyPausable": [
        333
      ],
      "IVault": [
        1199
      ],
      "IWETH": [
        348
      ],
      "ManagedPoolFactory": [
        3662
      ],
      "ManagedPoolParams": [
        3670
      ],
      "ManagedPoolSettingsParams": [
        3688
      ],
      "PoolAdjustments": [
        2915
      ],
      "PoolSettings": [
        2908
      ],
      "ReentrancyGuard": [
        1310
      ],
      "SupportLib": [
        3933
      ]
    },
    "id": 2889,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2192,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:17"
      },
      {
        "id": 2193,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:33:17"
      },
      {
        "absolutePath": "project:/contracts/lib/ManagedPoolFactory.sol",
        "file": "../lib/ManagedPoolFactory.sol",
        "id": 2194,
        "nodeType": "ImportDirective",
        "scope": 2889,
        "sourceUnit": 3689,
        "src": "93:39:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/base/BaseUtils.sol",
        "file": "./BaseUtils.sol",
        "id": 2195,
        "nodeType": "ImportDirective",
        "scope": 2889,
        "sourceUnit": 3561,
        "src": "133:25:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2196,
              "name": "BaseUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3560,
              "src": "196:9:17"
            },
            "id": 2197,
            "nodeType": "InheritanceSpecifier",
            "src": "196:9:17"
          }
        ],
        "contractDependencies": [
          1310,
          3560
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2888,
        "linearizedBaseContracts": [
          2888,
          3560,
          1310
        ],
        "name": "BaseController",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d4f25a4b",
            "id": 2200,
            "mutability": "immutable",
            "name": "managedPoolFactory",
            "nodeType": "VariableDeclaration",
            "scope": 2888,
            "src": "212:54:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ManagedPoolFactory_$3662",
              "typeString": "contract ManagedPoolFactory"
            },
            "typeName": {
              "id": 2199,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2198,
                "name": "ManagedPoolFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3662,
                "src": "212:18:17"
              },
              "referencedDeclaration": 3662,
              "src": "212:18:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ManagedPoolFactory_$3662",
                "typeString": "contract ManagedPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2203,
            "mutability": "mutable",
            "name": "_poolsUnderManagement",
            "nodeType": "VariableDeclaration",
            "scope": 2888,
            "src": "272:40:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2201,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "272:7:17",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2202,
              "nodeType": "ArrayTypeName",
              "src": "272:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2225,
              "nodeType": "Block",
              "src": "624:115:17",
              "statements": [
                {
                  "expression": {
                    "id": 2217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2214,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2929,
                      "src": "634:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2215,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "644:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "644:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "634:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2218,
                  "nodeType": "ExpressionStatement",
                  "src": "634:20:17"
                },
                {
                  "expression": {
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2219,
                      "name": "managedPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2200,
                      "src": "664:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ManagedPoolFactory_$3662",
                        "typeString": "contract ManagedPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2221,
                          "name": "supportedManagedPoolFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2208,
                          "src": "704:27:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2220,
                        "name": "ManagedPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3662,
                        "src": "685:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ManagedPoolFactory_$3662_$",
                          "typeString": "type(contract ManagedPoolFactory)"
                        }
                      },
                      "id": 2222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "685:47:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ManagedPoolFactory_$3662",
                        "typeString": "contract ManagedPoolFactory"
                      }
                    },
                    "src": "664:68:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ManagedPoolFactory_$3662",
                      "typeString": "contract ManagedPoolFactory"
                    }
                  },
                  "id": 2224,
                  "nodeType": "ExpressionStatement",
                  "src": "664:68:17"
                }
              ]
            },
            "documentation": {
              "id": 2204,
              "nodeType": "StructuredDocumentation",
              "src": "319:201:17",
              "text": " @notice Constructor for the controller base class\n @param vaultAddress - Vault contract address\n @param supportedManagedPoolFactory - Managed pool contract address"
            },
            "id": 2226,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2211,
                    "name": "vaultAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2206,
                    "src": "610:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2212,
                "modifierName": {
                  "id": 2210,
                  "name": "BaseUtils",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3560,
                  "src": "600:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "600:23:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2206,
                  "mutability": "mutable",
                  "name": "vaultAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2226,
                  "src": "537:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2208,
                  "mutability": "mutable",
                  "name": "supportedManagedPoolFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 2226,
                  "src": "559:35:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "536:59:17"
            },
            "returnParameters": {
              "id": 2213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:0:17"
            },
            "scope": 2888,
            "src": "525:214:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2377,
              "nodeType": "Block",
              "src": "1930:1134:17",
              "statements": [
                {
                  "assignments": [
                    2264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2264,
                      "mutability": "mutable",
                      "name": "poolParams",
                      "nodeType": "VariableDeclaration",
                      "scope": 2377,
                      "src": "1940:35:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ManagedPoolParams_$3670_memory_ptr",
                        "typeString": "struct ManagedPoolParams"
                      },
                      "typeName": {
                        "id": 2263,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2262,
                          "name": "ManagedPoolParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3670,
                          "src": "1940:17:17"
                        },
                        "referencedDeclaration": 3670,
                        "src": "1940:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$3670_storage_ptr",
                          "typeString": "struct ManagedPoolParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2265,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1940:35:17"
                },
                {
                  "expression": {
                    "id": 2270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2266,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2264,
                        "src": "1985:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$3670_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        }
                      },
                      "id": 2268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3664,
                      "src": "1985:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2269,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2229,
                      "src": "2003:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1985:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2271,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:22:17"
                },
                {
                  "expression": {
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2272,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2264,
                        "src": "2017:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$3670_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        }
                      },
                      "id": 2274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3666,
                      "src": "2017:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2275,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2231,
                      "src": "2037:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2017:26:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2277,
                  "nodeType": "ExpressionStatement",
                  "src": "2017:26:17"
                },
                {
                  "expression": {
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2278,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2264,
                        "src": "2053:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$3670_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        }
                      },
                      "id": 2280,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "assetManagers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3669,
                      "src": "2053:24:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2281,
                      "name": "assetManagers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2241,
                      "src": "2080:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2053:40:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:40:17"
                },
                {
                  "assignments": [
                    2286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2286,
                      "mutability": "mutable",
                      "name": "poolSettingsParams",
                      "nodeType": "VariableDeclaration",
                      "scope": 2377,
                      "src": "2104:51:17",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                        "typeString": "struct ManagedPoolSettingsParams"
                      },
                      "typeName": {
                        "id": 2285,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2284,
                          "name": "ManagedPoolSettingsParams",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3688,
                          "src": "2104:25:17"
                        },
                        "referencedDeclaration": 3688,
                        "src": "2104:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_storage_ptr",
                          "typeString": "struct ManagedPoolSettingsParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2287,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2104:51:17"
                },
                {
                  "expression": {
                    "id": 2292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2288,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "2165:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 2290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3674,
                      "src": "2165:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2291,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "2193:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "2165:34:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 2293,
                  "nodeType": "ExpressionStatement",
                  "src": "2165:34:17"
                },
                {
                  "expression": {
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2294,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "2209:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "normalizedWeights",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3677,
                      "src": "2209:36:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2297,
                      "name": "normalizedWeights",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2238,
                      "src": "2248:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2209:56:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2299,
                  "nodeType": "ExpressionStatement",
                  "src": "2209:56:17"
                },
                {
                  "expression": {
                    "id": 2304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2300,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "2275:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 2302,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "swapFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3679,
                      "src": "2275:36:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2303,
                      "name": "swapFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2243,
                      "src": "2314:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2275:56:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2305,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:56:17"
                },
                {
                  "expression": {
                    "id": 2310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2306,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "2341:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 2308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isSwapEnabledOnStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3681,
                      "src": "2341:39:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2309,
                      "name": "isSwapEnabledOnStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2245,
                      "src": "2383:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2341:62:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2311,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:62:17"
                },
                {
                  "expression": {
                    "id": 2316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2312,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "2413:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 2314,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isMustAllowlistLPs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3683,
                      "src": "2413:37:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2315,
                      "name": "isMustAllowlistLPs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2247,
                      "src": "2453:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2413:58:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2317,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:58:17"
                },
                {
                  "expression": {
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2318,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "2481:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 2320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "managementAumFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3685,
                      "src": "2481:58:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2321,
                      "name": "managementAumFeePercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2249,
                      "src": "2542:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2481:87:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:87:17"
                },
                {
                  "expression": {
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2324,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "2578:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      "id": 2326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "aumFeeId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3687,
                      "src": "2578:27:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2327,
                      "name": "aumFeeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2251,
                      "src": "2608:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2578:38:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2329,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:38:17"
                },
                {
                  "assignments": [
                    2331
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2331,
                      "mutability": "mutable",
                      "name": "poolAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 2377,
                      "src": "2627:19:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2330,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2627:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2342,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2334,
                        "name": "poolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2264,
                        "src": "2688:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$3670_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        }
                      },
                      {
                        "id": 2335,
                        "name": "poolSettingsParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2286,
                        "src": "2712:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2338,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2752:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseController_$2888",
                              "typeString": "contract BaseController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseController_$2888",
                              "typeString": "contract BaseController"
                            }
                          ],
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2744:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2744:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2744:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2340,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "2771:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ManagedPoolParams_$3670_memory_ptr",
                          "typeString": "struct ManagedPoolParams memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr",
                          "typeString": "struct ManagedPoolSettingsParams memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 2332,
                        "name": "managedPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2200,
                        "src": "2649:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ManagedPoolFactory_$3662",
                          "typeString": "contract ManagedPoolFactory"
                        }
                      },
                      "id": 2333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3585,
                      "src": "2649:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_ManagedPoolParams_$3670_memory_ptr_$_t_struct$_ManagedPoolSettingsParams_$3688_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (struct ManagedPoolParams memory,struct ManagedPoolSettingsParams memory,address,bytes32) external returns (address)"
                      }
                    },
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2649:136:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2627:158:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2346,
                        "name": "poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2331,
                        "src": "2822:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2343,
                        "name": "_poolsUnderManagement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2203,
                        "src": "2795:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2795:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:39:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2348,
                  "nodeType": "ExpressionStatement",
                  "src": "2795:39:17"
                },
                {
                  "expression": {
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2349,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2934,
                          "src": "2845:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2908_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 2351,
                        "indexExpression": {
                          "id": 2350,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2331,
                          "src": "2859:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2845:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$2908_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 2352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "poolName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2899,
                      "src": "2845:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2353,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2229,
                      "src": "2883:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2845:42:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:42:17"
                },
                {
                  "expression": {
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2356,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2934,
                          "src": "2897:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2908_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 2358,
                        "indexExpression": {
                          "id": 2357,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2331,
                          "src": "2911:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2897:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$2908_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 2359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "poolSymbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2901,
                      "src": "2897:37:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2360,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2231,
                      "src": "2937:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2897:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2362,
                  "nodeType": "ExpressionStatement",
                  "src": "2897:46:17"
                },
                {
                  "expression": {
                    "id": 2368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2363,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2934,
                          "src": "2953:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2908_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 2365,
                        "indexExpression": {
                          "id": 2364,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2331,
                          "src": "2967:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2953:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$2908_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 2366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tolerance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2903,
                      "src": "2953:36:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2367,
                      "name": "tolerance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2253,
                      "src": "2992:9:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2953:48:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2369,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:48:17"
                },
                {
                  "expression": {
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2370,
                          "name": "managedPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2934,
                          "src": "3011:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2908_storage_$",
                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                          }
                        },
                        "id": 2372,
                        "indexExpression": {
                          "id": 2371,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2331,
                          "src": "3025:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3011:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolSettings_$2908_storage",
                          "typeString": "struct PoolSettings storage ref"
                        }
                      },
                      "id": 2373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "poolTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2907,
                      "src": "3011:37:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage",
                        "typeString": "contract IERC20[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2374,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "3051:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "3011:46:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage",
                      "typeString": "contract IERC20[] storage ref"
                    }
                  },
                  "id": 2376,
                  "nodeType": "ExpressionStatement",
                  "src": "3011:46:17"
                }
              ]
            },
            "documentation": {
              "id": 2227,
              "nodeType": "StructuredDocumentation",
              "src": "745:724:17",
              "text": " @notice Create a new managed pool\n @param name - Pool name\n @param symbol - Symbol representing the pool\n @param tokens - Tokens in the pool\n @param normalizedWeights - Normalized weights in the pool\n @param assetManagers - Asset manager for the pool\n @param swapFeePercentage - Fee applied to swaps\n @param isSwapEnabledOnStart - Whether swaps are enabled straight away\n @param isMustAllowlistLPs - List of LP's allowed in the pool\n @param managementAumFeePercentage - Management Aum fee to apply\n @param aumFeeId - Aum Fee Id\n @param tolerance - Percentage devience \n @param salt - Salt used towards calculating pool address"
            },
            "functionSelector": "41bfc4bc",
            "id": 2378,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2258,
                "modifierName": {
                  "id": 2257,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "1906:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1906:10:17"
              },
              {
                "id": 2260,
                "modifierName": {
                  "id": 2259,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "1917:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1917:12:17"
              }
            ],
            "name": "createPool",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2229,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1503:18:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2228,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2231,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1531:20:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2230,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2235,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1561:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2233,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2232,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "1561:6:17"
                      },
                      "referencedDeclaration": 426,
                      "src": "1561:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 2234,
                    "nodeType": "ArrayTypeName",
                    "src": "1561:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2238,
                  "mutability": "mutable",
                  "name": "normalizedWeights",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1594:35:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2236,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1594:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2237,
                    "nodeType": "ArrayTypeName",
                    "src": "1594:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2241,
                  "mutability": "mutable",
                  "name": "assetManagers",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1639:31:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2239,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1639:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2240,
                    "nodeType": "ArrayTypeName",
                    "src": "1639:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2243,
                  "mutability": "mutable",
                  "name": "swapFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1680:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2245,
                  "mutability": "mutable",
                  "name": "isSwapEnabledOnStart",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1715:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2244,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1715:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2247,
                  "mutability": "mutable",
                  "name": "isMustAllowlistLPs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1750:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2246,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "managementAumFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1783:34:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2251,
                  "mutability": "mutable",
                  "name": "aumFeeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1827:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1827:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2253,
                  "mutability": "mutable",
                  "name": "tolerance",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1853:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2255,
                  "mutability": "mutable",
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 2378,
                  "src": "1880:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2254,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1493:405:17"
            },
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1930:0:17"
            },
            "scope": 2888,
            "src": "1474:1590:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2387,
              "nodeType": "Block",
              "src": "3243:45:17",
              "statements": [
                {
                  "expression": {
                    "id": 2385,
                    "name": "_poolsUnderManagement",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2203,
                    "src": "3260:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2384,
                  "id": 2386,
                  "nodeType": "Return",
                  "src": "3253:28:17"
                }
              ]
            },
            "documentation": {
              "id": 2379,
              "nodeType": "StructuredDocumentation",
              "src": "3070:93:17",
              "text": " @notice returns a list of pools under management by this controller"
            },
            "functionSelector": "8722081a",
            "id": 2388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolsUnderManagement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3200:2:17"
            },
            "returnParameters": {
              "id": 2384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2383,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2388,
                  "src": "3224:17:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2381,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3224:7:17",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2382,
                    "nodeType": "ArrayTypeName",
                    "src": "3224:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3223:19:17"
            },
            "scope": 2888,
            "src": "3168:120:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2425,
              "nodeType": "Block",
              "src": "4589:258:17",
              "statements": [
                {
                  "assignments": [
                    2408
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2408,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2425,
                      "src": "4599:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2407,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2406,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "4599:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "4599:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2409,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4599:24:17"
                },
                {
                  "expression": {
                    "id": 2414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2410,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2408,
                      "src": "4633:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2412,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2391,
                          "src": "4660:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2411,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "4647:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4647:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "4633:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2415,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2419,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2393,
                        "src": "4730:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2420,
                        "name": "endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
                        "src": "4753:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2421,
                        "name": "startSwapFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2397,
                        "src": "4774:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2422,
                        "name": "endSwapFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2399,
                        "src": "4810:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2416,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2408,
                        "src": "4682:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateSwapFeeGradually",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "4682:34:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,uint256) external"
                      }
                    },
                    "id": 2423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4682:158:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2424,
                  "nodeType": "ExpressionStatement",
                  "src": "4682:158:17"
                }
              ]
            },
            "documentation": {
              "id": 2389,
              "nodeType": "StructuredDocumentation",
              "src": "3294:1062:17",
              "text": " @notice Schedule a gradual swap fee update.\n @dev The swap fee will change from the given starting value (which may or may not be the current\n value) to the given ending fee percentage, over startTime to endTime.\n Note that calling this with a starting swap fee different from the current value will immediately change the\n current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`.\n Emits the GradualSwapFeeUpdateScheduled event.\n This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param startTime - The timestamp when the swap fee change will begin.\n @param endTime - The timestamp when the swap fee change will end (must be >= startTime).\n @param startSwapFeePercentage - The starting value for the swap fee change.\n @param endSwapFeePercentage - The ending value for the swap fee change. If the current timestamp >= endTime,\n `getSwapFeePercentage()` will return this value."
            },
            "functionSelector": "875e7cd9",
            "id": 2426,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2402,
                "modifierName": {
                  "id": 2401,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "4565:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4565:10:17"
              },
              {
                "id": 2404,
                "modifierName": {
                  "id": 2403,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "4576:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4576:12:17"
              }
            ],
            "name": "updateSwapFeeGradually",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2391,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "4402:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "4431:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4431:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2395,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "4458:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2397,
                  "mutability": "mutable",
                  "name": "startSwapFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "4483:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4483:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2399,
                  "mutability": "mutable",
                  "name": "endSwapFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "4523:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4523:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4392:165:17"
            },
            "returnParameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4589:0:17"
            },
            "scope": 2888,
            "src": "4361:486:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "6071:232:17",
              "statements": [
                {
                  "assignments": [
                    2449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2449,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2466,
                      "src": "6081:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2448,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2447,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "6081:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "6081:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2450,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6081:24:17"
                },
                {
                  "expression": {
                    "id": 2455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2451,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2449,
                      "src": "6115:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2453,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2429,
                          "src": "6142:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2452,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "6129:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6129:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "6115:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2456,
                  "nodeType": "ExpressionStatement",
                  "src": "6115:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2460,
                        "name": "startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2431,
                        "src": "6212:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2461,
                        "name": "endTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2433,
                        "src": "6235:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2462,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2437,
                        "src": "6256:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
                        "id": 2463,
                        "name": "endWeights",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2440,
                        "src": "6276:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 2457,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2449,
                        "src": "6164:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateWeightsGradually",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 123,
                      "src": "6164:34:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,contract IERC20[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 2464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6164:132:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2465,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:132:17"
                }
              ]
            },
            "documentation": {
              "id": 2427,
              "nodeType": "StructuredDocumentation",
              "src": "4853:992:17",
              "text": " @notice Schedule a gradual weight change.\n @dev The weights will change from their current values to the given endWeights, over startTime to endTime.\n This is a permissioned function.\n Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes,\n the weights always start from their current values. This also guarantees a smooth transition when\n updateWeightsGradually is called during an ongoing weight change.\n @param poolAddress - Address of pool being worked on.\n @param startTime - The timestamp when the weight change will begin.\n @param endTime - The timestamp when the weight change will end (can be >= startTime).\n @param tokens - The tokens associated with the target weights (must match the current pool tokens).\n @param endWeights - The target weights. If the current timestamp >= endTime, `getNormalizedWeights()`\n will return these values."
            },
            "functionSelector": "c90d3a04",
            "id": 2467,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2443,
                "modifierName": {
                  "id": 2442,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "6047:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "6047:10:17"
              },
              {
                "id": 2445,
                "modifierName": {
                  "id": 2444,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "6058:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "6058:12:17"
              }
            ],
            "name": "updateWeightsGradually",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "5891:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5891:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2431,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "5920:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5920:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2433,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "5947:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5947:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2437,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "5972:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2435,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2434,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "5972:6:17"
                      },
                      "referencedDeclaration": 426,
                      "src": "5972:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 2436,
                    "nodeType": "ArrayTypeName",
                    "src": "5972:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2440,
                  "mutability": "mutable",
                  "name": "endWeights",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "6005:28:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2438,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6005:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2439,
                    "nodeType": "ArrayTypeName",
                    "src": "6005:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5881:158:17"
            },
            "returnParameters": {
              "id": 2446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6071:0:17"
            },
            "scope": 2888,
            "src": "5850:453:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2481,
              "nodeType": "Block",
              "src": "6489:61:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2476,
                            "name": "poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2470,
                            "src": "6519:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2475,
                          "name": "IManagedPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "6506:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                            "typeString": "type(contract IManagedPool)"
                          }
                        },
                        "id": 2477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6506:25:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPoolId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 509,
                      "src": "6506:35:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 2479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6506:37:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2474,
                  "id": 2480,
                  "nodeType": "Return",
                  "src": "6499:44:17"
                }
              ]
            },
            "documentation": {
              "id": 2468,
              "nodeType": "StructuredDocumentation",
              "src": "6309:105:17",
              "text": " @notice Returns the pools Id\n @param poolAddress - Pool to get the Id for"
            },
            "functionSelector": "caa9a08d",
            "id": 2482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolId",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2470,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2482,
                  "src": "6438:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6438:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6437:21:17"
            },
            "returnParameters": {
              "id": 2474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2473,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2482,
                  "src": "6480:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6480:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6479:9:17"
            },
            "scope": 2888,
            "src": "6419:131:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2510,
              "nodeType": "Block",
              "src": "7028:149:17",
              "statements": [
                {
                  "assignments": [
                    2496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2496,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2510,
                      "src": "7038:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2495,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2494,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "7038:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "7038:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2497,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7038:24:17"
                },
                {
                  "expression": {
                    "id": 2502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2498,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2496,
                      "src": "7072:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2500,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "7099:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2499,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "7086:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7086:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "7072:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2503,
                  "nodeType": "ExpressionStatement",
                  "src": "7072:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2507,
                        "name": "isJoinExitEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2487,
                        "src": "7152:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2504,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2496,
                        "src": "7121:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setJoinExitEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 150,
                      "src": "7121:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7121:49:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2509,
                  "nodeType": "ExpressionStatement",
                  "src": "7121:49:17"
                }
              ]
            },
            "documentation": {
              "id": 2483,
              "nodeType": "StructuredDocumentation",
              "src": "6556:341:17",
              "text": " @notice Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\n @dev Emits the JoinExitEnabledSet event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param isJoinExitEnabled - The new value of the join/exit enabled flag."
            },
            "functionSelector": "556f1eb9",
            "id": 2511,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2490,
                "modifierName": {
                  "id": 2489,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "7004:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "7004:10:17"
              },
              {
                "id": 2492,
                "modifierName": {
                  "id": 2491,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "7015:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "7015:12:17"
              }
            ],
            "name": "setJoinExitEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2485,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2511,
                  "src": "6939:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6939:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "isJoinExitEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2511,
                  "src": "6968:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6968:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6929:67:17"
            },
            "returnParameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7028:0:17"
            },
            "scope": 2888,
            "src": "6902:275:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2525,
              "nodeType": "Block",
              "src": "7401:66:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2520,
                            "name": "poolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2514,
                            "src": "7431:11:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2519,
                          "name": "IManagedPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 285,
                          "src": "7418:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                            "typeString": "type(contract IManagedPool)"
                          }
                        },
                        "id": 2521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7418:25:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 168,
                      "src": "7418:40:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 2523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7418:42:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2518,
                  "id": 2524,
                  "nodeType": "Return",
                  "src": "7411:49:17"
                }
              ]
            },
            "documentation": {
              "id": 2512,
              "nodeType": "StructuredDocumentation",
              "src": "7183:141:17",
              "text": " @notice Returns the whether swapping is enabled for pool\n @param poolAddress - Pool to get the swap state for"
            },
            "functionSelector": "315fa765",
            "id": 2526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2514,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "7353:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7353:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7352:21:17"
            },
            "returnParameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2517,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2526,
                  "src": "7395:4:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2516,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7395:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7394:6:17"
            },
            "scope": 2888,
            "src": "7329:138:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2554,
              "nodeType": "Block",
              "src": "7864:141:17",
              "statements": [
                {
                  "assignments": [
                    2540
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2540,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2554,
                      "src": "7874:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2539,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2538,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "7874:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "7874:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2541,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7874:24:17"
                },
                {
                  "expression": {
                    "id": 2546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2542,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2540,
                      "src": "7908:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2544,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2529,
                          "src": "7935:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2543,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "7922:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7922:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "7908:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2547,
                  "nodeType": "ExpressionStatement",
                  "src": "7908:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2551,
                        "name": "isSwapEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2531,
                        "src": "7984:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2548,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "7957:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSwapEnabled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 162,
                      "src": "7957:26:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7957:41:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2553,
                  "nodeType": "ExpressionStatement",
                  "src": "7957:41:17"
                }
              ]
            },
            "documentation": {
              "id": 2527,
              "nodeType": "StructuredDocumentation",
              "src": "7473:268:17",
              "text": " @notice Enable or disable trading.\n @dev Emits the SwapEnabledSet event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param isSwapEnabled - The new value of the swap enabled flag."
            },
            "functionSelector": "51d48cea",
            "id": 2555,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2534,
                "modifierName": {
                  "id": 2533,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "7840:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "7840:10:17"
              },
              {
                "id": 2536,
                "modifierName": {
                  "id": 2535,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "7851:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "7851:12:17"
              }
            ],
            "name": "setSwapEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2529,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2555,
                  "src": "7779:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7779:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2531,
                  "mutability": "mutable",
                  "name": "isSwapEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 2555,
                  "src": "7808:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7808:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7769:63:17"
            },
            "returnParameters": {
              "id": 2537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7864:0:17"
            },
            "scope": 2888,
            "src": "7746:259:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2583,
              "nodeType": "Block",
              "src": "8626:151:17",
              "statements": [
                {
                  "assignments": [
                    2569
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2569,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2583,
                      "src": "8636:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2568,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2567,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "8636:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "8636:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2570,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8636:24:17"
                },
                {
                  "expression": {
                    "id": 2575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2571,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2569,
                      "src": "8670:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2573,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2558,
                          "src": "8697:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2572,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "8684:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8684:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "8670:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2576,
                  "nodeType": "ExpressionStatement",
                  "src": "8670:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2580,
                        "name": "isMustAllowlistLPs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2560,
                        "src": "8751:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 2577,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2569,
                        "src": "8719:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setMustAllowlistLPs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 174,
                      "src": "8719:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 2581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8719:51:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2582,
                  "nodeType": "ExpressionStatement",
                  "src": "8719:51:17"
                }
              ]
            },
            "documentation": {
              "id": 2556,
              "nodeType": "StructuredDocumentation",
              "src": "8011:482:17",
              "text": " @notice Enable or disable the LP allowlist.\n @dev Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and\n back on again, because this action does not affect the list of LP addresses.\n Emits the MustAllowlistLPsSet event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param isMustAllowlistLPs - The new value of the mustAllowlistLPs flag."
            },
            "functionSelector": "2abbd3ad",
            "id": 2584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2563,
                "modifierName": {
                  "id": 2562,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "8602:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "8602:10:17"
              },
              {
                "id": 2565,
                "modifierName": {
                  "id": 2564,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "8613:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "8613:12:17"
              }
            ],
            "name": "setMustAllowlistLPs",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2558,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "8536:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8536:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2560,
                  "mutability": "mutable",
                  "name": "isMustAllowlistLPs",
                  "nodeType": "VariableDeclaration",
                  "scope": 2584,
                  "src": "8565:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2559,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8565:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8526:68:17"
            },
            "returnParameters": {
              "id": 2566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8626:0:17"
            },
            "scope": 2888,
            "src": "8498:279:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2612,
              "nodeType": "Block",
              "src": "9241:137:17",
              "statements": [
                {
                  "assignments": [
                    2598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2598,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2612,
                      "src": "9251:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2597,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2596,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "9251:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "9251:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2599,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9251:24:17"
                },
                {
                  "expression": {
                    "id": 2604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2600,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2598,
                      "src": "9285:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2602,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2587,
                          "src": "9312:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2601,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "9299:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9299:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "9285:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2605,
                  "nodeType": "ExpressionStatement",
                  "src": "9285:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2609,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "9364:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2606,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2598,
                        "src": "9334:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAllowedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 180,
                      "src": "9334:29:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9334:37:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2611,
                  "nodeType": "ExpressionStatement",
                  "src": "9334:37:17"
                }
              ]
            },
            "documentation": {
              "id": 2585,
              "nodeType": "StructuredDocumentation",
              "src": "8783:336:17",
              "text": " @notice Adds an address to the LP allowlist.\n @dev Will fail if the address is already allowlisted.\n Emits the AllowlistAddressAdded event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param member - The address to be added to the allowlist."
            },
            "functionSelector": "abd796bf",
            "id": 2613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2592,
                "modifierName": {
                  "id": 2591,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "9217:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9217:10:17"
              },
              {
                "id": 2594,
                "modifierName": {
                  "id": 2593,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "9228:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9228:12:17"
              }
            ],
            "name": "addAllowedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2587,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "9160:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9160:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2589,
                  "mutability": "mutable",
                  "name": "member",
                  "nodeType": "VariableDeclaration",
                  "scope": 2613,
                  "src": "9189:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9189:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9150:59:17"
            },
            "returnParameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9241:0:17"
            },
            "scope": 2888,
            "src": "9124:254:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2641,
              "nodeType": "Block",
              "src": "9744:140:17",
              "statements": [
                {
                  "assignments": [
                    2627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2627,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2641,
                      "src": "9754:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2626,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2625,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "9754:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "9754:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2628,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9754:24:17"
                },
                {
                  "expression": {
                    "id": 2633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2629,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2627,
                      "src": "9788:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2631,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2616,
                          "src": "9815:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2630,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "9802:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9802:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "9788:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2634,
                  "nodeType": "ExpressionStatement",
                  "src": "9788:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2638,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2618,
                        "src": "9870:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2635,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2627,
                        "src": "9837:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAllowedAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 186,
                      "src": "9837:32:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:40:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2640,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:40:17"
                }
              ]
            },
            "documentation": {
              "id": 2614,
              "nodeType": "StructuredDocumentation",
              "src": "9384:235:17",
              "text": " @notice Removes an address from the _poolAddress - Address of pool being worked on.\n @param poolAddress - Pool address being worked on\n @param member - The address to be removed from the allowlist."
            },
            "functionSelector": "e4444feb",
            "id": 2642,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2621,
                "modifierName": {
                  "id": 2620,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "9720:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9720:10:17"
              },
              {
                "id": 2623,
                "modifierName": {
                  "id": 2622,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "9731:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "9731:12:17"
              }
            ],
            "name": "removeAllowedAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2616,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "9663:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9663:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2618,
                  "mutability": "mutable",
                  "name": "member",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "9692:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9692:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9653:59:17"
            },
            "returnParameters": {
              "id": 2624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9744:0:17"
            },
            "scope": 2888,
            "src": "9624:260:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2667,
              "nodeType": "Block",
              "src": "10453:138:17",
              "statements": [
                {
                  "assignments": [
                    2654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2654,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2667,
                      "src": "10463:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2653,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2652,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "10463:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "10463:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2655,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10463:24:17"
                },
                {
                  "expression": {
                    "id": 2660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2656,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2654,
                      "src": "10497:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2658,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2645,
                          "src": "10524:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2657,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "10511:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10511:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "10497:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2661,
                  "nodeType": "ExpressionStatement",
                  "src": "10497:39:17"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2662,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2654,
                        "src": "10546:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collectAumManagementFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 206,
                      "src": "10546:36:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10546:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "10546:38:17"
                }
              ]
            },
            "documentation": {
              "id": 2643,
              "nodeType": "StructuredDocumentation",
              "src": "9890:458:17",
              "text": " @notice Collect any accrued AUM fees and send them to the pool manager.\n @dev This can be called by anyone to collect accrued AUM fees - and will be called automatically\n whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee\n percentage is changed by the manager, to prevent fees from being applied retroactively.\n @param poolAddress - Address of pool being worked on."
            },
            "functionSelector": "404ac21e",
            "id": 2668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2648,
                "modifierName": {
                  "id": 2647,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "10429:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "10429:10:17"
              },
              {
                "id": 2650,
                "modifierName": {
                  "id": 2649,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "10440:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "10440:12:17"
              }
            ],
            "name": "collectAumManagementFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2645,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2668,
                  "src": "10396:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10396:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10386:35:17"
            },
            "returnParameters": {
              "id": 2651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10453:0:17"
            },
            "scope": 2888,
            "src": "10353:238:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2696,
              "nodeType": "Block",
              "src": "11334:169:17",
              "statements": [
                {
                  "assignments": [
                    2682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2682,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2696,
                      "src": "11344:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2681,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2680,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "11344:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "11344:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2683,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11344:24:17"
                },
                {
                  "expression": {
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2684,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2682,
                      "src": "11378:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2686,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2671,
                          "src": "11405:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2685,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "11392:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11392:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "11378:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2689,
                  "nodeType": "ExpressionStatement",
                  "src": "11378:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2693,
                        "name": "managementAumFeePercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2673,
                        "src": "11469:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2690,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2682,
                        "src": "11427:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setManagementAumFeePercentage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 214,
                      "src": "11427:41:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 2694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11427:69:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2695,
                  "nodeType": "ExpressionStatement",
                  "src": "11427:69:17"
                }
              ]
            },
            "documentation": {
              "id": 2669,
              "nodeType": "StructuredDocumentation",
              "src": "10597:583:17",
              "text": " @notice Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\n @dev Attempting to collect AUM fees in excess of the maximum permitted percentage will revert.\n To avoid retroactive fee increases, we force collection at the current fee percentage before processing\n the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param managementAumFeePercentage - The new management AUM fee percentage."
            },
            "functionSelector": "42da1cb1",
            "id": 2697,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2676,
                "modifierName": {
                  "id": 2675,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "11310:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "11310:10:17"
              },
              {
                "id": 2678,
                "modifierName": {
                  "id": 2677,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "11321:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "11321:12:17"
              }
            ],
            "name": "setManagementAumFeePercentage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2671,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2697,
                  "src": "11233:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2670,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11233:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2673,
                  "mutability": "mutable",
                  "name": "managementAumFeePercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2697,
                  "src": "11262:34:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11262:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11223:79:17"
            },
            "returnParameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11334:0:17"
            },
            "scope": 2888,
            "src": "11185:318:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2739,
              "nodeType": "Block",
              "src": "12522:253:17",
              "statements": [
                {
                  "assignments": [
                    2722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2722,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2739,
                      "src": "12532:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2720,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "12532:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "12532:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2723,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12532:24:17"
                },
                {
                  "expression": {
                    "id": 2728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2724,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2722,
                      "src": "12566:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2726,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2700,
                          "src": "12593:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2725,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "12580:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12580:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "12566:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2729,
                  "nodeType": "ExpressionStatement",
                  "src": "12566:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2733,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2704,
                        "src": "12659:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
                        "id": 2734,
                        "name": "bptPrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2707,
                        "src": "12679:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2735,
                        "name": "lowerBoundPercentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2710,
                        "src": "12702:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 2736,
                        "name": "upperBoundPercentages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2713,
                        "src": "12737:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 2730,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2722,
                        "src": "12615:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCircuitBreakers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 239,
                      "src": "12615:30:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20[] memory,uint256[] memory,uint256[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 2737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12615:153:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2738,
                  "nodeType": "ExpressionStatement",
                  "src": "12615:153:17"
                }
              ]
            },
            "documentation": {
              "id": 2698,
              "nodeType": "StructuredDocumentation",
              "src": "11509:746:17",
              "text": " @notice Set a circuit breaker for one or more tokens.\n @dev This is a permissioned function. The lower and upper bounds are percentages, corresponding to a\n relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent\n trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\n @param poolAddress - Pool to have a circruit breaker set\n @param tokens - Tokens in the pool\n @param bptPrices - Token prices to for the circuit breaker\n @param lowerBoundPercentages - The lower limit to trigger the circuit breaker\n @param upperBoundPercentages - The upper limit to trigger the circuit breaker"
            },
            "functionSelector": "458aa92b",
            "id": 2740,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2716,
                "modifierName": {
                  "id": 2715,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "12498:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "12498:10:17"
              },
              {
                "id": 2718,
                "modifierName": {
                  "id": 2717,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "12509:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "12509:12:17"
              }
            ],
            "name": "setCircuitBreakers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2700,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "12297:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12297:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2704,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "12326:23:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2702,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2701,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 426,
                        "src": "12326:6:17"
                      },
                      "referencedDeclaration": 426,
                      "src": "12326:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 2703,
                    "nodeType": "ArrayTypeName",
                    "src": "12326:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2707,
                  "mutability": "mutable",
                  "name": "bptPrices",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "12359:27:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2705,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12359:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2706,
                    "nodeType": "ArrayTypeName",
                    "src": "12359:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2710,
                  "mutability": "mutable",
                  "name": "lowerBoundPercentages",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "12396:39:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2708,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12396:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2709,
                    "nodeType": "ArrayTypeName",
                    "src": "12396:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2713,
                  "mutability": "mutable",
                  "name": "upperBoundPercentages",
                  "nodeType": "VariableDeclaration",
                  "scope": 2740,
                  "src": "12445:39:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2711,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12445:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2712,
                    "nodeType": "ArrayTypeName",
                    "src": "12445:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12287:203:17"
            },
            "returnParameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12522:0:17"
            },
            "scope": 2888,
            "src": "12260:515:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2781,
              "nodeType": "Block",
              "src": "14419:267:17",
              "statements": [
                {
                  "assignments": [
                    2763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2763,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2781,
                      "src": "14429:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2762,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2761,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "14429:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "14429:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2764,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14429:24:17"
                },
                {
                  "expression": {
                    "id": 2769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2765,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2763,
                      "src": "14463:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2767,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2743,
                          "src": "14490:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2766,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "14477:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14477:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "14463:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2770,
                  "nodeType": "ExpressionStatement",
                  "src": "14463:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2774,
                        "name": "tokenToAdd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2746,
                        "src": "14546:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2775,
                        "name": "assetManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2748,
                        "src": "14570:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2776,
                        "name": "tokenToAddNormalizedWeight",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2750,
                        "src": "14596:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2777,
                        "name": "mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2752,
                        "src": "14636:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2778,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2754,
                        "src": "14660:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2771,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2763,
                        "src": "14512:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 273,
                      "src": "14512:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$426_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,uint256,address) external"
                      }
                    },
                    "id": 2779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14512:167:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2780,
                  "nodeType": "ExpressionStatement",
                  "src": "14512:167:17"
                }
              ]
            },
            "documentation": {
              "id": 2741,
              "nodeType": "StructuredDocumentation",
              "src": "12781:1393:17",
              "text": " @notice Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\n @dev By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new\n token will have no balance - it is up to the owner to provide some immediately after calling this function.\n Note however that regular join functions will not work while the new token has no balance: the only way to\n deposit an initial amount is by using an Asset Manager.\n Token addition is forbidden during a weight change, or if one is scheduled to happen in the future.\n The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be\n useful in some scenarios to account for the fact that the Pool will have more tokens.\n Emits the TokenAdded event.\n @param poolAddress - Address of pool being worked on.\n @param tokenToAdd - The ERC20 token to be added to the Pool.\n @param assetManager - The Asset Manager for the token.\n @param tokenToAddNormalizedWeight - The normalized weight of `token` relative to the other tokens in the Pool.\n @param mintAmount - The amount of BPT to be minted as a result of adding `token` to the Pool.\n @param recipient - The address to receive the BPT minted by the Pool."
            },
            "functionSelector": "21f1e0cd",
            "id": 2782,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2757,
                "modifierName": {
                  "id": 2756,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "14395:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "14395:10:17"
              },
              {
                "id": 2759,
                "modifierName": {
                  "id": 2758,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "14406:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "14406:12:17"
              }
            ],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2743,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "14206:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14206:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2746,
                  "mutability": "mutable",
                  "name": "tokenToAdd",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "14235:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$426",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2745,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2744,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "14235:6:17"
                    },
                    "referencedDeclaration": 426,
                    "src": "14235:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2748,
                  "mutability": "mutable",
                  "name": "assetManager",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "14262:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14262:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2750,
                  "mutability": "mutable",
                  "name": "tokenToAddNormalizedWeight",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "14292:34:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14292:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2752,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "14336:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2751,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14336:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2754,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 2782,
                  "src": "14364:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14364:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14196:191:17"
            },
            "returnParameters": {
              "id": 2760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14419:0:17"
            },
            "scope": 2888,
            "src": "14179:507:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2817,
              "nodeType": "Block",
              "src": "15805:158:17",
              "statements": [
                {
                  "assignments": [
                    2801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2801,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2817,
                      "src": "15815:24:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 2800,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2799,
                          "name": "IManagedPool",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "15815:12:17"
                        },
                        "referencedDeclaration": 285,
                        "src": "15815:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2802,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15815:24:17"
                },
                {
                  "expression": {
                    "id": 2807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2803,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2801,
                      "src": "15849:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2805,
                          "name": "poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2785,
                          "src": "15876:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2804,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "15863:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 2806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15863:25:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "15849:39:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 2808,
                  "nodeType": "ExpressionStatement",
                  "src": "15849:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2812,
                        "name": "tokenToRemove",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2788,
                        "src": "15922:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 2813,
                        "name": "burnAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2790,
                        "src": "15937:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2814,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "15949:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2809,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2801,
                        "src": "15898:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 2811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 284,
                      "src": "15898:23:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$426_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,uint256,address) external"
                      }
                    },
                    "id": 2815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15898:58:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2816,
                  "nodeType": "ExpressionStatement",
                  "src": "15898:58:17"
                }
              ]
            },
            "documentation": {
              "id": 2783,
              "nodeType": "StructuredDocumentation",
              "src": "14692:939:17",
              "text": " @notice Removes a token from the Pool's list of tradeable tokens.\n @dev Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not\n including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in\n the future.\n Emits the TokenRemoved event. This is a permissioned function.\n The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful\n in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\n @param poolAddress - Address of pool being worked on.\n @param tokenToRemove - The ERC20 token to be removed from the Pool.\n @param burnAmount - The amount of BPT to be burned after removing `token` from the Pool.\n @param sender - The address to burn BPT from."
            },
            "functionSelector": "cbe04b0c",
            "id": 2818,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2795,
                "modifierName": {
                  "id": 2794,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "15781:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "15781:10:17"
              },
              {
                "id": 2797,
                "modifierName": {
                  "id": 2796,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "15792:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "15792:12:17"
              }
            ],
            "name": "removeToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2785,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "15666:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15666:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2788,
                  "mutability": "mutable",
                  "name": "tokenToRemove",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "15695:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$426",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2787,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2786,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "15695:6:17"
                    },
                    "referencedDeclaration": 426,
                    "src": "15695:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2790,
                  "mutability": "mutable",
                  "name": "burnAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "15725:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15725:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2792,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "15753:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15753:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15656:117:17"
            },
            "returnParameters": {
              "id": 2798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15805:0:17"
            },
            "scope": 2888,
            "src": "15636:327:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2850,
              "nodeType": "Block",
              "src": "16411:123:17",
              "statements": [
                {
                  "assignments": [
                    2834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2834,
                      "mutability": "mutable",
                      "name": "_token",
                      "nodeType": "VariableDeclaration",
                      "scope": 2850,
                      "src": "16421:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2833,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2832,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 426,
                          "src": "16421:6:17"
                        },
                        "referencedDeclaration": 426,
                        "src": "16421:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2838,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2836,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2823,
                        "src": "16444:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2835,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "16437:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16437:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16421:36:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2844,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "16495:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseController_$2888",
                              "typeString": "contract BaseController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseController_$2888",
                              "typeString": "contract BaseController"
                            }
                          ],
                          "id": 2843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16487:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2842,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16487:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16487:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2846,
                        "name": "recipientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2821,
                        "src": "16502:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2847,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "16520:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2839,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2834,
                        "src": "16467:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 407,
                      "src": "16467:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16467:60:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2849,
                  "nodeType": "ExpressionStatement",
                  "src": "16467:60:17"
                }
              ]
            },
            "documentation": {
              "id": 2819,
              "nodeType": "StructuredDocumentation",
              "src": "15969:289:17",
              "text": " @notice Withdraw tokens from controller\n @dev Transfers an amount of an ERC20 token\n @param recipientAddress - Address of wallet receiving funds.\n @param tokenAddress - Address of token to be withdrawn.\n @param amount - Amount to withdraw."
            },
            "functionSelector": "1c20fadd",
            "id": 2851,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2828,
                "modifierName": {
                  "id": 2827,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "16387:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16387:10:17"
              },
              {
                "id": 2830,
                "modifierName": {
                  "id": 2829,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "16398:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16398:12:17"
              }
            ],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2821,
                  "mutability": "mutable",
                  "name": "recipientAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2851,
                  "src": "16295:24:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16295:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2823,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2851,
                  "src": "16329:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16329:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2825,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2851,
                  "src": "16359:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16359:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16285:94:17"
            },
            "returnParameters": {
              "id": 2831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16411:0:17"
            },
            "scope": 2888,
            "src": "16263:271:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2886,
              "nodeType": "Block",
              "src": "16910:115:17",
              "statements": [
                {
                  "assignments": [
                    2869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2869,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 2886,
                      "src": "16920:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$426",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2868,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2867,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 426,
                          "src": "16920:6:17"
                        },
                        "referencedDeclaration": 426,
                        "src": "16920:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2873,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2871,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2856,
                        "src": "16942:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2870,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 426,
                      "src": "16935:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$426_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16935:20:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16920:35:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2877,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "16984:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "16984:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2881,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "17004:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BaseController_$2888",
                              "typeString": "contract BaseController"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BaseController_$2888",
                              "typeString": "contract BaseController"
                            }
                          ],
                          "id": 2880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16996:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2879,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16996:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16996:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2883,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2854,
                        "src": "17011:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2874,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2869,
                        "src": "16965:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$426",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 407,
                      "src": "16965:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16965:53:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2885,
                  "nodeType": "ExpressionStatement",
                  "src": "16965:53:17"
                }
              ]
            },
            "documentation": {
              "id": 2852,
              "nodeType": "StructuredDocumentation",
              "src": "16540:217:17",
              "text": " @notice Deposit tokens to controller\n @dev Transfers an amount of an ERC20 token\n @param amount - Amount to deposit.\n @param tokenAddress - Address of token to be deposited."
            },
            "functionSelector": "4f6300a2",
            "id": 2887,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2859,
                "modifierName": {
                  "id": 2858,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3528,
                  "src": "16849:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16849:10:17"
              },
              {
                "id": 2861,
                "modifierName": {
                  "id": 2860,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1275,
                  "src": "16860:12:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16860:12:17"
              },
              {
                "arguments": [
                  {
                    "id": 2863,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2854,
                    "src": "16888:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2864,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2856,
                    "src": "16896:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2865,
                "modifierName": {
                  "id": 2862,
                  "name": "checkAllowance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3559,
                  "src": "16873:14:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "16873:36:17"
              }
            ],
            "name": "depositTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2854,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2887,
                  "src": "16794:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2853,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16794:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2856,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2887,
                  "src": "16815:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16815:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16784:57:17"
            },
            "returnParameters": {
              "id": 2866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16910:0:17"
            },
            "scope": 2888,
            "src": "16762:263:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2889,
        "src": "160:16867:17"
      }
    ],
    "src": "33:16995:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-08-11T15:54:04.423Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAllowedAddress(address,address)": {
        "details": "Will fail if the address is already allowlisted. Emits the AllowlistAddressAdded event. This is a permissioned function.",
        "params": {
          "member": "- The address to be added to the allowlist.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "addToken(address,address,address,uint256,uint256,address)": {
        "details": "By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new token will have no balance - it is up to the owner to provide some immediately after calling this function. Note however that regular join functions will not work while the new token has no balance: the only way to deposit an initial amount is by using an Asset Manager. Token addition is forbidden during a weight change, or if one is scheduled to happen in the future. The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be useful in some scenarios to account for the fact that the Pool will have more tokens. Emits the TokenAdded event.",
        "params": {
          "assetManager": "- The Asset Manager for the token.",
          "mintAmount": "- The amount of BPT to be minted as a result of adding `token` to the Pool.",
          "poolAddress": "- Address of pool being worked on.",
          "recipient": "- The address to receive the BPT minted by the Pool.",
          "tokenToAdd": "- The ERC20 token to be added to the Pool.",
          "tokenToAddNormalizedWeight": "- The normalized weight of `token` relative to the other tokens in the Pool."
        }
      },
      "calculateBalancing(address)": {
        "params": {
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "collectAumManagementFees(address)": {
        "details": "This can be called by anyone to collect accrued AUM fees - and will be called automatically whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee percentage is changed by the manager, to prevent fees from being applied retroactively.",
        "params": {
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "constructor": {
        "params": {
          "supportedManagedPoolFactory": "- Managed pool contract address",
          "vaultAddress": "- Vault contract address"
        }
      },
      "createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256,uint256,bytes32)": {
        "params": {
          "assetManagers": "- Asset manager for the pool",
          "aumFeeId": "- Aum Fee Id",
          "isMustAllowlistLPs": "- List of LP's allowed in the pool",
          "isSwapEnabledOnStart": "- Whether swaps are enabled straight away",
          "managementAumFeePercentage": "- Management Aum fee to apply",
          "name": "- Pool name",
          "normalizedWeights": "- Normalized weights in the pool",
          "salt": "- Salt used towards calculating pool address",
          "swapFeePercentage": "- Fee applied to swaps",
          "symbol": "- Symbol representing the pool",
          "tokens": "- Tokens in the pool",
          "tolerance": "- Percentage devience "
        }
      },
      "depositTokens(uint256,address)": {
        "details": "Transfers an amount of an ERC20 token",
        "params": {
          "amount": "- Amount to deposit.",
          "tokenAddress": "- Address of token to be deposited."
        }
      },
      "getPoolId(address)": {
        "params": {
          "poolAddress": "- Pool to get the Id for"
        }
      },
      "getSwapEnabled(address)": {
        "params": {
          "poolAddress": "- Pool to get the swap state for"
        }
      },
      "getTokenPrice(address)": {
        "params": {
          "value": "- Address to find"
        }
      },
      "removeAllowedAddress(address,address)": {
        "params": {
          "member": "- The address to be removed from the allowlist.",
          "poolAddress": "- Pool address being worked on"
        }
      },
      "removeToken(address,address,uint256,address)": {
        "details": "Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in the future. Emits the TokenRemoved event. This is a permissioned function. The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.",
        "params": {
          "burnAmount": "- The amount of BPT to be burned after removing `token` from the Pool.",
          "poolAddress": "- Address of pool being worked on.",
          "sender": "- The address to burn BPT from.",
          "tokenToRemove": "- The ERC20 token to be removed from the Pool."
        }
      },
      "setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])": {
        "details": "This is a permissioned function. The lower and upper bounds are percentages, corresponding to a relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent trades that result in the value of the token dropping 20% or more relative to the rest of the pool.",
        "params": {
          "bptPrices": "- Token prices to for the circuit breaker",
          "lowerBoundPercentages": "- The lower limit to trigger the circuit breaker",
          "poolAddress": "- Pool to have a circruit breaker set",
          "tokens": "- Tokens in the pool",
          "upperBoundPercentages": "- The upper limit to trigger the circuit breaker"
        }
      },
      "setJoinExitEnabled(address,bool)": {
        "details": "Emits the JoinExitEnabledSet event. This is a permissioned function.",
        "params": {
          "isJoinExitEnabled": "- The new value of the join/exit enabled flag.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "setManagementAumFeePercentage(address,uint256)": {
        "details": "Attempting to collect AUM fees in excess of the maximum permitted percentage will revert. To avoid retroactive fee increases, we force collection at the current fee percentage before processing the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.",
        "params": {
          "managementAumFeePercentage": "- The new management AUM fee percentage.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "setMustAllowlistLPs(address,bool)": {
        "details": "Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and back on again, because this action does not affect the list of LP addresses. Emits the MustAllowlistLPsSet event. This is a permissioned function.",
        "params": {
          "isMustAllowlistLPs": "- The new value of the mustAllowlistLPs flag.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "setSwapEnabled(address,bool)": {
        "details": "Emits the SwapEnabledSet event. This is a permissioned function.",
        "params": {
          "isSwapEnabled": "- The new value of the swap enabled flag.",
          "poolAddress": "- Address of pool being worked on."
        }
      },
      "transferManagement(address)": {
        "details": "Only one manager can presently be set",
        "params": {
          "supportedManager": "- New manager."
        }
      },
      "updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)": {
        "details": "The swap fee will change from the given starting value (which may or may not be the current value) to the given ending fee percentage, over startTime to endTime. Note that calling this with a starting swap fee different from the current value will immediately change the current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`. Emits the GradualSwapFeeUpdateScheduled event. This is a permissioned function.",
        "params": {
          "endSwapFeePercentage": "- The ending value for the swap fee change. If the current timestamp >= endTime, `getSwapFeePercentage()` will return this value.",
          "endTime": "- The timestamp when the swap fee change will end (must be >= startTime).",
          "poolAddress": "- Address of pool being worked on.",
          "startSwapFeePercentage": "- The starting value for the swap fee change.",
          "startTime": "- The timestamp when the swap fee change will begin."
        }
      },
      "updateWeightsGradually(address,uint256,uint256,address[],uint256[])": {
        "details": "The weights will change from their current values to the given endWeights, over startTime to endTime. This is a permissioned function. Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes, the weights always start from their current values. This also guarantees a smooth transition when updateWeightsGradually is called during an ongoing weight change.",
        "params": {
          "endTime": "- The timestamp when the weight change will end (can be >= startTime).",
          "endWeights": "- The target weights. If the current timestamp >= endTime, `getNormalizedWeights()` will return these values.",
          "poolAddress": "- Address of pool being worked on.",
          "startTime": "- The timestamp when the weight change will begin.",
          "tokens": "- The tokens associated with the target weights (must match the current pool tokens)."
        }
      },
      "withdrawFunds(address,address,uint256)": {
        "details": "Transfers an amount of an ERC20 token",
        "params": {
          "amount": "- Amount to withdraw.",
          "recipientAddress": "- Address of wallet receiving funds.",
          "tokenAddress": "- Address of token to be withdrawn."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAllowedAddress(address,address)": {
        "notice": "Adds an address to the LP allowlist."
      },
      "addToken(address,address,address,uint256,uint256,address)": {
        "notice": "Adds a token to the Pool's list of tradeable tokens. This is a permissioned function."
      },
      "calculateBalancing(address)": {
        "notice": "Calculates a number of tokens to add or remove to rebalance pricing"
      },
      "collectAumManagementFees(address)": {
        "notice": "Collect any accrued AUM fees and send them to the pool manager."
      },
      "constructor": {
        "notice": "Constructor for the controller base class"
      },
      "createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256,uint256,bytes32)": {
        "notice": "Create a new managed pool"
      },
      "depositTokens(uint256,address)": {
        "notice": "Deposit tokens to controller"
      },
      "getPoolId(address)": {
        "notice": "Returns the pools Id"
      },
      "getPoolsUnderManagement()": {
        "notice": "returns a list of pools under management by this controller"
      },
      "getSwapEnabled(address)": {
        "notice": "Returns the whether swapping is enabled for pool"
      },
      "getTokenPrice(address)": {
        "notice": "returns the oracle supplied price for the requested token"
      },
      "removeAllowedAddress(address,address)": {
        "notice": "Removes an address from the _poolAddress - Address of pool being worked on."
      },
      "removeToken(address,address,uint256,address)": {
        "notice": "Removes a token from the Pool's list of tradeable tokens."
      },
      "setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])": {
        "notice": "Set a circuit breaker for one or more tokens."
      },
      "setJoinExitEnabled(address,bool)": {
        "notice": "Enable or disable joins and exits. Note that this does not affect Recovery Mode exits."
      },
      "setManagementAumFeePercentage(address,uint256)": {
        "notice": "Setter for the yearly percentage AUM management fee, which is payable to the pool manager."
      },
      "setMustAllowlistLPs(address,bool)": {
        "notice": "Enable or disable the LP allowlist."
      },
      "setSwapEnabled(address,bool)": {
        "notice": "Enable or disable trading."
      },
      "transferManagement(address)": {
        "notice": "Transfer the manager to a new address"
      },
      "updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)": {
        "notice": "Schedule a gradual swap fee update."
      },
      "updateWeightsGradually(address,uint256,uint256,address[],uint256[])": {
        "notice": "Schedule a gradual weight change."
      },
      "withdrawFunds(address,address,uint256)": {
        "notice": "Withdraw tokens from controller"
      }
    },
    "version": 1
  }
}