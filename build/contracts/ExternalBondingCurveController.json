{
  "contractName": "ExternalBondingCurveController",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vaultAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_managedPoolFactory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "addAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_tokenToAdd",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_assetManager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenToAddNormalizedWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "collectAumManagementFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_normalizedWeights",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "_assetManagers",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_swapEnabledOnStart",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_mustAllowlistLPs",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_managementAumFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_aumFeeId",
          "type": "uint256"
        }
      ],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "removeAllowedAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_tokenToRemove",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_burnAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "removeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_bptPrices",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_lowerBoundPercentages",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_upperBoundPercentages",
          "type": "uint256[]"
        }
      ],
      "name": "setCircuitBreakers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_joinExitEnabled",
          "type": "bool"
        }
      ],
      "name": "setJoinExitEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_managementAumFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "setManagementAumFeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_mustAllowlistLPs",
          "type": "bool"
        }
      ],
      "name": "setMustAllowlistLPs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_swapEnabled",
          "type": "bool"
        }
      ],
      "name": "setSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_prices",
          "type": "uint256[]"
        }
      ],
      "name": "setTargetPoolPrices",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "transferManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startSwapFeePercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endSwapFeePercentage",
          "type": "uint256"
        }
      ],
      "name": "updateSwapFeeGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_endWeights",
          "type": "uint256[]"
        }
      ],
      "name": "updateWeightsGradually",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipientAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolAddress",
          "type": "address"
        }
      ],
      "name": "runCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_managedPoolFactory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"addAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenToAdd\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_assetManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenToAddNormalizedWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"collectAumManagementFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_normalizedWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_assetManagers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_swapEnabledOnStart\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_mustAllowlistLPs\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_managementAumFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_aumFeeId\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"removeAllowedAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenToRemove\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_burnAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"}],\"name\":\"runCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bptPrices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_lowerBoundPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_upperBoundPercentages\",\"type\":\"uint256[]\"}],\"name\":\"setCircuitBreakers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_joinExitEnabled\",\"type\":\"bool\"}],\"name\":\"setJoinExitEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_managementAumFeePercentage\",\"type\":\"uint256\"}],\"name\":\"setManagementAumFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_mustAllowlistLPs\",\"type\":\"bool\"}],\"name\":\"setMustAllowlistLPs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_swapEnabled\",\"type\":\"bool\"}],\"name\":\"setSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_prices\",\"type\":\"uint256[]\"}],\"name\":\"setTargetPoolPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"transferManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startSwapFeePercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endSwapFeePercentage\",\"type\":\"uint256\"}],\"name\":\"updateSwapFeeGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_endWeights\",\"type\":\"uint256[]\"}],\"name\":\"updateWeightsGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAllowedAddress(address,address)\":{\"details\":\"Will fail if the address is already allowlisted. Emits the AllowlistAddressAdded event. This is a permissioned function.\",\"params\":{\"_member\":\"- The address to be added to the allowlist.\",\"_poolAddress\":\"- Address of pool being worked on.\"}},\"addToken(address,address,address,uint256,uint256,address)\":{\"details\":\"By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new token will have no balance - it is up to the owner to provide some immediately after calling this function. Note however that regular join functions will not work while the new token has no balance: the only way to deposit an initial amount is by using an Asset Manager. Token addition is forbidden during a weight change, or if one is scheduled to happen in the future. The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be useful in some scenarios to account for the fact that the Pool will have more tokens. Emits the TokenAdded event.\",\"params\":{\"_assetManager\":\"- The Asset Manager for the token.\",\"_mintAmount\":\"- The amount of BPT to be minted as a result of adding `token` to the Pool.\",\"_poolAddress\":\"- Address of pool being worked on.\",\"_recipient\":\"- The address to receive the BPT minted by the Pool.\",\"_tokenToAdd\":\"- The ERC20 token to be added to the Pool.\",\"_tokenToAddNormalizedWeight\":\"- The normalized weight of `token` relative to the other tokens in the Pool.\"}},\"collectAumManagementFees(address)\":{\"details\":\"This can be called by anyone to collect accrued AUM fees - and will be called automatically whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee percentage is changed by the manager, to prevent fees from being applied retroactively.\",\"params\":{\"_poolAddress\":\"- Address of pool being worked on.\"}},\"constructor\":{\"params\":{\"_managedPoolFactory\":\"- Managed pool contract address\",\"_vaultAddress\":\"- Vault contract address\"}},\"createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256)\":{\"params\":{\"_assetManagers\":\"- Asset manager for the pool\",\"_aumFeeId\":\"- Aum Fee Id\",\"_managementAumFeePercentage\":\"- Management Aum fee to apply\",\"_mustAllowlistLPs\":\"- List of LP's allowed in the pool\",\"_name\":\"- Pool name\",\"_normalizedWeights\":\"- Normalized weights in the pool\",\"_swapEnabledOnStart\":\"- Whether swaps are enabled straight away\",\"_swapFeePercentage\":\"- Fee applied to swaps\",\"_symbol\":\"- Symbol representing the pool\",\"_tokens\":\"- Tokens in the pool\"}},\"depositTokens(uint256,address)\":{\"details\":\"Transfers an amount of an ERC20 token\",\"params\":{\"_amount\":\"- Amount to deposit.\",\"_tokenAddress\":\"- Address of token to be deposited.\"}},\"removeAllowedAddress(address,address)\":{\"params\":{\"_member\":\"- The address to be removed from the allowlist.\",\"_poolAddress\":\"- Pool address being worked on\"}},\"removeToken(address,address,uint256,address)\":{\"details\":\"Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in the future. Emits the TokenRemoved event. This is a permissioned function. The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.\",\"params\":{\"_burnAmount\":\"- The amount of BPT to be burned after removing `token` from the Pool.\",\"_poolAddress\":\"- Address of pool being worked on.\",\"_sender\":\"- The address to burn BPT from.\",\"_tokenToRemove\":\"- The ERC20 token to be removed from the Pool.\"}},\"runCheck(address)\":{\"details\":\"To avoid too many fees, this should be run at wide intervals such as daily\",\"params\":{\"_poolAddress\":\"- Address of pool being worked on.\"}},\"setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])\":{\"details\":\"This is a permissioned function. The lower and upper bounds are percentages, corresponding to a relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent trades that result in the value of the token dropping 20% or more relative to the rest of the pool.\",\"params\":{\"_bptPrices\":\"- Token prices to for the circuit breaker\",\"_lowerBoundPercentages\":\"- The lower limit to trigger the circuit breaker\",\"_poolAddress\":\"- Pool to have a circruit breaker set\",\"_tokens\":\"- Tokens in the pool\",\"_upperBoundPercentages\":\"- The upper limit to trigger the circuit breaker\"}},\"setJoinExitEnabled(address,bool)\":{\"details\":\"Emits the JoinExitEnabledSet event. This is a permissioned function.\",\"params\":{\"_joinExitEnabled\":\"- The new value of the join/exit enabled flag.\",\"_poolAddress\":\"- Address of pool being worked on.\"}},\"setManagementAumFeePercentage(address,uint256)\":{\"details\":\"Attempting to collect AUM fees in excess of the maximum permitted percentage will revert. To avoid retroactive fee increases, we force collection at the current fee percentage before processing the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.\",\"params\":{\"_managementAumFeePercentage\":\"- The new management AUM fee percentage.\",\"_poolAddress\":\"- Address of pool being worked on.\"}},\"setMustAllowlistLPs(address,bool)\":{\"details\":\"Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and back on again, because this action does not affect the list of LP addresses. Emits the MustAllowlistLPsSet event. This is a permissioned function.\",\"params\":{\"_mustAllowlistLPs\":\"- The new value of the mustAllowlistLPs flag.\",\"_poolAddress\":\"- Address of pool being worked on.\"}},\"setSwapEnabled(address,bool)\":{\"details\":\"Emits the SwapEnabledSet event. This is a permissioned function.\",\"params\":{\"_poolAddress\":\"- Address of pool being worked on.\",\"_swapEnabled\":\"- The new value of the swap enabled flag.\"}},\"setTargetPoolPrices(address,address[],uint256[])\":{\"params\":{\"_pool\":\"- Pool to have prices set.\",\"_prices\":\"- The collection of prices to set\",\"_tokens\":\"- The collection of tokens to have prices set\"}},\"transferManagement(address)\":{\"details\":\"Only one manager can presently be set\",\"params\":{\"_manager\":\"- New manager.\"}},\"updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)\":{\"details\":\"The swap fee will change from the given starting value (which may or may not be the current value) to the given ending fee percentage, over startTime to endTime. Note that calling this with a starting swap fee different from the current value will immediately change the current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`. Emits the GradualSwapFeeUpdateScheduled event. This is a permissioned function.\",\"params\":{\"_endSwapFeePercentage\":\"- The ending value for the swap fee change. If the current timestamp >= endTime, `getSwapFeePercentage()` will return this value.\",\"_endTime\":\"- The timestamp when the swap fee change will end (must be >= startTime).\",\"_poolAddress\":\"- Address of pool being worked on.\",\"_startSwapFeePercentage\":\"- The starting value for the swap fee change.\",\"_startTime\":\"- The timestamp when the swap fee change will begin.\"}},\"updateWeightsGradually(address,uint256,uint256,address[],uint256[])\":{\"details\":\"The weights will change from their current values to the given endWeights, over startTime to endTime. This is a permissioned function. Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes, the weights always start from their current values. This also guarantees a smooth transition when updateWeightsGradually is called during an ongoing weight change.\",\"params\":{\"_endTime\":\"- The timestamp when the weight change will end (can be >= startTime).\",\"_endWeights\":\"- The target weights. If the current timestamp >= endTime, `getNormalizedWeights()` will return these values.\",\"_poolAddress\":\"- Address of pool being worked on.\",\"_startTime\":\"- The timestamp when the weight change will begin.\",\"_tokens\":\"- The tokens associated with the target weights (must match the current pool tokens).\"}},\"withdrawFunds(address,address,uint256)\":{\"details\":\"Transfers an amount of an ERC20 token\",\"params\":{\"_amount\":\"- Amount to withdraw.\",\"_recipientAddress\":\"- Address of wallet receiving funds.\",\"_tokenAddress\":\"- Address of token to be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAllowedAddress(address,address)\":{\"notice\":\"Adds an address to the LP allowlist.\"},\"addToken(address,address,address,uint256,uint256,address)\":{\"notice\":\"Adds a token to the Pool's list of tradeable tokens. This is a permissioned function.\"},\"collectAumManagementFees(address)\":{\"notice\":\"Collect any accrued AUM fees and send them to the pool manager.\"},\"constructor\":{\"notice\":\"Constructor for the controller implementation class\"},\"createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256)\":{\"notice\":\"Create a new managed pool\"},\"depositTokens(uint256,address)\":{\"notice\":\"Deposit tokens to controller\"},\"removeAllowedAddress(address,address)\":{\"notice\":\"Removes an address from the _poolAddress - Address of pool being worked on.\"},\"removeToken(address,address,uint256,address)\":{\"notice\":\"Removes a token from the Pool's list of tradeable tokens.\"},\"runCheck(address)\":{\"notice\":\"Runs a check and transfers reserve tokens as needed\"},\"setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])\":{\"notice\":\"Set a circuit breaker for one or more tokens.\"},\"setJoinExitEnabled(address,bool)\":{\"notice\":\"Enable or disable joins and exits. Note that this does not affect Recovery Mode exits.\"},\"setManagementAumFeePercentage(address,uint256)\":{\"notice\":\"Setter for the yearly percentage AUM management fee, which is payable to the pool manager.\"},\"setMustAllowlistLPs(address,bool)\":{\"notice\":\"Enable or disable the LP allowlist.\"},\"setSwapEnabled(address,bool)\":{\"notice\":\"Enable or disable trading.\"},\"setTargetPoolPrices(address,address[],uint256[])\":{\"notice\":\"Set target prices used for balancing\"},\"transferManagement(address)\":{\"notice\":\"Transfer the manager to a new address\"},\"updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Schedule a gradual swap fee update.\"},\"updateWeightsGradually(address,uint256,uint256,address[],uint256[])\":{\"notice\":\"Schedule a gradual weight change.\"},\"withdrawFunds(address,address,uint256)\":{\"notice\":\"Withdraw tokens from controller\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ExternalBondingCurveController.sol\":\"ExternalBondingCurveController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@balancer-labs/v2-interfaces/contracts/pool-utils/IManagedPool.sol\":{\"keccak256\":\"0xa7adc4534d070386e0944d6f4f7162e83e265c2694e8fd142379433e654b3ade\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://91623516e0733af77187b804cab725ee20ae6d9a03d85108a7a48ce47a846425\",\"dweb:/ipfs/QmQMGhtkjdxC6EkMxyQdvKEK8cGAKGoGSMbVcnrPWcV9b9\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x2d45ea7c14dc950acf5917377d9eb67d2b1d9f8b8d81fa60eeaad345cf257655\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c387331bc3da670d45d54af96b067ea6fce6f3e0e5fac53b86fba73d5e9e874a\",\"dweb:/ipfs/QmYkY4d2TDA4BXpjz1RPQn8rdWvZVTi3pSBbiUSaPFKwtM\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x571907ff5a68a10937b13e0828dd78bf9508f6e74eaafe7faf525453160c3627\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://afb73b213075954086eb7fa4eb4fac4962b779c8dd8c9c72902336d64c13210e\",\"dweb:/ipfs/QmNWFPnoPxo8ToVHrqXaQQF8RPYeNNhV2eZN9EwFS3iHpz\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0x7d98e4751329dd9effc016cbc5acdf6399d3592407b9d3e28b38c10c621e56a3\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a70c4c16829f31c75dd0a3987137ed1572a0343ff933dcdcfbef17d5d63307ae\",\"dweb:/ipfs/QmSGBafawe525NbvK8LVN1rsD2yJxaS83QoTNC84evwM2E\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x41c26d92fde92c927352c447ff80e3b2216d076662f2b222b735e4c865a481dc\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://291a4b4f141ea187a61c3bb1ab16b370012e7e80ddc045671015ab2bfaf3c52c\",\"dweb:/ipfs/QmXvvVdfZC3pAqLst3bW9Fbj8mS9y1t1k7Zqr9BXuKdUHP\"]},\"@balancer-labs/v2-interfaces/contracts/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0x3c415102b8b53a3efe0209b7fa4fd052a48b35a1df99e1b37572597d25030249\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8aac0d9f5ff03e0edeb07e1c400b78edea5948acff7e113ba52fd32f86cad72d\",\"dweb:/ipfs/Qmbh6C53fCjvjoHEVZHNadpRq5KZJzfHpDeR3qYfPgKvZt\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAsset.sol\":{\"keccak256\":\"0x780769a0bd8655d8a05a75b062b32a65b775b9deb923b2e8f42f57a0ee263a2d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b63d22729102954a657432d81b31764e6dbdc7216a6deb991499a73dc4ebbd7b\",\"dweb:/ipfs/QmWRyByegCCJr37yesLi7urtzNk2BBiDEjzbkPpV8TKy1X\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IAuthorizer.sol\":{\"keccak256\":\"0x1407e18b806b109e6a878697d2942eeb17bfc6cc601da725941658b90dc9dcc6\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e2695f5ae435de2de9fa9dc3b165f05b5bf876217aba0e4bcbd20943a23fc831\",\"dweb:/ipfs/QmYTmazrQQqjb4znByMiUUviqbXKTebrhpP8MDERZ5PLxz\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IBasePool.sol\":{\"keccak256\":\"0x4673e08f6b8e76ffa89155d704a0682a6a98e3c60ca5f28e0c4b964f26b65dbe\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://eef030243d480fb6e84943d88c19cfc2b7e17bee800ece7b7be840061f3cc4bb\",\"dweb:/ipfs/QmYCLn4pspMRBdKAhtjc7EjnHQURHrzp844M5722LEbL8D\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xadcf6e9f8677de9ec51a1bbb419da349b7c0c17af8b8cddad85ee0e80107036e\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9b30c1b15e3d0990a4a343fac14d2263c4bae4c3bdbeb38489103b4f6f66c39\",\"dweb:/ipfs/QmeQjBDidkLAoq4nknwPPPmunSTvQEZ9shaAhPiJAPmbk6\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IPoolSwapStructs.sol\":{\"keccak256\":\"0xbe4815478a942261e6e2416632342b0e55ff2b0f75c2551ffd79ad9b2326be38\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ccc137d00935cace955e552f238130a01a9468c2d80c725e4625a25debc5c54b\",\"dweb:/ipfs/QmexvRpcaeERPyZt9BzHZViFb8GevhhhoUBQ3wgDqFUwJx\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xe18a4e04a4a4e828c81548cc50d9d8ab6461dafbe88929c0342fa2b6c08e0d76\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7056ea1221db4eacc3e263ea8b9d741c11b1871f745169a39c6f926dab9c403f\",\"dweb:/ipfs/QmabGZff9x43RJUororFfmMzocB2UuZDDBMhhfELEeSJue\"]},\"@balancer-labs/v2-interfaces/contracts/vault/IVault.sol\":{\"keccak256\":\"0x63425148b27356cee63cf843ef8918d3ff6cdd8d5c00371326bca8b4331b773c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6764d2a22a2e23de5235ceb0d06ebb9006f694c59547b8dc82dbc2e215d1f230\",\"dweb:/ipfs/Qmb6BQBgUQno6RAqPPR8qeC3smNEC3Bm6y8ZcWEWZKAfhF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"project:/contracts/ExternalBondingCurveController.sol\":{\"keccak256\":\"0xf67952495efa823029e54883f989a58302422b0e47053d6e871c3a45598e9b1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d523449a4a27e32d2f91b4f4f6db467293f958a10f403ef5bd0d249a694a0c03\",\"dweb:/ipfs/QmVcPEhreQM2tSvbypFXT8Gvpyj545gp32WKNmdbZ2VBZy\"]},\"project:/contracts/ManagedPoolFactory.sol\":{\"keccak256\":\"0xac11edd542b71c0cd551d7947bbb487e79e2ac1331d08d619abc0f119ffad540\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51392609b0ff500ce92a5bfa4b257b1da6acdfa3e299ada2beac503c0243d3f6\",\"dweb:/ipfs/QmTE57fRNMjAd3DuQfooeThgFGCAGm9R6xndMRn9jQBKTX\"]},\"project:/contracts/base/BaseController.sol\":{\"keccak256\":\"0x3d0477d1edfae3ffaead0aae8145ac91a28d29ac120aaf4d4e720ff01fe0ad4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aed80a47b4b3afc9a824c8774cfeb328b6663a57420068c58e3c6c93da8a8769\",\"dweb:/ipfs/QmTktg7Sfp1sBPd4tuDuAf5SWwQitNVcqhY9x7nqKMKwGz\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361015610013575b600080fd5b60003560e01c80631c20fadd1461018f57806321f1e0cd146101865780632abbd3ad1461017d578063404ac21e1461017457806342da1cb11461016b578063458aa92b14610162578063481c6a75146101595780634e4858d9146101505780634f6300a21461014757806351d48cea1461013e578063556f1eb9146101355780637ff731bd1461012c578063875e7cd914610123578063abd796bf1461011a578063c90d3a0414610111578063cbe04b0c14610108578063e4444feb146100ff578063e4edf852146100f65763f73e0f62146100ee57600080fd5b61000e6113f7565b5061000e6113af565b5061000e611343565b5061000e61129a565b5061000e6111b5565b5061000e611145565b5061000e611068565b5061000e610fac565b5061000e610edd565b5061000e610e72565b5061000e610dbe565b5061000e610767565b5061000e61073d565b5061000e6106a1565b5061000e6104ed565b5061000e61044f565b5061000e6103bd565b5061000e610286565b5061000e6101a9565b6001600160a01b0381160361000e57565b503461000e57606036600319011261000e576004356101c781610198565b6024356101d381610198565b6001546001600160a01b0392908316330361000e57602091610233916101f761193e565b6040516323b872dd60e01b81523060048201526001600160a01b0390911660248201526044803590820152938492839160009183906064820190565b0393165af18015610279575b61024b575b6001600055005b61026b9060203d8111610272575b6102638183610594565b810190611d35565b5038610244565b503d610259565b610281611533565b61023f565b503461000e5760c036600319011261000e576004356102a481610198565b6024356102b081610198565b604435916102bd83610198565b60a435916102ca83610198565b6001546001600160a01b0392908316330361000e5782906102e961193e565b1690813b1561000e57600060a49284829681604051998a9889976306946dbf60e31b8952166004880152166024860152606435604486015260843560648601521660848401525af18015610362575b610349575b6103476001600055565b005b8061035661035c92610574565b80610732565b3861033d565b61036a611533565b610338565b8015150361000e57565b60c435906103868261036f565b565b60e435906103868261036f565b604090600319011261000e576004356103ad81610198565b906024356103ba8161036f565b90565b503461000e576103cc36610395565b6001546000928392916001600160a01b0391908216330361044a576103ef61193e565b16803b1561044657602483926040519485938492637b749c4560e01b8452151560048401525af18015610439575b61042a575b506001815580f35b61043390610574565b38610422565b610441611533565b61041d565b5050fd5b505050fd5b503461000e57602036600319011261000e5760043561046d81610198565b6001546001600160a01b0391908216330361000e57600091600460209261049261193e565b6040516373656f8960e01b81529485938492165af180156104e0575b6104b9576001600055005b61026b9060203d81116104d9575b6104d18183610594565b810190611524565b503d6104c7565b6104e8611533565b6104ae565b503461000e57604036600319011261000e5760043561050b81610198565b6001546001600160a01b0391908216330361000e57600091602460209261053061193e565b604051632a9a032360e01b8152823560048201529485938492165af180156104e0576104b9576001600055005b50634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161058757604052565b61058f61055d565b604052565b90601f801991011681019081106001600160401b0382111761058757604052565b6020906001600160401b0381116105ce575b60051b0190565b6105d661055d565b6105c7565b81601f8201121561000e578035916105f2836105b5565b926106006040519485610594565b808452602092838086019260051b82010192831161000e578301905b82821061062a575050505090565b838091833561063881610198565b81520191019061061c565b81601f8201121561000e5780359161065a836105b5565b926106686040519485610594565b808452602092838086019260051b82010192831161000e578301905b828210610692575050505090565b81358152908301908301610684565b503461000e5760a036600319011261000e576004356106bf81610198565b6001600160401b039060243582811161000e576106e09036906004016105db565b60443583811161000e576106f8903690600401610643565b60643584811161000e57610710903690600401610643565b9160843594851161000e5761072c610347953690600401610643565b93611c73565b600091031261000e57565b503461000e57600036600319011261000e576001546040516001600160a01b039091168152602090f35b503461000e5760208060031936011261000e576004803561078781610198565b600180546001600160a01b03949193908516330361000e576107a761193e565b6040805163038fff2d60e41b815294848716939081878581885afa968715610db1575b600097610d92575b50825163f89f27ed60e01b8152976000898681895afa988915610d85575b600099610d62575b507f00000000000000000000000000000000000000000000000000000000000000001694835198631f29a8cd60e31b8a5260008a8061083e8c8a83019190602083019252565b03818a5afa928315610d55575b60009a8b94610d2b575b5061089261087661086586611682565b5161086f85611682565b519061173e565b61088c6108828761169f565b5161086f8661169f565b9061173e565b938b6000958b87856108f9816108ba8560018060a01b03166000526002602052604060002090565b016108e36108d76108ca8961169f565b516001600160a01b031690565b6001600160a01b031690565b60018060a01b0316600052602052604060002090565b0154831015610c9a57506108ca85949361097261095e610959610997966109548a61094d8161093d6109809b60018060a01b03166000526002602052604060002090565b016108e36108d76108ca8b61169f565b015461171c565b611748565b611772565b61095461096a8861169f565b516064900490565b61097a6116ad565b5261169f565b6109886116ad565b6001600160a01b039091169052565b8193908b93918e5b83945b610aca575b505050505050610a49575b506109c1576103476001600055565b6060906109cc6117a7565b9788526109d76117ea565b88840152600182890152870152823b1561000e57600094610a0e8692519788968795869463172b958560e31b86523091860161188f565b03925af18015610a3c575b610a29575b80808080808061033d565b80610356610a3692610574565b38610a1e565b610a44611533565b610a19565b610a516117a7565b90898252610a5d6117ea565b8286015260016060830152606084830152863b1561000e578451638bdb391360e01b81529160009183918291610a989190308e8c860161188f565b0381838a5af18015610abd575b156109b25780610356610ab792610574565b386109b2565b610ac5611533565b610aa5565b90919293949796958151861015610c8f57610b02610aea6108828661169f565b61088c610af789886116e3565b5161086f8a886116e3565b9085610b3581610b248d60018060a01b03166000526002602052604060002090565b016108e36108d76108ca8c896116e3565b0154821015610bdc575090610988610bb5610bc06108ca89610ba4610b97829d9e9f610bc7996109548e9f8f908c6108e36108d76108ca61094d9486610b906109599b60018060a01b03166000526002602052604060002090565b01946116e3565b61095461096a848d6116e3565b95606096610bba610bb58951611780565b6116c7565b526116e3565b9251611780565b610bd1839561178f565b9291908e8d956109a2565b959885610c118b6108e36108d76108ca85610c098860018060a01b03166000526002602052604060002090565b0193896116e3565b01548210610c2a575b505050610bd1839495969761178f565b8596979850610bb5610bc06108ca8c610ba4610b97610c7a89986109548e61094d610c7f9d6108e36108d76108ca6109889f86610b908e9260018060a01b03166000526002602052604060002090565b611763565b610bd1839695948f91508d610c1a565b9596979450806109a7565b9592919085610ccf81610cbf8460018060a01b03166000526002602052604060002090565b016108e36108d76108ca8861169f565b01548211610ce4575b9493918493915061099f565b8594939850610d219261097261095e610c7a610980956109548a61094d8161093d6108ca9a60018060a01b03166000526002602052604060002090565b90948c388c610cd8565b909350610d4a919a3d8091833e610d428183610594565b8101906115c3565b509990999238610855565b610d5d611533565b61084b565b610d7e91993d8091833e610d768183610594565b81019061159e565b97386107f8565b610d8d611533565b6107f0565b610daa919750823d84116104d9576104d18183610594565b95386107d2565b610db9611533565b6107ca565b503461000e57604036600319011261000e57600435602435610ddf81610198565b6001546001600160a01b0392908316330361000e57610e42816044602061033d96610e0861193e565b604051636eb1769f60e11b8152336004820152306024820152928391829089165afa908115610e65575b600091610e47575b501015611d4a565b611d7e565b610e5f915060203d81116104d9576104d18183610594565b38610e3a565b610e6d611533565b610e32565b503461000e57610e8136610395565b6001546000928392916001600160a01b0391908216330361044a57610ea461193e565b16803b1561044657602483926040519485938492633806be4b60e21b8452151560048401525af180156104395761042a57506001815580f35b503461000e57610eec36610395565b6001546000928392916001600160a01b0391908216330361044a57610f0f61193e565b16803b156104465760248392604051948593849263de3d2b2d60e01b8452151560048401525af180156104395761042a57506001815580f35b81601f8201121561000e578035906001600160401b038211610f9f575b60405192610f7d601f8401601f191660200185610594565b8284526020838301011161000e57816000926020809301838601378301015290565b610fa761055d565b610f65565b503461000e5761014036600319011261000e5760046001600160401b03813581811161000e57610fdf9036908401610f48565b9060243581811161000e57610ff79036908501610f48565b9060443581811161000e5761100f90369086016105db565b9260643582811161000e576110279036908701610643565b9160843590811161000e5761034795611042913691016105db565b9061104b610379565b91611054610388565b936101243596610104359660a43594611994565b503461000e57600060a036600319011261111d578060043561108981610198565b6001546001600160a01b03919082163303610446576110a661193e565b16803b1561111a578190608460405180948193635b160f8360e11b8352602435600484015260443560248401526064356044840152833560648401525af1801561110d575b6110fe575b506110fb6001600055565b80f35b61110790610574565b386110f0565b611115611533565b6110eb565b50fd5b80fd5b604090600319011261000e5760043561113881610198565b906024356103ba81610198565b503461000e5761115436611120565b60015460009283916001600160a01b039190821633036111b157819061117861193e565b1692833b156111b1576024908360405195869485936381788e2b60e01b85521660048401525af180156104395761042a57506001815580f35b8280fd5b503461000e5760031960a03682011261000e576004356111d481610198565b6001600160401b039060643582811161000e576111f59036906004016105db565b9160843590811161000e5761120e903690600401610643565b60015490916001600160a01b03918216330361000e5761122c61193e565b16803b1561000e57611273600080946112826040519788968795869463819c70f360e01b865260243560048701526044356024870152608060448701526084860190611b53565b9184830301606485015261181b565b03925af1801561036257610349576103476001600055565b503461000e576000608036600319011261111d576004356112ba81610198565b81602435916112c883610198565b606435926112d584610198565b6001546001600160a01b0392908316330361133f5782906112f461193e565b1690813b1561133f57836064928460405197889687956397bb15c960e01b875216600486015260443560248601521660448401525af1801561110d576110fe57506110fb6001600055565b8380fd5b503461000e5761135236611120565b60015460009283916001600160a01b039190821633036111b157819061137661193e565b1692833b156111b157602490836040519586948593630793b27760e31b85521660048401525af180156104395761042a57506001815580f35b503461000e57602036600319011261000e576004356113cd81610198565b600154906001600160a01b0390818316330361000e576001600160a01b0319909216911617600155005b503461000e57606036600319011261000e5760043561141581610198565b6001600160401b039060243582811161000e576114369036906004016105db565b9160443590811161000e5761144f903690600401610643565b600180546001600160a01b03949192908516330361000e578293918560009316935b61147757005b80518310156103475761151e83876114908896856116e3565b51168660005285611517818b60026114f56020968288526114d68b6040956114be8c898960002001936116e3565b511660018060a01b0316600052602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b6114ff878b6116e3565b51958c60005252600020016108e36108ca86896116e3565b015561178f565b92611471565b9081602091031261000e575190565b506040513d6000823e3d90fd5b81601f8201121561000e57805191611557836105b5565b926115656040519485610594565b808452602092838086019260051b82010192831161000e578301905b82821061158f575050505090565b81518152908301908301611581565b9060208282031261000e5781516001600160401b03811161000e576103ba9201611540565b909160608284031261000e578151926001600160401b039384811161000e5783019381601f8601121561000e5784516115fb816105b5565b906116096040519283610594565b808252602096878084019260051b8201019185831161000e5788809201905b83821061165257505050509484015190811161000e5760409161164c918501611540565b92015190565b828091835161166081610198565b815201910190611628565b50634e487b7160e01b600052603260045260246000fd5b604090805160011015611693570190565b61169b61166b565b0190565b602090805115611693570190565b606051156116ba57608090565b6116c261166b565b608090565b6080906060518110156116db5760051b0190565b6105d661166b565b60209181518110156116f8575b60051b010190565b61170061166b565b6116f0565b50634e487b7160e01b600052601160045260246000fd5b80156117285760640490565b634e487b7160e01b600052601260045260246000fd5b8115611728570490565b8181029291811591840414171561175b57565b610386611705565b60631981019190821161175b57565b606403906064821161175b57565b60001981019190821161175b57565b600190600019811461179f570190565b61169b611705565b60405190608082018281106001600160401b038211176117dd575b60405260006060838181528160208201528160408201520152565b6117e561055d565b6117c2565b60405190602082018281106001600160401b0382111761180e575b60405260008252565b61181661055d565b611805565b90815180825260208080930193019160005b82811061183b575050505090565b83518552938101939281019260010161182d565b919082519283825260005b84811061187b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161185a565b929190835260018060a01b0380928160209316838601521660408401526080606084015261010083019184519260808086015283518091528261012086019401916000905b8282106119255750505050606061191b6103ba949361190660e09488015191607f1992838883030160a089015261181b565b906040880151908683030160c087015261184f565b9401511515910152565b83518116865294840194928401926001909101906118d4565b60026000541461194f576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b92949693959790989160018060a01b03948560015416330361000e576119fe611a829a60009a60209a611a319a611a8f9f96611a07976119d261193e565b6119da611ad4565b9b8c528e8c015260408b015260608a0152608089015260a0880152151560c0870152565b151560e0850152565b6101008301526101208201526040519485809481936344da655f60e01b8352309060048401611b90565b03927f0000000000000000000000000000000000000000000000000000000000000000165af1908115611ac7575b600091611a99575b506001600160a01b0316600090815260026020526040902090565b805460ff19166001179055565b6103866001600055565b611aba915060203d8111611ac0575b611ab28183610594565b810190611b3e565b38611a67565b503d611aa8565b611acf611533565b611a5f565b6040519061014082018281106001600160401b03821117611b31575b6040526000610120836060808252806020830152806040830152808083015260808201528260a08201528260c08201528260e0820152826101008201520152565b611b3961055d565b611af0565b9081602091031261000e57516103ba81610198565b90815180825260208080930193019160005b828110611b73575050505090565b83516001600160a01b031685529381019392810192600101611b65565b9291602061038692604086528051611c18611bb9610140928360408b01526101808a019061184f565b611c03611bef611bdb8787015193603f19948d6060878285030191015261184f565b60408701518c8203850160808e0152611b53565b6060860151838c83030160a08d015261181b565b906080850151908a83030160c08b0152611b53565b9160a081015160e089015260c081015191611c3a61010093848b019015159052565b60e082015192611c5161012094858c019015159052565b8201519089015201516101608701526001600160a01b03909216940193909352565b600154939492939192916001600160a01b0391908216330361000e57611c9761193e565b1690813b1561000e576000611cea93611cfa8296611cd7946112736040519a8b998a98899763f885a4bb60e01b8952608060048a01526084890190611b53565b60031995868983030160248a015261181b565b908487830301604488015261181b565b03925af18015611d28575b611d15575b506103866001600055565b80610356611d2292610574565b38611d0a565b611d30611533565b611d05565b9081602091031261000e57516103ba8161036f565b15611d5157565b60405162461bcd60e51b815260206004820152600560248201526422b93937b960d91b6044820152606490fd5b6040516323b872dd60e01b8152336004820152306024820152604481019190915290602090829060649082906000906001600160a01b03165af18015611de0575b611dc65750565b611ddd9060203d8111610272576102638183610594565b50565b611de8611533565b611dbf56fea2646970667358221220d665d76a8ac63ba46bf1f52b877cc925b5dd747733145a84ec7144b9d34da09a64736f6c63430008110033",
  "immutableReferences": {
    "2484": [
      {
        "length": 32,
        "start": 2043
      }
    ],
    "2487": [
      {
        "length": 32,
        "start": 6709
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "131:5057:14:-:0;;;;;;;;;;;;;-1:-1:-1;;131:5057:14;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;1716:1:13;;;131:5057:14;;-1:-1:-1;;;;;;131:5057:14;1063:10:17;131:5057:14;;;-1:-1:-1;;;;;131:5057:14;;;1083:29:17;;131:5057:14;;1122:60:17;131:5057:14;;;;;;;;1083:29:17;131:5057:14;;;;;;;;;;;;;-1:-1:-1;131:5057:14;;;;;;-1:-1:-1;131:5057:14;;;;;-1:-1:-1;131:5057:14;;;;-1:-1:-1;;;;;131:5057:14;;;;;;:::o",
  "deployedSourceMap": "131:5057:14:-:0;;;;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;131:5057:14;;;;;:::o;:::-;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;;2227:103:13;16482:62:17;2227:103:13;;;:::i;:::-;131:5057:14;;-1:-1:-1;;;16482:62:17;;16510:4;131:5057:14;16482:62:17;;131:5057:14;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;16482:62:17;;131:5057:14;;16482:62:17;;;;;;131:5057:14;16482:62:17;;131:5057:14;;-1:-1:-1;1759:1:13;131:5057:14;16482:62:17;;;131:5057:14;16482:62:17;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;131:5057:14;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;;;:::i;:::-;131:5057:14;14581:102:17;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;;;;;;14581:102:17;;131:5057:14;;14581:102:17;;131:5057:14;;;;;;;;;;;;;;;;;;;;;;;14581:102:17;;;;;;131:5057:14;14581:102:17;;131:5057:14;2292:1:13;1716;2809:22;1759:1;2629:209;2292:1;131:5057:14;14581:102:17;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;131:5057:14;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;17587:7:17;131:5057:14;-1:-1:-1;;;;131:5057:14;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;:::i;:::-;131:5057:14;8822:50:17;;;;;131:5057:14;;;;;;;;;;;;;8822:50:17;;131:5057:14;;;8822:50:17;;131:5057:14;8822:50:17;;;;;;131:5057:14;8822:50:17;;131:5057:14;1759:1:13;17587:7:17;1759:1:13;;131:5057:14;;8822:50:17;;;;:::i;:::-;;;;;;;:::i;:::-;;;;131:5057:14;;;;;;;;;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;-1:-1:-1;2227:103:13;131:5057:14;;2227:103:13;;;:::i;:::-;131:5057:14;;-1:-1:-1;;;10651:38:17;;131:5057:14;;;;;;10651:38:17;;;;;;131:5057:14;10651:38:17;;131:5057:14;-1:-1:-1;1759:1:13;131:5057:14;10651:38:17;;;131:5057:14;10651:38:17;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;131:5057:14;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;-1:-1:-1;2227:103:13;131:5057:14;;2227:103:13;;;:::i;:::-;131:5057:14;;-1:-1:-1;;;11537:70:17;;131:5057:14;;;11537:70:17;;131:5057:14;;;;;;;11537:70:17;;;;;;;;131:5057:14;-1:-1:-1;1759:1:13;131:5057:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12376:459:17;131:5057:14;;;;;;:::i;:::-;12376:459:17;;:::i;131:5057:14:-;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;131:5057:14;;;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;:::i;:::-;131:5057:14;;;-1:-1:-1;;;1178:23:14;;131:5057;;;;;;;;1178:23;131:5057;;1178:23;;;;;;;131:5057;-1:-1:-1;1178:23:14;;;131:5057;-1:-1:-1;131:5057:14;;-1:-1:-1;;;1249:34:14;;131:5057;-1:-1:-1;131:5057:14;1249:34;131:5057;1249:34;;;;;;;;131:5057;-1:-1:-1;1249:34:14;;;131:5057;1382:5;;131:5057;;;;;;;;1382:27;;-1:-1:-1;1382:27:14;;;;;;;131:5057;;;;;;;;1382:27;;;;;;;;;;;131:5057;-1:-1:-1;;;1382:27:14;;;131:5057;1508:11;1507:75;1508:34;:11;;;:::i;:::-;131:5057;1522:20;;;:::i;:::-;131:5057;1508:34;;:::i;:::-;1547;:11;;;:::i;:::-;131:5057;1561:20;;;:::i;1547:34::-;1507:75;;:::i;:::-;1670:18;;-1:-1:-1;1698:18:14;;;1937:26;:53;:26;;;131:5057;;;;;;;;1937:12;131:5057;;;;;;;1937:26;:33;1971:18;1979:9;;;;:::i;:::-;131:5057;-1:-1:-1;;;;;131:5057:14;;;1979:9;-1:-1:-1;;;;;131:5057:14;;;1971:18;131:5057;;;;;;;;;;;;;;;1937:53;:59;131:5057;1923:73;;17587:7:17;;;2070:26:14;2315:9;2070:26;;;2188:46;2057:87;2064:79;2299:25;2070:26;2064:65;2070:26;:53;:26;;2315:9;2070:26;131:5057;;;;;;;;1937:12;131:5057;;;;;;;2070:26;:33;2104:18;2112:9;;;;:::i;2070:53::-;:59;131:5057;2064:65;:::i;:::-;:79;:::i;:::-;2057:87;:::i;:::-;2188:17;:11;;;:::i;:::-;131:5057;2513:3;131:5057;;;;2188:46;2249:36;;:::i;:::-;131:5057;2315:9;:::i;:::-;2299:25;;:::i;:::-;-1:-1:-1;;;;;131:5057:14;;;;;;2299:25;2338:12;1919:898;;;;;;;2929:13;2924:1221;131:5057;;;2924:1221;4213:455;;;;;;;;2924:1221;4733:447;;;2292:1:13;1716;2809:22;1759:1;2629:209;4733:447:14;131:5057;;;;:::i;:::-;4824:30;;;131:5057;;:::i;:::-;4868:23;;;131:5057;17587:7:17;4910:34:14;;;131:5057;4965:27;;:41;5021:148;;;;;-1:-1:-1;131:5057:14;5021:148;131:5057;;;;;;;;;;;;;5021:148;;5079:4;5021:148;;;;:::i;:::-;;;;;;;;;4733:447;5021:148;;4733:447;;;;;;;;;5021:148;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;4213:455;131:5057;;:::i;:::-;4304:30;;;;131:5057;;:::i;:::-;4348:23;;;131:5057;17587:7:17;131:5057:14;4390:32;;131:5057;;4443:28;;;:42;4500:157;;;;;131:5057;;-1:-1:-1;;;4500:157:14;;131:5057;-1:-1:-1;;131:5057:14;;;;4500:157;;131:5057;4558:4;;4500:157;;;;:::i;:::-;;;;;;;;;;;4213:455;4500:157;4213:455;4500:157;;;;;;:::i;:::-;;4213:455;;4500:157;;;:::i;:::-;;;2963:3;131:5057;;;;;;;;;;2944:17;;;;;3003:75;3004:34;:11;;;:::i;:34::-;3043;:11;;;;:::i;:::-;131:5057;3057:20;;;;:::i;3003:75::-;3110:26;;:53;:26;;;131:5057;;;;;;;;1937:12;131:5057;;;;;;;3110:26;:33;3144:18;3152:9;;;;;:::i;3110:53::-;:59;131:5057;3097:72;;17587:7:17;;;3250:26:14;;3524:45;3535:21;3560:9;;3250:26;3370:45;3237:86;3250:26;;;;3524:45;3250:26;3244:65;3250:26;;;;;3284:18;3292:9;;3250:53;:26;;;3244:78;3250:26;131:5057;;;;;;;;1937:12;131:5057;;;;;;;3250:26;:33;3292:9;;:::i;3237:86::-;3370:17;:11;;;;:::i;:45::-;131:5057;;;3450:56;3462:22;131:5057;;3462:22;:::i;:::-;3450:56;:::i;:::-;131:5057;3560:9;:::i;:::-;131:5057;;3535:21;:::i;3524:45::-;2963:3;3587:12;3093:1042;2963:3;:::i;:::-;2929:13;;;;;;;;3093:1042;3649:26;;;:53;:26;3683:18;3691:9;;3649:26;;;131:5057;;;;;;;;1937:12;131:5057;;;;;;;3649:26;:33;3691:9;;;:::i;3649:53::-;:59;131:5057;3636:72;;3632:503;;3093:1042;;;;2963:3;3093:1042;;;;;2963:3;:::i;3632:503::-;3782:26;;;;;4056:21;4081:9;;3782:26;3907:45;3776:84;:78;3782:26;;3776:65;3782:26;:53;4045:45;3782:26;3816:18;3824:9;;4045:45;3782:26;;;;;131:5057;;;;;;;;1937:12;131:5057;;;;;;;3776:78;:84;:::i;4045:45::-;2963:3;4108:12;3632:503;;;;;;;;;2944:17;;;;;;;;;1919:898;2393:26;;;;;:53;:26;;;131:5057;;;;;;;;1937:12;131:5057;;;;;;;2393:26;:33;2427:18;2435:9;;;;:::i;2393:53::-;:59;131:5057;2379:73;;2375:442;;1919:898;;;;;;;;;;2375:442;2519:26;;;;;2755:25;2519:26;2643:46;2513:85;:79;2771:9;2519:26;2513:65;2519:26;:53;:26;;2771:9;2519:26;131:5057;;;;;;;;1937:12;131:5057;;;;;;;2755:25;2794:12;;2375:442;;;;;1382:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;1249:34;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;1178:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;131:5057;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;17826:71:17;2227:103:13;131:5057:14;;17907:1:17;2227:103:13;;;:::i;:::-;131:5057:14;;-1:-1:-1;;;17834:42:17;;17573:10;131:5057:14;17834:42:17;;131:5057:14;17870:4:17;131:5057:14;;;;;;;;;;;17834:42:17;;;;;;;131:5057:14;-1:-1:-1;17834:42:17;;;131:5057:14;17834:53:17;;;17826:71;:::i;:::-;17907:1;:::i;17834:42::-;;;;131:5057:14;17834:42:17;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;131:5057:14;;;;;;;;:::i;:::-;17587:7:17;131:5057:14;-1:-1:-1;;;;131:5057:14;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;:::i;:::-;131:5057:14;8064:40:17;;;;;131:5057:14;;;;;;;;;;;;;8064:40:17;;131:5057:14;;;8064:40:17;;131:5057:14;8064:40:17;;;;;;;;1759:1:13;17587:7:17;1759:1:13;;131:5057:14;;;;;;;;;;:::i;:::-;17587:7:17;131:5057:14;-1:-1:-1;;;;131:5057:14;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;:::i;:::-;131:5057:14;7522:48:17;;;;;131:5057:14;;;;;;;;;;;;;7522:48:17;;131:5057:14;;;7522:48:17;;131:5057:14;7522:48:17;;;;;;;;1759:1:13;17587:7:17;1759:1:13;;131:5057:14;;;;;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;-1:-1:-1;;131:5057:14;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;131:5057:14;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;1820:1267:17;131:5057:14;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;1820:1267:17;;:::i;131:5057:14:-;;;;;-1:-1:-1;131:5057:14;;-1:-1:-1;;131:5057:14;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;:::i;:::-;131:5057:14;5436:104:17;;;;;131:5057:14;;;;;;;;;;;;5436:104:17;;131:5057:14;;;5436:104:17;;131:5057:14;;;;;;;;;;;;;;;;;;;5436:104:17;;;;;;131:5057:14;5436:104:17;;131:5057:14;2292:1:13;;1716;2809:22;1759:1;2629:209;2292:1;131:5057:14;;5436:104:17;;;;:::i;:::-;;;;;;;:::i;:::-;;;;131:5057:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;17587:7:17;131:5057:14;-1:-1:-1;;;;;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;;;:::i;:::-;131:5057:14;9437:38:17;;;;;;131:5057:14;;;;;;;;;;;;;9437:38:17;;131:5057:14;;9437:38:17;;131:5057:14;9437:38:17;;;;;;;;1759:1:13;17587:7:17;1759:1:13;;131:5057:14;;9437:38:17;131:5057:14;;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;131:5057:14;;;17573:10:17;:21;131:5057:14;;2227:103:13;;:::i;:::-;131:5057:14;6869:78:17;;;;;131:5057:14;-1:-1:-1;131:5057:14;;;;;;;;;;;;;;;6869:78:17;;131:5057:14;;;6869:78:17;;131:5057:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;6869:78:17;;;;;;;;;;2292:1:13;1716;2809:22;1759:1;2629:209;131:5057:14;;;;;-1:-1:-1;131:5057:14;;-1:-1:-1;;131:5057:14;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;;;:::i;:::-;131:5057:14;15907:61:17;;;;;;131:5057:14;;;;;;;;;;;;;;15907:61:17;;131:5057:14;;15907:61:17;;131:5057:14;;;;;;;;;;;;15907:61:17;;;;;;;;2292:1:13;;1716;2809:22;1759:1;2629:209;15907:61:17;131:5057:14;;;;;;;;;;;:::i;:::-;17587:7:17;131:5057:14;-1:-1:-1;;;;;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;2227:103:13;;;;:::i;:::-;131:5057:14;9942:41:17;;;;;;131:5057:14;;;;;;;;;;;;;9942:41:17;;131:5057:14;;9942:41:17;;131:5057:14;9942:41:17;;;;;;;;1759:1:13;17587:7:17;1759:1:13;;131:5057:14;;;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;:::i;:::-;17587:7:17;131:5057:14;;-1:-1:-1;;;;;131:5057:14;;;;17573:10:17;:21;131:5057:14;;-1:-1:-1;;;;;;131:5057:14;;;;;;17587:7:17;131:5057:14;;;;;;;;;-1:-1:-1;;131:5057:14;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;131:5057:14;;;;;;17573:10:17;:21;131:5057:14;;3534:17:17;;;;-1:-1:-1;131:5057:14;;3529:227:17;131:5057:14;;;;3577:7:17;131:5057:14;;3553:22:17;;;;;3577:7;3652:14;;;;;;;:::i;:::-;131:5057:14;;;-1:-1:-1;131:5057:14;3601:12:17;3680:42;3601:12;;;:65;131:5057:14;;;;;3601:42:17;131:5057:14;;;3628:14:17;131:5057:14;;;-1:-1:-1;131:5057:14;3601:26:17;3628:14;;:::i;:::-;131:5057:14;;;;;;;;;;;;;;;;;3601:42:17;131:5057:14;;-1:-1:-1;;;;;;131:5057:14;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;3601:65:17;3731:14;;;;:::i;:::-;131:5057:14;;;-1:-1:-1;131:5057:14;;-1:-1:-1;131:5057:14;3680:26:17;3707:14;;;;;:::i;3680:42::-;:48;1759:1:13;3577:7:17;:::i;:::-;3534:17;;;131:5057:14;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;17587:7:17;131:5057:14;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2513:3;131:5057;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;-1:-1:-1;;131:5057:14;;;;;;;;:::o;:::-;2057:3;131:5057;;2057:3;131:5057;;;;:::o;:::-;-1:-1:-1;;131:5057:14;;;;;;;;:::o;:::-;;;-1:-1:-1;;131:5057:14;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;-1:-1:-1;131:5057:14;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2336:287:13;1759:1;2468:7;131:5057:14;2468:19:13;1759:1;;;2468:7;1759:1;2336:287::o;1759:1::-;131:5057:14;;-1:-1:-1;;;1759:1:13;;;;;;;;;;;131:5057:14;1759:1:13;131:5057:14;;;1759:1:13;;;;17533:80:17;;;;;;;;;;131:5057:14;;;;;;;;;;17573:10:17;:21;131:5057:14;;2709:51:17;3031:26;2227:103:13;-1:-1:-1;2227:103:13;2466:17:17;2227:103:13;2969:52:17;2227:103:13;3031:49:17;2227:103:13;;2770:47:17;2227:103:13;;;:::i;:::-;131:5057:14;;:::i;:::-;2433:23:17;;;2466:17;;;:27;2503:17;;;:27;2540:28;;;:49;2599:24;;;:41;131:5057:14;2650:28:17;;131:5057:14;;;2709:29:17;;;131:5057:14;;2709:51:17;131:5057:14;;2770:27:17;;;131:5057:14;;2770:47:17;2827:37;;;131:5057:14;2904:19:17;;;131:5057:14;2503:17:17;131:5057:14;;;;;;;;;;2969:52:17;;3015:4;2969:52;;;;;:::i;:::-;;:18;;131:5057:14;2969:52:17;;;;;;;17533:80;-1:-1:-1;2969:52:17;;;17533:80;-1:-1:-1;;;;;;131:5057:14;;;;;1937:12;131:5057;;;;;;;3031:26:17;131:5057:14;;-1:-1:-1;;131:5057:14;17587:7:17;131:5057:14;;;;3031:49:17;2292:1:13;1716;2809:22;1759:1;2629:209;2969:52:17;;;;2466:17;2969:52;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;131:5057:14;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;131:5057:14;;;;;;;;;;17533:80:17;131:5057:14;;17533:80:17;;;;;;;-1:-1:-1;;;;;131:5057:14;17533:80:17;131:5057:14;;17573:10:17;:21;131:5057:14;;2227:103:13;;:::i;:::-;131:5057:14;12729:99:17;;;;;;-1:-1:-1;131:5057:14;;;;;;;;;;;;;;;;;;;;12729:99:17;;131:5057:14;12729:99:17;;;131:5057:14;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;12729:99:17;;;;;;;;17533:80;12729:99;;17533:80;2292:1:13;;1716;2809:22;1759:1;2629:209;12729:99:17;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;131:5057:14;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;131:5057:14;;;;;;;;;;;;-1:-1:-1;;;131:5057:14;;;;;;;16781:264:17;131:5057:14;;-1:-1:-1;;;16984:54:17;;17003:10;16984:54;;;131:5057:14;17023:4:17;131:5057:14;;;;;;;;;;;;16984:54:17;;131:5057:14;;;;;;-1:-1:-1;;;;;;;131:5057:14;16984:54:17;;;;;;16781:264;16984:54;;16781:264;:::o;16984:54::-;;;;;;;;;;;;;:::i;:::-;;16781:264::o;16984:54::-;;;:::i;:::-;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.17;\n\npragma experimental ABIEncoderV2;\n\nimport \"./base/BaseController.sol\";\n\ncontract ExternalBondingCurveController is BaseController {\n\n     /**\n     * @notice Constructor for the controller implementation class\n     *\n     * @param _vaultAddress - Vault contract address\n     * @param _managedPoolFactory - Managed pool contract address\n     */\n    constructor(address _vaultAddress,\n                address _managedPoolFactory) BaseController(_vaultAddress, _managedPoolFactory) {}\n\n    function _convertERC20ToAsset(IERC20 _token) internal pure returns (IAsset asset) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            asset := _token\n        }\n    }\n\n    /**\n     * @notice Runs a check and transfers reserve tokens as needed\n     * @dev To avoid too many fees, this should be run at wide intervals such as daily\n     *\n     * @param _poolAddress - Address of pool being worked on.\n     */\n    function runCheck(address _poolAddress) public restricted nonReentrant\n    {\n        IManagedPool managedPool;\n        managedPool = IManagedPool(_poolAddress);\n        bytes32 poolId = managedPool.getPoolId();\n\n        uint256[] memory normalizedWeights = managedPool.getNormalizedWeights();\n        IERC20[] memory tokens;\n        uint256[] memory balances;\n        (tokens, balances,) = vault.getPoolTokens(poolId);\n        IAsset[] memory assets = _convertERC20sToAssets(tokens);\n\n        uint256 tokenAPrice = (balances[1] / normalizedWeights[1]) / (balances[0] / normalizedWeights[0]);\n\n        uint256[] memory joinAmounts;\n        uint256[] memory exitAmounts;\n\n        bool bJoin = false;\n        bool bExit = false;\n\n        IAsset[] memory joinAssets;\n        IAsset[] memory exitAssets;\n\n        // If token 0 price is too low then remove an amount of token 0 else if too high then add an amount of token 0\n        if (tokenAPrice < managedPools[_poolAddress].prices[address(assets[0])].price)\n        {\n            uint256 tokenABalancePercentToMove = 100 - (100 / managedPools[_poolAddress].prices[address(tokens[0])].price * tokenAPrice);\n            uint256 tokenABalanceToMove = balances[0] / 100 * tokenABalancePercentToMove;\n\n            exitAmounts[0] = tokenABalanceToMove;\n            exitAssets[0] = assets[0];\n            bExit = true;\n        }\n        else if (tokenAPrice > managedPools[_poolAddress].prices[address(assets[0])].price)\n        {\n            uint256 tokenABalancePercentToMove = 100 / managedPools[_poolAddress].prices[address(tokens[0])].price * tokenAPrice - 100;\n            uint256 tokenbABalanceToMove = balances[0] / 100 * tokenABalancePercentToMove;\n\n            joinAmounts[0] = tokenbABalanceToMove;\n            joinAssets[0] = assets[0];\n            bJoin = true;\n        }\n\n        // Balance subsequent tokens against the first token following same logic as for token 0\n        for (uint256 i = 1; i < tokens.length; i++) {\n            uint256 tokenPrice = (balances[0] / normalizedWeights[0]) / (balances[i] / normalizedWeights[i]);\n\n            if (tokenPrice < managedPools[_poolAddress].prices[address(tokens[i])].price)\n            {\n                uint256 tokenBalancePercentToMove = 100 - (100 / managedPools[_poolAddress].prices[address(tokens[i])].price * tokenPrice);\n                uint256 tokenBalanceToMove = balances[i] / 100 * tokenBalancePercentToMove;\n                \n                exitAmounts[exitAmounts.length - 1] = tokenBalanceToMove;\n                exitAssets[exitAssets.length - 1] = assets[i];\n                bExit = true;\n            }\n            else if (tokenPrice < managedPools[_poolAddress].prices[address(tokens[i])].price)\n            {\n                uint256 tokenBalancePercentToMove = 100 / managedPools[_poolAddress].prices[address(tokens[i])].price * tokenPrice - 100;\n                uint256 tokenBalanceToMove = balances[i] / 100 * tokenBalancePercentToMove;\n\n                joinAmounts[joinAmounts.length - 1] = tokenBalanceToMove;\n                joinAssets[joinAssets.length - 1] = assets[i];\n                bJoin = true;\n            }\n        }\n\n        // If there's tokens to remove then call exitPool\n        if (bExit)\n        {\n            IVault.ExitPoolRequest memory newExitRequest;\n            newExitRequest.assets = assets;\n            newExitRequest.userData = \"\";\n            newExitRequest.toInternalBalance = true;\n            newExitRequest.minAmountsOut = exitAmounts;\n\n            vault.exitPool(poolId,\n                           address(this),\n                           payable(_poolAddress),\n                           newExitRequest);\n        }\n\n        // If there's tokens to add then call joinPool\n        if (bJoin)\n        {\n            IVault.JoinPoolRequest memory newJoinRequest;\n            newJoinRequest.assets = assets;\n            newJoinRequest.userData = \"\";\n            newJoinRequest.fromInternalBalance = true;\n            newJoinRequest.maxAmountsIn = joinAmounts;\n\n            vault.joinPool(poolId,\n                           address(this),\n                           _poolAddress,\n                           newJoinRequest);\n        }\n    }\n}\n",
  "sourcePath": "/home/eagle/Source/x/Balancer.Controller/contracts/ExternalBondingCurveController.sol",
  "ast": {
    "absolutePath": "project:/contracts/ExternalBondingCurveController.sol",
    "exportedSymbols": {
      "BaseController": [
        3230
      ],
      "ExternalBondingCurveController": [
        1802
      ],
      "IAsset": [
        430
      ],
      "IAuthentication": [
        296
      ],
      "IAuthorizer": [
        445
      ],
      "IBasePool": [
        569
      ],
      "IERC20": [
        426
      ],
      "IFlashLoanRecipient": [
        589
      ],
      "IManagedPool": [
        285
      ],
      "IPoolSwapStructs": [
        617
      ],
      "IProtocolFeesCollector": [
        686
      ],
      "ISignaturesValidator": [
        314
      ],
      "ITemporarilyPausable": [
        333
      ],
      "IVault": [
        1199
      ],
      "IWETH": [
        348
      ],
      "ManagedPoolFactory": [
        2432
      ],
      "ManagedPoolSettings": [
        2457
      ],
      "PoolPrice": [
        2469
      ],
      "PoolSettings": [
        2477
      ],
      "ReentrancyGuard": [
        1253
      ]
    },
    "id": 1803,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1255,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:14"
      },
      {
        "id": 1256,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:33:14"
      },
      {
        "absolutePath": "project:/contracts/base/BaseController.sol",
        "file": "./base/BaseController.sol",
        "id": 1257,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1803,
        "sourceUnit": 3231,
        "src": "94:35:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1258,
              "name": "BaseController",
              "nameLocations": [
                "174:14:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3230,
              "src": "174:14:14"
            },
            "id": 1259,
            "nodeType": "InheritanceSpecifier",
            "src": "174:14:14"
          }
        ],
        "canonicalName": "ExternalBondingCurveController",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1802,
        "linearizedBaseContracts": [
          1802,
          3230,
          1253
        ],
        "name": "ExternalBondingCurveController",
        "nameLocation": "140:30:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "537:2:14",
              "statements": []
            },
            "documentation": {
              "id": 1260,
              "nodeType": "StructuredDocumentation",
              "src": "197:204:14",
              "text": " @notice Constructor for the controller implementation class\n @param _vaultAddress - Vault contract address\n @param _managedPoolFactory - Managed pool contract address"
            },
            "id": 1272,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1267,
                    "name": "_vaultAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1262,
                    "src": "501:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1268,
                    "name": "_managedPoolFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1264,
                    "src": "516:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1269,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1266,
                  "name": "BaseController",
                  "nameLocations": [
                    "486:14:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3230,
                  "src": "486:14:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "486:50:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1262,
                  "mutability": "mutable",
                  "name": "_vaultAddress",
                  "nameLocation": "426:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "418:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "418:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1264,
                  "mutability": "mutable",
                  "name": "_managedPoolFactory",
                  "nameLocation": "465:19:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "457:27:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "417:68:14"
            },
            "returnParameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:14"
            },
            "scope": 1802,
            "src": "406:133:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "627:120:14",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "702:39:14",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "716:15:14",
                        "value": {
                          "name": "_token",
                          "nodeType": "YulIdentifier",
                          "src": "725:6:14"
                        },
                        "variableNames": [
                          {
                            "name": "asset",
                            "nodeType": "YulIdentifier",
                            "src": "716:5:14"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 1275,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "725:6:14",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1279,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "716:5:14",
                      "valueSize": 1
                    }
                  ],
                  "id": 1281,
                  "nodeType": "InlineAssembly",
                  "src": "693:48:14"
                }
              ]
            },
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_convertERC20ToAsset",
            "nameLocation": "554:20:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "582:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "575:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$426",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1274,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1273,
                      "name": "IERC20",
                      "nameLocations": [
                        "575:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 426,
                      "src": "575:6:14"
                    },
                    "referencedDeclaration": 426,
                    "src": "575:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$426",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "574:15:14"
            },
            "returnParameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1279,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "620:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "613:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAsset_$430",
                    "typeString": "contract IAsset"
                  },
                  "typeName": {
                    "id": 1278,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1277,
                      "name": "IAsset",
                      "nameLocations": [
                        "613:6:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 430,
                      "src": "613:6:14"
                    },
                    "referencedDeclaration": 430,
                    "src": "613:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAsset_$430",
                      "typeString": "contract IAsset"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "612:14:14"
            },
            "scope": 1802,
            "src": "545:202:14",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1800,
              "nodeType": "Block",
              "src": "1067:4119:14",
              "statements": [
                {
                  "assignments": [
                    1295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1295,
                      "mutability": "mutable",
                      "name": "managedPool",
                      "nameLocation": "1090:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1077:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      },
                      "typeName": {
                        "id": 1294,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1293,
                          "name": "IManagedPool",
                          "nameLocations": [
                            "1077:12:14"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 285,
                          "src": "1077:12:14"
                        },
                        "referencedDeclaration": 285,
                        "src": "1077:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1296,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1077:24:14"
                },
                {
                  "expression": {
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1297,
                      "name": "managedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1295,
                      "src": "1111:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1299,
                          "name": "_poolAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1286,
                          "src": "1138:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1298,
                        "name": "IManagedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "1125:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IManagedPool_$285_$",
                          "typeString": "type(contract IManagedPool)"
                        }
                      },
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1125:26:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IManagedPool_$285",
                        "typeString": "contract IManagedPool"
                      }
                    },
                    "src": "1111:40:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IManagedPool_$285",
                      "typeString": "contract IManagedPool"
                    }
                  },
                  "id": 1302,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:40:14"
                },
                {
                  "assignments": [
                    1304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1304,
                      "mutability": "mutable",
                      "name": "poolId",
                      "nameLocation": "1169:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1161:14:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1303,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1161:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1308,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1305,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "1178:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1190:9:14",
                      "memberName": "getPoolId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 509,
                      "src": "1178:21:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 1307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1178:23:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1161:40:14"
                },
                {
                  "assignments": [
                    1313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1313,
                      "mutability": "mutable",
                      "name": "normalizedWeights",
                      "nameLocation": "1229:17:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1212:34:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1311,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1212:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ArrayTypeName",
                        "src": "1212:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1317,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1314,
                        "name": "managedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "1249:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IManagedPool_$285",
                          "typeString": "contract IManagedPool"
                        }
                      },
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1261:20:14",
                      "memberName": "getNormalizedWeights",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 130,
                      "src": "1249:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (uint256[] memory)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:34:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1212:71:14"
                },
                {
                  "assignments": [
                    1322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1322,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "1309:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1293:22:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                        "typeString": "contract IERC20[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1320,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1319,
                            "name": "IERC20",
                            "nameLocations": [
                              "1293:6:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 426,
                            "src": "1293:6:14"
                          },
                          "referencedDeclaration": 426,
                          "src": "1293:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$426",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1321,
                        "nodeType": "ArrayTypeName",
                        "src": "1293:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_storage_ptr",
                          "typeString": "contract IERC20[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1323,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1293:22:14"
                },
                {
                  "assignments": [
                    1328
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1328,
                      "mutability": "mutable",
                      "name": "balances",
                      "nameLocation": "1342:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1325:25:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1326,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1325:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1327,
                        "nodeType": "ArrayTypeName",
                        "src": "1325:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1329,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1325:25:14"
                },
                {
                  "expression": {
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1330,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1322,
                          "src": "1361:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          }
                        },
                        {
                          "id": 1331,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1328,
                          "src": "1369:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        null
                      ],
                      "id": 1332,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1360:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$__$",
                        "typeString": "tuple(contract IERC20[] memory,uint256[] memory,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1335,
                          "name": "poolId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1304,
                          "src": "1402:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 1333,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2484,
                          "src": "1382:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVault_$1199",
                            "typeString": "contract IVault"
                          }
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1388:13:14",
                        "memberName": "getPoolTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 925,
                        "src": "1382:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                          "typeString": "function (bytes32) view external returns (contract IERC20[] memory,uint256[] memory,uint256)"
                        }
                      },
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1382:27:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
                        "typeString": "tuple(contract IERC20[] memory,uint256[] memory,uint256)"
                      }
                    },
                    "src": "1360:49:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:49:14"
                },
                {
                  "assignments": [
                    1343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1343,
                      "mutability": "mutable",
                      "name": "assets",
                      "nameLocation": "1435:6:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1419:22:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                        "typeString": "contract IAsset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1341,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1340,
                            "name": "IAsset",
                            "nameLocations": [
                              "1419:6:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 430,
                            "src": "1419:6:14"
                          },
                          "referencedDeclaration": 430,
                          "src": "1419:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$430",
                            "typeString": "contract IAsset"
                          }
                        },
                        "id": 1342,
                        "nodeType": "ArrayTypeName",
                        "src": "1419:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_storage_ptr",
                          "typeString": "contract IAsset[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1347,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1345,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "1467:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      ],
                      "id": 1344,
                      "name": "_convertERC20sToAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3186,
                      "src": "1444:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr_$returns$_t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr_$",
                        "typeString": "function (contract IERC20[] memory) pure returns (contract IAsset[] memory)"
                      }
                    },
                    "id": 1346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                      "typeString": "contract IAsset[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1419:55:14"
                },
                {
                  "assignments": [
                    1349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1349,
                      "mutability": "mutable",
                      "name": "tokenAPrice",
                      "nameLocation": "1493:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1485:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1485:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1367,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1350,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1328,
                              "src": "1508:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1352,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 1351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1517:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1508:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1353,
                              "name": "normalizedWeights",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1313,
                              "src": "1522:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1355,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 1354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1540:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1522:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1508:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1357,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1507:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1358,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1328,
                              "src": "1547:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1360,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1556:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1547:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 1361,
                              "name": "normalizedWeights",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1313,
                              "src": "1561:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1363,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1579:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1561:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1547:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1365,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1546:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1507:75:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1485:97:14"
                },
                {
                  "assignments": [
                    1372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1372,
                      "mutability": "mutable",
                      "name": "joinAmounts",
                      "nameLocation": "1610:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1593:28:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1371,
                        "nodeType": "ArrayTypeName",
                        "src": "1593:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1373,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1593:28:14"
                },
                {
                  "assignments": [
                    1378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1378,
                      "mutability": "mutable",
                      "name": "exitAmounts",
                      "nameLocation": "1648:11:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1631:28:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1631:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1377,
                        "nodeType": "ArrayTypeName",
                        "src": "1631:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1379,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1631:28:14"
                },
                {
                  "assignments": [
                    1381
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1381,
                      "mutability": "mutable",
                      "name": "bJoin",
                      "nameLocation": "1675:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1670:10:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1380,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1670:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1383,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1683:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1670:18:14"
                },
                {
                  "assignments": [
                    1385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1385,
                      "mutability": "mutable",
                      "name": "bExit",
                      "nameLocation": "1703:5:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1698:10:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1384,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1698:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1387,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1711:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1698:18:14"
                },
                {
                  "assignments": [
                    1392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1392,
                      "mutability": "mutable",
                      "name": "joinAssets",
                      "nameLocation": "1743:10:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1727:26:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                        "typeString": "contract IAsset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1390,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1389,
                            "name": "IAsset",
                            "nameLocations": [
                              "1727:6:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 430,
                            "src": "1727:6:14"
                          },
                          "referencedDeclaration": 430,
                          "src": "1727:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$430",
                            "typeString": "contract IAsset"
                          }
                        },
                        "id": 1391,
                        "nodeType": "ArrayTypeName",
                        "src": "1727:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_storage_ptr",
                          "typeString": "contract IAsset[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1393,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1727:26:14"
                },
                {
                  "assignments": [
                    1398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1398,
                      "mutability": "mutable",
                      "name": "exitAssets",
                      "nameLocation": "1779:10:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1800,
                      "src": "1763:26:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                        "typeString": "contract IAsset[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1396,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1395,
                            "name": "IAsset",
                            "nameLocations": [
                              "1763:6:14"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 430,
                            "src": "1763:6:14"
                          },
                          "referencedDeclaration": 430,
                          "src": "1763:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$430",
                            "typeString": "contract IAsset"
                          }
                        },
                        "id": 1397,
                        "nodeType": "ArrayTypeName",
                        "src": "1763:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_storage_ptr",
                          "typeString": "contract IAsset[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1399,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1763:26:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1400,
                      "name": "tokenAPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1349,
                      "src": "1923:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1401,
                              "name": "managedPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2492,
                              "src": "1937:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                "typeString": "mapping(address => struct PoolSettings storage ref)"
                              }
                            },
                            "id": 1403,
                            "indexExpression": {
                              "id": 1402,
                              "name": "_poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1286,
                              "src": "1950:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1937:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                              "typeString": "struct PoolSettings storage ref"
                            }
                          },
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1964:6:14",
                          "memberName": "prices",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2476,
                          "src": "1937:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                            "typeString": "mapping(address => struct PoolPrice storage ref)"
                          }
                        },
                        "id": 1411,
                        "indexExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1407,
                                "name": "assets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "1979:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                  "typeString": "contract IAsset[] memory"
                                }
                              },
                              "id": 1409,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1986:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1979:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$430",
                                "typeString": "contract IAsset"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAsset_$430",
                                "typeString": "contract IAsset"
                              }
                            ],
                            "id": 1406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1971:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1405,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1971:7:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1971:18:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1937:53:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                          "typeString": "struct PoolPrice storage ref"
                        }
                      },
                      "id": 1412,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1991:5:14",
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2468,
                      "src": "1937:59:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1923:73:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1465,
                        "name": "tokenAPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1349,
                        "src": "2379:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1466,
                                "name": "managedPools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2492,
                                "src": "2393:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                  "typeString": "mapping(address => struct PoolSettings storage ref)"
                                }
                              },
                              "id": 1468,
                              "indexExpression": {
                                "id": 1467,
                                "name": "_poolAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1286,
                                "src": "2406:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2393:26:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                "typeString": "struct PoolSettings storage ref"
                              }
                            },
                            "id": 1469,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2420:6:14",
                            "memberName": "prices",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2476,
                            "src": "2393:33:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                              "typeString": "mapping(address => struct PoolPrice storage ref)"
                            }
                          },
                          "id": 1476,
                          "indexExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1472,
                                  "name": "assets",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1343,
                                  "src": "2435:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                    "typeString": "contract IAsset[] memory"
                                  }
                                },
                                "id": 1474,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 1473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2442:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2435:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAsset_$430",
                                  "typeString": "contract IAsset"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAsset_$430",
                                  "typeString": "contract IAsset"
                                }
                              ],
                              "id": 1471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2427:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1470,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2427:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2427:18:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2393:53:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                            "typeString": "struct PoolPrice storage ref"
                          }
                        },
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2447:5:14",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2468,
                        "src": "2393:59:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2379:73:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1529,
                    "nodeType": "IfStatement",
                    "src": "2375:442:14",
                    "trueBody": {
                      "id": 1528,
                      "nodeType": "Block",
                      "src": "2462:355:14",
                      "statements": [
                        {
                          "assignments": [
                            1480
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1480,
                              "mutability": "mutable",
                              "name": "tokenABalancePercentToMove",
                              "nameLocation": "2484:26:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 1528,
                              "src": "2476:34:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1479,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2476:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1499,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "313030",
                                  "id": 1481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2513:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1482,
                                          "name": "managedPools",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2492,
                                          "src": "2519:12:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                            "typeString": "mapping(address => struct PoolSettings storage ref)"
                                          }
                                        },
                                        "id": 1484,
                                        "indexExpression": {
                                          "id": 1483,
                                          "name": "_poolAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1286,
                                          "src": "2532:12:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2519:26:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                          "typeString": "struct PoolSettings storage ref"
                                        }
                                      },
                                      "id": 1485,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2546:6:14",
                                      "memberName": "prices",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2476,
                                      "src": "2519:33:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                                        "typeString": "mapping(address => struct PoolPrice storage ref)"
                                      }
                                    },
                                    "id": 1492,
                                    "indexExpression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1488,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1322,
                                            "src": "2561:6:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                                              "typeString": "contract IERC20[] memory"
                                            }
                                          },
                                          "id": 1490,
                                          "indexExpression": {
                                            "hexValue": "30",
                                            "id": 1489,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2568:1:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2561:9:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$426",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$426",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 1487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2553:7:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1486,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2553:7:14",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1491,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2553:18:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2519:53:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                                      "typeString": "struct PoolPrice storage ref"
                                    }
                                  },
                                  "id": 1493,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2573:5:14",
                                  "memberName": "price",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2468,
                                  "src": "2519:59:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2513:65:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1495,
                                "name": "tokenAPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1349,
                                "src": "2581:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2513:79:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 1497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2595:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "2513:85:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2476:122:14"
                        },
                        {
                          "assignments": [
                            1501
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1501,
                              "mutability": "mutable",
                              "name": "tokenbABalanceToMove",
                              "nameLocation": "2620:20:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 1528,
                              "src": "2612:28:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1500,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2612:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1509,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1502,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1328,
                                  "src": "2643:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1504,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 1503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2652:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2643:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2657:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "2643:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1507,
                              "name": "tokenABalancePercentToMove",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1480,
                              "src": "2663:26:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2643:46:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2612:77:14"
                        },
                        {
                          "expression": {
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1510,
                                "name": "joinAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1372,
                                "src": "2704:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1512,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2716:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "2704:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1513,
                              "name": "tokenbABalanceToMove",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1501,
                              "src": "2721:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2704:37:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1515,
                          "nodeType": "ExpressionStatement",
                          "src": "2704:37:14"
                        },
                        {
                          "expression": {
                            "id": 1522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1516,
                                "name": "joinAssets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1392,
                                "src": "2755:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                  "typeString": "contract IAsset[] memory"
                                }
                              },
                              "id": 1518,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2766:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "2755:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$430",
                                "typeString": "contract IAsset"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "baseExpression": {
                                "id": 1519,
                                "name": "assets",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1343,
                                "src": "2771:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                  "typeString": "contract IAsset[] memory"
                                }
                              },
                              "id": 1521,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2778:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2771:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAsset_$430",
                                "typeString": "contract IAsset"
                              }
                            },
                            "src": "2755:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$430",
                              "typeString": "contract IAsset"
                            }
                          },
                          "id": 1523,
                          "nodeType": "ExpressionStatement",
                          "src": "2755:25:14"
                        },
                        {
                          "expression": {
                            "id": 1526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1524,
                              "name": "bJoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1381,
                              "src": "2794:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 1525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2802:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "2794:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1527,
                          "nodeType": "ExpressionStatement",
                          "src": "2794:12:14"
                        }
                      ]
                    }
                  },
                  "id": 1530,
                  "nodeType": "IfStatement",
                  "src": "1919:898:14",
                  "trueBody": {
                    "id": 1464,
                    "nodeType": "Block",
                    "src": "2006:355:14",
                    "statements": [
                      {
                        "assignments": [
                          1415
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1415,
                            "mutability": "mutable",
                            "name": "tokenABalancePercentToMove",
                            "nameLocation": "2028:26:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1464,
                            "src": "2020:34:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1414,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2020:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1435,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "313030",
                            "id": 1416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2057:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "313030",
                                    "id": 1417,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2064:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1418,
                                            "name": "managedPools",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2492,
                                            "src": "2070:12:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                              "typeString": "mapping(address => struct PoolSettings storage ref)"
                                            }
                                          },
                                          "id": 1420,
                                          "indexExpression": {
                                            "id": 1419,
                                            "name": "_poolAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1286,
                                            "src": "2083:12:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2070:26:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                            "typeString": "struct PoolSettings storage ref"
                                          }
                                        },
                                        "id": 1421,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2097:6:14",
                                        "memberName": "prices",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2476,
                                        "src": "2070:33:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                                          "typeString": "mapping(address => struct PoolPrice storage ref)"
                                        }
                                      },
                                      "id": 1428,
                                      "indexExpression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 1424,
                                              "name": "tokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1322,
                                              "src": "2112:6:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                                                "typeString": "contract IERC20[] memory"
                                              }
                                            },
                                            "id": 1426,
                                            "indexExpression": {
                                              "hexValue": "30",
                                              "id": 1425,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2119:1:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2112:9:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$426",
                                              "typeString": "contract IERC20"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_IERC20_$426",
                                              "typeString": "contract IERC20"
                                            }
                                          ],
                                          "id": 1423,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2104:7:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1422,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2104:7:14",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 1427,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2104:18:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2070:53:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                                        "typeString": "struct PoolPrice storage ref"
                                      }
                                    },
                                    "id": 1429,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2124:5:14",
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2468,
                                    "src": "2070:59:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2064:65:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1431,
                                  "name": "tokenAPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1349,
                                  "src": "2132:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2064:79:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1433,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2063:81:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2057:87:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2020:124:14"
                      },
                      {
                        "assignments": [
                          1437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1437,
                            "mutability": "mutable",
                            "name": "tokenABalanceToMove",
                            "nameLocation": "2166:19:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1464,
                            "src": "2158:27:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1436,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2158:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1445,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1438,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1328,
                                "src": "2188:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 1440,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2197:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2188:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2202:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "2188:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1443,
                            "name": "tokenABalancePercentToMove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "2208:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2188:46:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2158:76:14"
                      },
                      {
                        "expression": {
                          "id": 1450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1446,
                              "name": "exitAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1378,
                              "src": "2249:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1448,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2261:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2249:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1449,
                            "name": "tokenABalanceToMove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1437,
                            "src": "2266:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2249:36:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1451,
                        "nodeType": "ExpressionStatement",
                        "src": "2249:36:14"
                      },
                      {
                        "expression": {
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1452,
                              "name": "exitAssets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1398,
                              "src": "2299:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                "typeString": "contract IAsset[] memory"
                              }
                            },
                            "id": 1454,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2310:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2299:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$430",
                              "typeString": "contract IAsset"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1455,
                              "name": "assets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1343,
                              "src": "2315:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                "typeString": "contract IAsset[] memory"
                              }
                            },
                            "id": 1457,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2322:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2315:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IAsset_$430",
                              "typeString": "contract IAsset"
                            }
                          },
                          "src": "2299:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAsset_$430",
                            "typeString": "contract IAsset"
                          }
                        },
                        "id": 1459,
                        "nodeType": "ExpressionStatement",
                        "src": "2299:25:14"
                      },
                      {
                        "expression": {
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1460,
                            "name": "bExit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1385,
                            "src": "2338:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2346:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2338:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1463,
                        "nodeType": "ExpressionStatement",
                        "src": "2338:12:14"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 1705,
                    "nodeType": "Block",
                    "src": "2968:1177:14",
                    "statements": [
                      {
                        "assignments": [
                          1543
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1543,
                            "mutability": "mutable",
                            "name": "tokenPrice",
                            "nameLocation": "2990:10:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1705,
                            "src": "2982:18:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1542,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2982:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1561,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1544,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1328,
                                    "src": "3004:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1546,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 1545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3013:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3004:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 1547,
                                    "name": "normalizedWeights",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1313,
                                    "src": "3018:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1549,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 1548,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3036:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3018:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3004:34:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1551,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3003:36:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1552,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1328,
                                    "src": "3043:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1554,
                                  "indexExpression": {
                                    "id": 1553,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "3052:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3043:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 1555,
                                    "name": "normalizedWeights",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1313,
                                    "src": "3057:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1557,
                                  "indexExpression": {
                                    "id": 1556,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "3075:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3057:20:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3043:34:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1559,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3042:36:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3003:75:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2982:96:14"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1562,
                            "name": "tokenPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1543,
                            "src": "3097:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1563,
                                    "name": "managedPools",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2492,
                                    "src": "3110:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                      "typeString": "mapping(address => struct PoolSettings storage ref)"
                                    }
                                  },
                                  "id": 1565,
                                  "indexExpression": {
                                    "id": 1564,
                                    "name": "_poolAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1286,
                                    "src": "3123:12:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3110:26:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                    "typeString": "struct PoolSettings storage ref"
                                  }
                                },
                                "id": 1566,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3137:6:14",
                                "memberName": "prices",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2476,
                                "src": "3110:33:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                                  "typeString": "mapping(address => struct PoolPrice storage ref)"
                                }
                              },
                              "id": 1573,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1569,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1322,
                                      "src": "3152:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                                        "typeString": "contract IERC20[] memory"
                                      }
                                    },
                                    "id": 1571,
                                    "indexExpression": {
                                      "id": 1570,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "3159:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3152:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$426",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$426",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 1568,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3144:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1567,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3144:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3144:18:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3110:53:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                                "typeString": "struct PoolPrice storage ref"
                              }
                            },
                            "id": 1574,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3164:5:14",
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2468,
                            "src": "3110:59:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3097:72:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1633,
                              "name": "tokenPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1543,
                              "src": "3636:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1634,
                                      "name": "managedPools",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2492,
                                      "src": "3649:12:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                        "typeString": "mapping(address => struct PoolSettings storage ref)"
                                      }
                                    },
                                    "id": 1636,
                                    "indexExpression": {
                                      "id": 1635,
                                      "name": "_poolAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1286,
                                      "src": "3662:12:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3649:26:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                      "typeString": "struct PoolSettings storage ref"
                                    }
                                  },
                                  "id": 1637,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3676:6:14",
                                  "memberName": "prices",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2476,
                                  "src": "3649:33:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                                    "typeString": "mapping(address => struct PoolPrice storage ref)"
                                  }
                                },
                                "id": 1644,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 1640,
                                        "name": "tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1322,
                                        "src": "3691:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                                          "typeString": "contract IERC20[] memory"
                                        }
                                      },
                                      "id": 1642,
                                      "indexExpression": {
                                        "id": 1641,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1532,
                                        "src": "3698:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3691:9:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$426",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$426",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1639,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3683:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1638,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3683:7:14",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3683:18:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3649:53:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                                  "typeString": "struct PoolPrice storage ref"
                                }
                              },
                              "id": 1645,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3703:5:14",
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2468,
                              "src": "3649:59:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3636:72:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1703,
                          "nodeType": "IfStatement",
                          "src": "3632:503:14",
                          "trueBody": {
                            "id": 1702,
                            "nodeType": "Block",
                            "src": "3722:413:14",
                            "statements": [
                              {
                                "assignments": [
                                  1648
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1648,
                                    "mutability": "mutable",
                                    "name": "tokenBalancePercentToMove",
                                    "nameLocation": "3748:25:14",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1702,
                                    "src": "3740:33:14",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1647,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3740:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1667,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1664,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1662,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "313030",
                                        "id": 1649,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3776:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 1650,
                                                "name": "managedPools",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2492,
                                                "src": "3782:12:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                                  "typeString": "mapping(address => struct PoolSettings storage ref)"
                                                }
                                              },
                                              "id": 1652,
                                              "indexExpression": {
                                                "id": 1651,
                                                "name": "_poolAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1286,
                                                "src": "3795:12:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3782:26:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                                "typeString": "struct PoolSettings storage ref"
                                              }
                                            },
                                            "id": 1653,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "3809:6:14",
                                            "memberName": "prices",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2476,
                                            "src": "3782:33:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                                              "typeString": "mapping(address => struct PoolPrice storage ref)"
                                            }
                                          },
                                          "id": 1660,
                                          "indexExpression": {
                                            "arguments": [
                                              {
                                                "baseExpression": {
                                                  "id": 1656,
                                                  "name": "tokens",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1322,
                                                  "src": "3824:6:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                                                    "typeString": "contract IERC20[] memory"
                                                  }
                                                },
                                                "id": 1658,
                                                "indexExpression": {
                                                  "id": 1657,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1532,
                                                  "src": "3831:1:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "3824:9:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC20_$426",
                                                  "typeString": "contract IERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_IERC20_$426",
                                                  "typeString": "contract IERC20"
                                                }
                                              ],
                                              "id": 1655,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3816:7:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 1654,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3816:7:14",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1659,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3816:18:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3782:53:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                                            "typeString": "struct PoolPrice storage ref"
                                          }
                                        },
                                        "id": 1661,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3836:5:14",
                                        "memberName": "price",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2468,
                                        "src": "3782:59:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3776:65:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1663,
                                      "name": "tokenPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1543,
                                      "src": "3844:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3776:78:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 1665,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3857:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "3776:84:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "3740:120:14"
                              },
                              {
                                "assignments": [
                                  1669
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1669,
                                    "mutability": "mutable",
                                    "name": "tokenBalanceToMove",
                                    "nameLocation": "3886:18:14",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1702,
                                    "src": "3878:26:14",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1668,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3878:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1677,
                                "initialValue": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1676,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1670,
                                        "name": "balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1328,
                                        "src": "3907:8:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 1672,
                                      "indexExpression": {
                                        "id": 1671,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1532,
                                        "src": "3916:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3907:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "313030",
                                      "id": 1673,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3921:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    },
                                    "src": "3907:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1675,
                                    "name": "tokenBalancePercentToMove",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1648,
                                    "src": "3927:25:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3907:45:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "3878:74:14"
                              },
                              {
                                "expression": {
                                  "id": 1685,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1678,
                                      "name": "joinAmounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1372,
                                      "src": "3971:11:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1683,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1682,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1679,
                                          "name": "joinAmounts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1372,
                                          "src": "3983:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 1680,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3995:6:14",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "3983:18:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1681,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4004:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3983:22:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "3971:35:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 1684,
                                    "name": "tokenBalanceToMove",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1669,
                                    "src": "4009:18:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3971:56:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1686,
                                "nodeType": "ExpressionStatement",
                                "src": "3971:56:14"
                              },
                              {
                                "expression": {
                                  "id": 1696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 1687,
                                      "name": "joinAssets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1392,
                                      "src": "4045:10:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                        "typeString": "contract IAsset[] memory"
                                      }
                                    },
                                    "id": 1692,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1691,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1688,
                                          "name": "joinAssets",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1392,
                                          "src": "4056:10:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                            "typeString": "contract IAsset[] memory"
                                          }
                                        },
                                        "id": 1689,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4067:6:14",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "4056:17:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1690,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4076:1:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "4056:21:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "4045:33:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IAsset_$430",
                                      "typeString": "contract IAsset"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "baseExpression": {
                                      "id": 1693,
                                      "name": "assets",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1343,
                                      "src": "4081:6:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                        "typeString": "contract IAsset[] memory"
                                      }
                                    },
                                    "id": 1695,
                                    "indexExpression": {
                                      "id": 1694,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "4088:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4081:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IAsset_$430",
                                      "typeString": "contract IAsset"
                                    }
                                  },
                                  "src": "4045:45:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAsset_$430",
                                    "typeString": "contract IAsset"
                                  }
                                },
                                "id": 1697,
                                "nodeType": "ExpressionStatement",
                                "src": "4045:45:14"
                              },
                              {
                                "expression": {
                                  "id": 1700,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1698,
                                    "name": "bJoin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1381,
                                    "src": "4108:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "74727565",
                                    "id": 1699,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4116:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  "src": "4108:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1701,
                                "nodeType": "ExpressionStatement",
                                "src": "4108:12:14"
                              }
                            ]
                          }
                        },
                        "id": 1704,
                        "nodeType": "IfStatement",
                        "src": "3093:1042:14",
                        "trueBody": {
                          "id": 1632,
                          "nodeType": "Block",
                          "src": "3183:431:14",
                          "statements": [
                            {
                              "assignments": [
                                1577
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1577,
                                  "mutability": "mutable",
                                  "name": "tokenBalancePercentToMove",
                                  "nameLocation": "3209:25:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1632,
                                  "src": "3201:33:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1576,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3201:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1597,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1596,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "313030",
                                  "id": 1578,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3237:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1594,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1592,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "313030",
                                          "id": 1579,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3244:3:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1580,
                                                  "name": "managedPools",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 2492,
                                                  "src": "3250:12:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolSettings_$2477_storage_$",
                                                    "typeString": "mapping(address => struct PoolSettings storage ref)"
                                                  }
                                                },
                                                "id": 1582,
                                                "indexExpression": {
                                                  "id": 1581,
                                                  "name": "_poolAddress",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1286,
                                                  "src": "3263:12:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "3250:26:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_PoolSettings_$2477_storage",
                                                  "typeString": "struct PoolSettings storage ref"
                                                }
                                              },
                                              "id": 1583,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "3277:6:14",
                                              "memberName": "prices",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2476,
                                              "src": "3250:33:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PoolPrice_$2469_storage_$",
                                                "typeString": "mapping(address => struct PoolPrice storage ref)"
                                              }
                                            },
                                            "id": 1590,
                                            "indexExpression": {
                                              "arguments": [
                                                {
                                                  "baseExpression": {
                                                    "id": 1586,
                                                    "name": "tokens",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1322,
                                                    "src": "3292:6:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                                                      "typeString": "contract IERC20[] memory"
                                                    }
                                                  },
                                                  "id": 1588,
                                                  "indexExpression": {
                                                    "id": 1587,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1532,
                                                    "src": "3299:1:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "3292:9:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$426",
                                                    "typeString": "contract IERC20"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_IERC20_$426",
                                                    "typeString": "contract IERC20"
                                                  }
                                                ],
                                                "id": 1585,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "3284:7:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 1584,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "3284:7:14",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 1589,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "3284:18:14",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "3250:53:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_PoolPrice_$2469_storage",
                                              "typeString": "struct PoolPrice storage ref"
                                            }
                                          },
                                          "id": 1591,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3304:5:14",
                                          "memberName": "price",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2468,
                                          "src": "3250:59:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3244:65:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1593,
                                        "name": "tokenPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1543,
                                        "src": "3312:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3244:78:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1595,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3243:80:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3237:86:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3201:122:14"
                            },
                            {
                              "assignments": [
                                1599
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1599,
                                  "mutability": "mutable",
                                  "name": "tokenBalanceToMove",
                                  "nameLocation": "3349:18:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1632,
                                  "src": "3341:26:14",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1598,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3341:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1607,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1604,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1600,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1328,
                                      "src": "3370:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1602,
                                    "indexExpression": {
                                      "id": 1601,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1532,
                                      "src": "3379:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3370:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "313030",
                                    "id": 1603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3384:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "3370:17:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1605,
                                  "name": "tokenBalancePercentToMove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1577,
                                  "src": "3390:25:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3370:45:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3341:74:14"
                            },
                            {
                              "expression": {
                                "id": 1615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1608,
                                    "name": "exitAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1378,
                                    "src": "3450:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1613,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1612,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1609,
                                        "name": "exitAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1378,
                                        "src": "3462:11:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 1610,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3474:6:14",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "3462:18:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1611,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3483:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3462:22:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3450:35:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1614,
                                  "name": "tokenBalanceToMove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1599,
                                  "src": "3488:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3450:56:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1616,
                              "nodeType": "ExpressionStatement",
                              "src": "3450:56:14"
                            },
                            {
                              "expression": {
                                "id": 1626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1617,
                                    "name": "exitAssets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1398,
                                    "src": "3524:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                      "typeString": "contract IAsset[] memory"
                                    }
                                  },
                                  "id": 1622,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1621,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1618,
                                        "name": "exitAssets",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1398,
                                        "src": "3535:10:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                          "typeString": "contract IAsset[] memory"
                                        }
                                      },
                                      "id": 1619,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3546:6:14",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "3535:17:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1620,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3555:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3535:21:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3524:33:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAsset_$430",
                                    "typeString": "contract IAsset"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1623,
                                    "name": "assets",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1343,
                                    "src": "3560:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                                      "typeString": "contract IAsset[] memory"
                                    }
                                  },
                                  "id": 1625,
                                  "indexExpression": {
                                    "id": 1624,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1532,
                                    "src": "3567:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3560:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAsset_$430",
                                    "typeString": "contract IAsset"
                                  }
                                },
                                "src": "3524:45:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAsset_$430",
                                  "typeString": "contract IAsset"
                                }
                              },
                              "id": 1627,
                              "nodeType": "ExpressionStatement",
                              "src": "3524:45:14"
                            },
                            {
                              "expression": {
                                "id": 1630,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1628,
                                  "name": "bExit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1385,
                                  "src": "3587:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3595:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3587:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1631,
                              "nodeType": "ExpressionStatement",
                              "src": "3587:12:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1535,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1532,
                      "src": "2944:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1536,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "2948:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$426_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 1537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2955:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2948:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2944:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1706,
                  "initializationExpression": {
                    "assignments": [
                      1532
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1532,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2937:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "2929:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1531,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2929:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1534,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 1533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2941:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2929:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2963:3:14",
                      "subExpression": {
                        "id": 1539,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1532,
                        "src": "2963:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1541,
                    "nodeType": "ExpressionStatement",
                    "src": "2963:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "2924:1221:14"
                },
                {
                  "condition": {
                    "id": 1707,
                    "name": "bExit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1385,
                    "src": "4217:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1754,
                  "nodeType": "IfStatement",
                  "src": "4213:455:14",
                  "trueBody": {
                    "id": 1753,
                    "nodeType": "Block",
                    "src": "4232:436:14",
                    "statements": [
                      {
                        "assignments": [
                          1712
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1712,
                            "mutability": "mutable",
                            "name": "newExitRequest",
                            "nameLocation": "4276:14:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1753,
                            "src": "4246:44:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExitPoolRequest_$975_memory_ptr",
                              "typeString": "struct IVault.ExitPoolRequest"
                            },
                            "typeName": {
                              "id": 1711,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1710,
                                "name": "IVault.ExitPoolRequest",
                                "nameLocations": [
                                  "4246:6:14",
                                  "4253:15:14"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 975,
                                "src": "4246:22:14"
                              },
                              "referencedDeclaration": 975,
                              "src": "4246:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExitPoolRequest_$975_storage_ptr",
                                "typeString": "struct IVault.ExitPoolRequest"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1713,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4246:44:14"
                      },
                      {
                        "expression": {
                          "id": 1718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1714,
                              "name": "newExitRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1712,
                              "src": "4304:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExitPoolRequest_$975_memory_ptr",
                                "typeString": "struct IVault.ExitPoolRequest memory"
                              }
                            },
                            "id": 1716,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4319:6:14",
                            "memberName": "assets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 967,
                            "src": "4304:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                              "typeString": "contract IAsset[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1717,
                            "name": "assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "4328:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                              "typeString": "contract IAsset[] memory"
                            }
                          },
                          "src": "4304:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                            "typeString": "contract IAsset[] memory"
                          }
                        },
                        "id": 1719,
                        "nodeType": "ExpressionStatement",
                        "src": "4304:30:14"
                      },
                      {
                        "expression": {
                          "id": 1724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1720,
                              "name": "newExitRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1712,
                              "src": "4348:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExitPoolRequest_$975_memory_ptr",
                                "typeString": "struct IVault.ExitPoolRequest memory"
                              }
                            },
                            "id": 1722,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4363:8:14",
                            "memberName": "userData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 972,
                            "src": "4348:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 1723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4374:2:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "4348:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1725,
                        "nodeType": "ExpressionStatement",
                        "src": "4348:28:14"
                      },
                      {
                        "expression": {
                          "id": 1730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1726,
                              "name": "newExitRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1712,
                              "src": "4390:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExitPoolRequest_$975_memory_ptr",
                                "typeString": "struct IVault.ExitPoolRequest memory"
                              }
                            },
                            "id": 1728,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4405:17:14",
                            "memberName": "toInternalBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 974,
                            "src": "4390:32:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4425:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4390:39:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1731,
                        "nodeType": "ExpressionStatement",
                        "src": "4390:39:14"
                      },
                      {
                        "expression": {
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1732,
                              "name": "newExitRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1712,
                              "src": "4443:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExitPoolRequest_$975_memory_ptr",
                                "typeString": "struct IVault.ExitPoolRequest memory"
                              }
                            },
                            "id": 1734,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4458:13:14",
                            "memberName": "minAmountsOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 970,
                            "src": "4443:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1735,
                            "name": "exitAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "4474:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "4443:42:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1737,
                        "nodeType": "ExpressionStatement",
                        "src": "4443:42:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1741,
                              "name": "poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1304,
                              "src": "4515:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1744,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4558:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExternalBondingCurveController_$1802",
                                    "typeString": "contract ExternalBondingCurveController"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ExternalBondingCurveController_$1802",
                                    "typeString": "contract ExternalBondingCurveController"
                                  }
                                ],
                                "id": 1743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4550:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1742,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4550:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4550:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1748,
                                  "name": "_poolAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1286,
                                  "src": "4600:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4592:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1746,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4592:8:14",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4592:21:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1750,
                              "name": "newExitRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1712,
                              "src": "4642:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExitPoolRequest_$975_memory_ptr",
                                "typeString": "struct IVault.ExitPoolRequest memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_struct$_ExitPoolRequest_$975_memory_ptr",
                                "typeString": "struct IVault.ExitPoolRequest memory"
                              }
                            ],
                            "expression": {
                              "id": 1738,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2484,
                              "src": "4500:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$1199",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 1740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4506:8:14",
                            "memberName": "exitPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 963,
                            "src": "4500:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_address_payable_$_t_struct$_ExitPoolRequest_$975_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,address,address payable,struct IVault.ExitPoolRequest memory) external"
                            }
                          },
                          "id": 1751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4500:157:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1752,
                        "nodeType": "ExpressionStatement",
                        "src": "4500:157:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 1755,
                    "name": "bJoin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1381,
                    "src": "4737:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1799,
                  "nodeType": "IfStatement",
                  "src": "4733:447:14",
                  "trueBody": {
                    "id": 1798,
                    "nodeType": "Block",
                    "src": "4752:428:14",
                    "statements": [
                      {
                        "assignments": [
                          1760
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1760,
                            "mutability": "mutable",
                            "name": "newJoinRequest",
                            "nameLocation": "4796:14:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 1798,
                            "src": "4766:44:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JoinPoolRequest_$950_memory_ptr",
                              "typeString": "struct IVault.JoinPoolRequest"
                            },
                            "typeName": {
                              "id": 1759,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1758,
                                "name": "IVault.JoinPoolRequest",
                                "nameLocations": [
                                  "4766:6:14",
                                  "4773:15:14"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 950,
                                "src": "4766:22:14"
                              },
                              "referencedDeclaration": 950,
                              "src": "4766:22:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JoinPoolRequest_$950_storage_ptr",
                                "typeString": "struct IVault.JoinPoolRequest"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1761,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4766:44:14"
                      },
                      {
                        "expression": {
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1762,
                              "name": "newJoinRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1760,
                              "src": "4824:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JoinPoolRequest_$950_memory_ptr",
                                "typeString": "struct IVault.JoinPoolRequest memory"
                              }
                            },
                            "id": 1764,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4839:6:14",
                            "memberName": "assets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 942,
                            "src": "4824:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                              "typeString": "contract IAsset[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1765,
                            "name": "assets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "4848:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                              "typeString": "contract IAsset[] memory"
                            }
                          },
                          "src": "4824:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IAsset_$430_$dyn_memory_ptr",
                            "typeString": "contract IAsset[] memory"
                          }
                        },
                        "id": 1767,
                        "nodeType": "ExpressionStatement",
                        "src": "4824:30:14"
                      },
                      {
                        "expression": {
                          "id": 1772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1768,
                              "name": "newJoinRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1760,
                              "src": "4868:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JoinPoolRequest_$950_memory_ptr",
                                "typeString": "struct IVault.JoinPoolRequest memory"
                              }
                            },
                            "id": 1770,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4883:8:14",
                            "memberName": "userData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 947,
                            "src": "4868:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 1771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4894:2:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "4868:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1773,
                        "nodeType": "ExpressionStatement",
                        "src": "4868:28:14"
                      },
                      {
                        "expression": {
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1774,
                              "name": "newJoinRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1760,
                              "src": "4910:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JoinPoolRequest_$950_memory_ptr",
                                "typeString": "struct IVault.JoinPoolRequest memory"
                              }
                            },
                            "id": 1776,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4925:19:14",
                            "memberName": "fromInternalBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 949,
                            "src": "4910:34:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4947:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4910:41:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1779,
                        "nodeType": "ExpressionStatement",
                        "src": "4910:41:14"
                      },
                      {
                        "expression": {
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1780,
                              "name": "newJoinRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1760,
                              "src": "4965:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JoinPoolRequest_$950_memory_ptr",
                                "typeString": "struct IVault.JoinPoolRequest memory"
                              }
                            },
                            "id": 1782,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4980:12:14",
                            "memberName": "maxAmountsIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 945,
                            "src": "4965:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1783,
                            "name": "joinAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "4995:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "4965:41:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 1785,
                        "nodeType": "ExpressionStatement",
                        "src": "4965:41:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1789,
                              "name": "poolId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1304,
                              "src": "5036:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1792,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "5079:4:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ExternalBondingCurveController_$1802",
                                    "typeString": "contract ExternalBondingCurveController"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ExternalBondingCurveController_$1802",
                                    "typeString": "contract ExternalBondingCurveController"
                                  }
                                ],
                                "id": 1791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5071:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1790,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5071:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5071:13:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1794,
                              "name": "_poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1286,
                              "src": "5113:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1795,
                              "name": "newJoinRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1760,
                              "src": "5154:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JoinPoolRequest_$950_memory_ptr",
                                "typeString": "struct IVault.JoinPoolRequest memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_JoinPoolRequest_$950_memory_ptr",
                                "typeString": "struct IVault.JoinPoolRequest memory"
                              }
                            ],
                            "expression": {
                              "id": 1786,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2484,
                              "src": "5021:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$1199",
                                "typeString": "contract IVault"
                              }
                            },
                            "id": 1788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5027:8:14",
                            "memberName": "joinPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 938,
                            "src": "5021:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_bytes32_$_t_address_$_t_address_$_t_struct$_JoinPoolRequest_$950_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,address,address,struct IVault.JoinPoolRequest memory) payable external"
                            }
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5021:148:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1797,
                        "nodeType": "ExpressionStatement",
                        "src": "5021:148:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1284,
              "nodeType": "StructuredDocumentation",
              "src": "753:234:14",
              "text": " @notice Runs a check and transfers reserve tokens as needed\n @dev To avoid too many fees, this should be run at wide intervals such as daily\n @param _poolAddress - Address of pool being worked on."
            },
            "functionSelector": "4e4858d9",
            "id": 1801,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1289,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1288,
                  "name": "restricted",
                  "nameLocations": [
                    "1039:10:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3198,
                  "src": "1039:10:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "1039:10:14"
              },
              {
                "id": 1291,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1290,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1050:12:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1229,
                  "src": "1050:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "1050:12:14"
              }
            ],
            "name": "runCheck",
            "nameLocation": "1001:8:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "_poolAddress",
                  "nameLocation": "1018:12:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "1010:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1010:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1009:22:14"
            },
            "returnParameters": {
              "id": 1292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:14"
            },
            "scope": 1802,
            "src": "992:4194:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1803,
        "src": "131:5057:14",
        "usedErrors": []
      }
    ],
    "src": "33:5156:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-29T18:42:14.631Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAllowedAddress(address,address)": {
        "details": "Will fail if the address is already allowlisted. Emits the AllowlistAddressAdded event. This is a permissioned function.",
        "params": {
          "_member": "- The address to be added to the allowlist.",
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "addToken(address,address,address,uint256,uint256,address)": {
        "details": "By adding a token to the Pool's composition, the weights of all other tokens will be decreased. The new token will have no balance - it is up to the owner to provide some immediately after calling this function. Note however that regular join functions will not work while the new token has no balance: the only way to deposit an initial amount is by using an Asset Manager. Token addition is forbidden during a weight change, or if one is scheduled to happen in the future. The caller may additionally pass a non-zero `mintAmount` to have some BPT be minted for them, which might be useful in some scenarios to account for the fact that the Pool will have more tokens. Emits the TokenAdded event.",
        "params": {
          "_assetManager": "- The Asset Manager for the token.",
          "_mintAmount": "- The amount of BPT to be minted as a result of adding `token` to the Pool.",
          "_poolAddress": "- Address of pool being worked on.",
          "_recipient": "- The address to receive the BPT minted by the Pool.",
          "_tokenToAdd": "- The ERC20 token to be added to the Pool.",
          "_tokenToAddNormalizedWeight": "- The normalized weight of `token` relative to the other tokens in the Pool."
        }
      },
      "collectAumManagementFees(address)": {
        "details": "This can be called by anyone to collect accrued AUM fees - and will be called automatically whenever the supply changes (e.g., joins and exits, add and remove token), and before the fee percentage is changed by the manager, to prevent fees from being applied retroactively.",
        "params": {
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "constructor": {
        "params": {
          "_managedPoolFactory": "- Managed pool contract address",
          "_vaultAddress": "- Vault contract address"
        }
      },
      "createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256)": {
        "params": {
          "_assetManagers": "- Asset manager for the pool",
          "_aumFeeId": "- Aum Fee Id",
          "_managementAumFeePercentage": "- Management Aum fee to apply",
          "_mustAllowlistLPs": "- List of LP's allowed in the pool",
          "_name": "- Pool name",
          "_normalizedWeights": "- Normalized weights in the pool",
          "_swapEnabledOnStart": "- Whether swaps are enabled straight away",
          "_swapFeePercentage": "- Fee applied to swaps",
          "_symbol": "- Symbol representing the pool",
          "_tokens": "- Tokens in the pool"
        }
      },
      "depositTokens(uint256,address)": {
        "details": "Transfers an amount of an ERC20 token",
        "params": {
          "_amount": "- Amount to deposit.",
          "_tokenAddress": "- Address of token to be deposited."
        }
      },
      "removeAllowedAddress(address,address)": {
        "params": {
          "_member": "- The address to be removed from the allowlist.",
          "_poolAddress": "- Pool address being worked on"
        }
      },
      "removeToken(address,address,uint256,address)": {
        "details": "Tokens can only be removed if the Pool has more than 2 tokens, as it can never have fewer than 2 (not including BPT). Token removal is also forbidden during a weight change, or if one is scheduled to happen in the future. Emits the TokenRemoved event. This is a permissioned function. The caller may additionally pass a non-zero `burnAmount` to burn some of their BPT, which might be useful in some scenarios to account for the fact that the Pool now has fewer tokens. This is a permissioned function.",
        "params": {
          "_burnAmount": "- The amount of BPT to be burned after removing `token` from the Pool.",
          "_poolAddress": "- Address of pool being worked on.",
          "_sender": "- The address to burn BPT from.",
          "_tokenToRemove": "- The ERC20 token to be removed from the Pool."
        }
      },
      "runCheck(address)": {
        "details": "To avoid too many fees, this should be run at wide intervals such as daily",
        "params": {
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])": {
        "details": "This is a permissioned function. The lower and upper bounds are percentages, corresponding to a relative change in the token's spot price: e.g., a lower bound of 0.8 means the breaker should prevent trades that result in the value of the token dropping 20% or more relative to the rest of the pool.",
        "params": {
          "_bptPrices": "- Token prices to for the circuit breaker",
          "_lowerBoundPercentages": "- The lower limit to trigger the circuit breaker",
          "_poolAddress": "- Pool to have a circruit breaker set",
          "_tokens": "- Tokens in the pool",
          "_upperBoundPercentages": "- The upper limit to trigger the circuit breaker"
        }
      },
      "setJoinExitEnabled(address,bool)": {
        "details": "Emits the JoinExitEnabledSet event. This is a permissioned function.",
        "params": {
          "_joinExitEnabled": "- The new value of the join/exit enabled flag.",
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "setManagementAumFeePercentage(address,uint256)": {
        "details": "Attempting to collect AUM fees in excess of the maximum permitted percentage will revert. To avoid retroactive fee increases, we force collection at the current fee percentage before processing the update. Emits the ManagementAumFeePercentageChanged event. This is a permissioned function.",
        "params": {
          "_managementAumFeePercentage": "- The new management AUM fee percentage.",
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "setMustAllowlistLPs(address,bool)": {
        "details": "Note that any addresses added to the allowlist will be retained if the allowlist is toggled off and back on again, because this action does not affect the list of LP addresses. Emits the MustAllowlistLPsSet event. This is a permissioned function.",
        "params": {
          "_mustAllowlistLPs": "- The new value of the mustAllowlistLPs flag.",
          "_poolAddress": "- Address of pool being worked on."
        }
      },
      "setSwapEnabled(address,bool)": {
        "details": "Emits the SwapEnabledSet event. This is a permissioned function.",
        "params": {
          "_poolAddress": "- Address of pool being worked on.",
          "_swapEnabled": "- The new value of the swap enabled flag."
        }
      },
      "setTargetPoolPrices(address,address[],uint256[])": {
        "params": {
          "_pool": "- Pool to have prices set.",
          "_prices": "- The collection of prices to set",
          "_tokens": "- The collection of tokens to have prices set"
        }
      },
      "transferManagement(address)": {
        "details": "Only one manager can presently be set",
        "params": {
          "_manager": "- New manager."
        }
      },
      "updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)": {
        "details": "The swap fee will change from the given starting value (which may or may not be the current value) to the given ending fee percentage, over startTime to endTime. Note that calling this with a starting swap fee different from the current value will immediately change the current swap fee to `startSwapFeePercentage`, before commencing the gradual change at `startTime`. Emits the GradualSwapFeeUpdateScheduled event. This is a permissioned function.",
        "params": {
          "_endSwapFeePercentage": "- The ending value for the swap fee change. If the current timestamp >= endTime, `getSwapFeePercentage()` will return this value.",
          "_endTime": "- The timestamp when the swap fee change will end (must be >= startTime).",
          "_poolAddress": "- Address of pool being worked on.",
          "_startSwapFeePercentage": "- The starting value for the swap fee change.",
          "_startTime": "- The timestamp when the swap fee change will begin."
        }
      },
      "updateWeightsGradually(address,uint256,uint256,address[],uint256[])": {
        "details": "The weights will change from their current values to the given endWeights, over startTime to endTime. This is a permissioned function. Since, unlike with swap fee updates, we generally do not want to allow instantaneous weight changes, the weights always start from their current values. This also guarantees a smooth transition when updateWeightsGradually is called during an ongoing weight change.",
        "params": {
          "_endTime": "- The timestamp when the weight change will end (can be >= startTime).",
          "_endWeights": "- The target weights. If the current timestamp >= endTime, `getNormalizedWeights()` will return these values.",
          "_poolAddress": "- Address of pool being worked on.",
          "_startTime": "- The timestamp when the weight change will begin.",
          "_tokens": "- The tokens associated with the target weights (must match the current pool tokens)."
        }
      },
      "withdrawFunds(address,address,uint256)": {
        "details": "Transfers an amount of an ERC20 token",
        "params": {
          "_amount": "- Amount to withdraw.",
          "_recipientAddress": "- Address of wallet receiving funds.",
          "_tokenAddress": "- Address of token to be withdrawn."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAllowedAddress(address,address)": {
        "notice": "Adds an address to the LP allowlist."
      },
      "addToken(address,address,address,uint256,uint256,address)": {
        "notice": "Adds a token to the Pool's list of tradeable tokens. This is a permissioned function."
      },
      "collectAumManagementFees(address)": {
        "notice": "Collect any accrued AUM fees and send them to the pool manager."
      },
      "constructor": {
        "notice": "Constructor for the controller implementation class"
      },
      "createPool(string,string,address[],uint256[],address[],uint256,bool,bool,uint256,uint256)": {
        "notice": "Create a new managed pool"
      },
      "depositTokens(uint256,address)": {
        "notice": "Deposit tokens to controller"
      },
      "removeAllowedAddress(address,address)": {
        "notice": "Removes an address from the _poolAddress - Address of pool being worked on."
      },
      "removeToken(address,address,uint256,address)": {
        "notice": "Removes a token from the Pool's list of tradeable tokens."
      },
      "runCheck(address)": {
        "notice": "Runs a check and transfers reserve tokens as needed"
      },
      "setCircuitBreakers(address,address[],uint256[],uint256[],uint256[])": {
        "notice": "Set a circuit breaker for one or more tokens."
      },
      "setJoinExitEnabled(address,bool)": {
        "notice": "Enable or disable joins and exits. Note that this does not affect Recovery Mode exits."
      },
      "setManagementAumFeePercentage(address,uint256)": {
        "notice": "Setter for the yearly percentage AUM management fee, which is payable to the pool manager."
      },
      "setMustAllowlistLPs(address,bool)": {
        "notice": "Enable or disable the LP allowlist."
      },
      "setSwapEnabled(address,bool)": {
        "notice": "Enable or disable trading."
      },
      "setTargetPoolPrices(address,address[],uint256[])": {
        "notice": "Set target prices used for balancing"
      },
      "transferManagement(address)": {
        "notice": "Transfer the manager to a new address"
      },
      "updateSwapFeeGradually(address,uint256,uint256,uint256,uint256)": {
        "notice": "Schedule a gradual swap fee update."
      },
      "updateWeightsGradually(address,uint256,uint256,address[],uint256[])": {
        "notice": "Schedule a gradual weight change."
      },
      "withdrawFunds(address,address,uint256)": {
        "notice": "Withdraw tokens from controller"
      }
    },
    "version": 1
  }
}